
R version 4.0.1 (2020-06-06) -- "See Things Now"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "specmine"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('specmine')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aggregate_samples")
> ### * aggregate_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aggregate_samples
> ### Title: Aggregate samples
> ### Aliases: aggregate_samples
> ### Keywords: aggregation sample
> 
> ### ** Examples
> 
>   ## Example of aggregating samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis_proc = missingvalues_imputation(propolis)
>   dataset = aggregate_samples(propolis_proc, as.integer(propolis$metadata$seasons), "mean") 
Warning in remove_metadata_variables(newdataset, meta.to.remove) :
  No metadata variables removed since no fields matched the criteria
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("aov_all_vars")
> ### * aov_all_vars
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aov_all_vars
> ### Title: Analysis of variance
> ### Aliases: aov_all_vars
> ### Keywords: anova tukey
> 
> ### ** Examples
> 
>   ## Example of ANOVA with TukeyHSD
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis_proc = missingvalues_imputation(propolis)
>   propolis_proc = flat_pattern_filter(propolis_proc, "iqr", by.percent = TRUE,
+ 	red.value = 75) 
>   result = aov_all_vars(propolis_proc, "seasons", doTukey = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("apply_by_group")
> ### * apply_by_group
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apply_by_group
> ### Title: Apply by group
> ### Aliases: apply_by_group
> ### Keywords: apply group
> 
> ### ** Examples
> 
>      ## Example of applying a function to a group
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      apply.group.result = apply_by_group(cachexia, mean, "Muscle.loss", 
+ 			  "control")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("apply_by_groups")
> ### * apply_by_groups
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apply_by_groups
> ### Title: Apply by groups
> ### Aliases: apply_by_groups
> ### Keywords: groups apply
> 
> ### ** Examples
> 
>      ## Example of applying a function to groups
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      apply.groups.result = apply_by_groups(cachexia, "Muscle.loss", mean)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("apply_by_sample")
> ### * apply_by_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apply_by_sample
> ### Title: Apply function to samples
> ### Aliases: apply_by_sample
> ### Keywords: apply sample
> 
> ### ** Examples
> 
>      ## Example of applying a function to variables
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      apply.samples.result = apply_by_sample(cachexia, mean)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("apply_by_variable")
> ### * apply_by_variable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apply_by_variable
> ### Title: Apply function to variables
> ### Aliases: apply_by_variable
> ### Keywords: apply variable
> 
> ### ** Examples
> 
>      ## Example of applying a function to variables
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      apply.variables.result = apply_by_variable(cachexia, mean)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("background_correction")
> ### * background_correction
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: background_correction
> ### Title: Background correction
> ### Aliases: background_correction
> ### Keywords: background correction
> 
> ### ** Examples
> 
>   ## Example of background correction
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia.corrected = background_correction(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("boxplot_variables")
> ### * boxplot_variables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: boxplot_variables
> ### Title: Boxplot of variables
> ### Aliases: boxplot_variables
> ### Keywords: boxplot variables
> 
> ### ** Examples
> 
>   ## Example of showing the boxplot of a few variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   boxplot_variables(cachexia, variables = c("Creatine","Serine","Lactate"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("boxplot_vars_factor")
> ### * boxplot_vars_factor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: boxplot_vars_factor
> ### Title: Boxplot of variables with metadata's variable factors
> ### Aliases: boxplot_vars_factor
> ### Keywords: ~boxplot ~factor
> 
> ### ** Examples
> 
>   ## Example of showing the boxplot factors of a few variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   boxplot_vars_factor(cachexia, "Muscle.loss", variables = c("Creatine","Serine",
+   "Lactate"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("check_dataset")
> ### * check_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: check_dataset
> ### Title: Check dataset
> ### Aliases: check_dataset
> ### Keywords: dataset
> 
> ### ** Examples
> 
>   ## Example checking a dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   check_dataset(cachexia)
Valid dataset
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("clustering")
> ### * clustering
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: clustering
> ### Title: Perform cluster analysis
> ### Aliases: clustering
> ### Keywords: clustering kmeans hclust
> 
> ### ** Examples
> 
>   ## Example of kmeans and hierarchical clustering
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   hc.result = clustering(cachexia, method = "hc", 
+ 	      distance = "euclidean")
>   kmeans.result = clustering(cachexia, method = "kmeans", 
+ 		  num.clusters = 4)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("compare_regions_by_sample")
> ### * compare_regions_by_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compare_regions_by_sample
> ### Title: Compare regions by sample
> ### Aliases: compare_regions_by_sample
> ### Keywords: region sample
> 
> ### ** Examples
> 
>      ## Example of comparing regions by sample
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      subset1 = subset_x_values(cachexia, 1:31, by.index = TRUE)
>      subset2 = subset_x_values(cachexia, 32:63, by.index = TRUE)
>      comp.regions.result = compare_regions_by_sample(subset1, subset2, 
+ 			   mean)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("convert_chebi_to_kegg")
> ### * convert_chebi_to_kegg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: convert_chebi_to_kegg
> ### Title: Convert CHEBI codes to KEGG codes.
> ### Aliases: convert_chebi_to_kegg
> 
> ### ** Examples
> 
> keggs=convert_hmdb_to_kegg(c("CHEBI:15377", "CHEBI:26078", "CHEBI:30168"))
> keggs
NULL
> 
> 
> 
> cleanEx()
> nameEx("convert_hmdb_to_kegg")
> ### * convert_hmdb_to_kegg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: convert_hmdb_to_kegg
> ### Title: Convert HMDB codes to KEGG codes.
> ### Aliases: convert_hmdb_to_kegg
> 
> ### ** Examples
> 
> keggs=convert_hmdb_to_kegg(c("HMDB0000001", "HMDB0000008", "HMDB0000246"))
> keggs
    1-Methylhistidine 2-hydroxybutyric acid 
         "cpd:C01152"          "cpd:C05984" 
> 
> 
> 
> cleanEx()
> nameEx("convert_multiple_spcmnm_to_kegg")
> ### * convert_multiple_spcmnm_to_kegg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: convert_multiple_spcmnm_to_kegg
> ### Title: Convert specmine metabolite codes to KEGG codes.
> ### Aliases: convert_multiple_spcmnm_to_kegg
> 
> ### ** Examples
> 
> keggs=convert_multiple_spcmnm_to_kegg(c("SPCMNM2111", "SPCMNM2142", "SPCMNM069774"))
> keggs
          water phosphoric acid 
   "cpd:C00001"    "cpd:C00009" 
> 
> 
> 
> cleanEx()
> nameEx("correlation_test")
> ### * correlation_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: correlation_test
> ### Title: Correlation test of two variables or samples
> ### Aliases: correlation_test
> ### Keywords: correlation test
> 
> ### ** Examples
> 
>   ## Example of correlations test of variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   corr.result = correlation_test(cachexia, "Serine", "Creatine", method = "pearson", 
+ 		by.var = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("correlations_dataset")
> ### * correlations_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: correlations_dataset
> ### Title: Dataset correlations
> ### Aliases: correlations_dataset
> ### Keywords: correlation spearman kendall pearson
> 
> ### ** Examples
> 
>   ## Example of correlations of variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   corr.result = correlations_dataset(cachexia, 
+ 		method = "pearson", by.var = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("correlations_test")
> ### * correlations_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: correlations_test
> ### Title: Correlations test
> ### Aliases: correlations_test
> ### Keywords: correlation test
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("count_missing_values")
> ### * count_missing_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: count_missing_values
> ### Title: Count missing values
> ### Aliases: count_missing_values
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of counting the missing values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   count_missing_values(cachexia)
[1] 0
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("count_missing_values_per_sample")
> ### * count_missing_values_per_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: count_missing_values_per_sample
> ### Title: Count missing values per sample
> ### Aliases: count_missing_values_per_sample
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of counting the missing values on each sample
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia$data[10,10] = NA
>   count_missing_values_per_sample(cachexia)
PIF_154 
      1 
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("count_missing_values_per_variable")
> ### * count_missing_values_per_variable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: count_missing_values_per_variable
> ### Title: Count missing values per variable
> ### Aliases: count_missing_values_per_variable
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of counting the missing values on each variable
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia$data[10,10] = NA
>   count_missing_values_per_variable(cachexia)
4-Hydroxyphenylacetate 
                     1 
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("cubic_root_transform")
> ### * cubic_root_transform
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cubic_root_transform
> ### Title: Cubic root transformation
> ### Aliases: cubic_root_transform
> ### Keywords: cubicroot transformation
> 
> ### ** Examples
> 
>   ## Example of cubic root transformation
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   datamat.cubic = cubic_root_transform(cachexia$data)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("dataset_from_peaks")
> ### * dataset_from_peaks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dataset_from_peaks
> ### Title: Dataset from peaks
> ### Aliases: dataset_from_peaks
> ### Keywords: peaklist dataset
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("dendrogram_plot")
> ### * dendrogram_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dendrogram_plot
> ### Title: Plot dendrogram
> ### Aliases: dendrogram_plot
> ### Keywords: clustering dendrogram hclust
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("dendrogram_plot_col")
> ### * dendrogram_plot_col
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dendrogram_plot_col
> ### Title: Plot dendrogram
> ### Aliases: dendrogram_plot_col
> ### Keywords: clustering dendrogram hclust
> 
> ### ** Examples
> 
>   ## Example of colored dendrogram
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   hc.result = hierarchical_clustering(cachexia)
>   dendrogram_plot_col(cachexia, hc.result, "Muscle.loss", 
+   title = "Example")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("feature_selection")
> ### * feature_selection
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: feature_selection
> ### Title: Perform feature selection
> ### Aliases: feature_selection
> ### Keywords: featureselection filters wrappers
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("filter_feature_selection")
> ### * filter_feature_selection
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: filter_feature_selection
> ### Title: Perform selection by filter
> ### Aliases: filter_feature_selection
> ### Keywords: sbf filters
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("find_equal_samples")
> ### * find_equal_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: find_equal_samples
> ### Title: Find equal samples
> ### Aliases: find_equal_samples
> ### Keywords: equal sample
> 
> ### ** Examples
> 
>     ## Example of finding equal samples
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(propolisSampleList)
>     equal.samples = find_equal_samples(propolisSampleList)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("flat_pattern_filter")
> ### * flat_pattern_filter
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: flat_pattern_filter
> ### Title: Flat pattern filter
> ### Aliases: flat_pattern_filter
> ### Keywords: flatpattern filter
> 
> ### ** Examples
> 
>   ## Example of flat pattern filter
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   dataset.filtered = flat_pattern_filter(propolis, "iqr", by.percent = TRUE, 
+ 		     red.value = 20)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("fold_change")
> ### * fold_change
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fold_change
> ### Title: Fold change analysis
> ### Aliases: fold_change
> ### Keywords: foldchange
> 
> ### ** Examples
> 
>   ## Example of fold change
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   fold.change.results = fold_change(cachexia, "Muscle.loss", 
+ 			"control", write.file = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("fold_change_var")
> ### * fold_change_var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fold_change_var
> ### Title: Fold change applied on two variables
> ### Aliases: fold_change_var
> ### Keywords: foldchange reverse
> 
> ### ** Examples
> 
>   ## Example of fold change reverse
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   fold.change.results = fold_change_var(cachexia, "Muscle.loss", 
+ 			c("Creatine", "Serine"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_OrganismsCodes")
> ### * get_OrganismsCodes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_OrganismsCodes
> ### Title: Get all organisms in KEGG.
> ### Aliases: get_OrganismsCodes
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_cpd_names")
> ### * get_cpd_names
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_cpd_names
> ### Title: Get the names of the compounds that correspond to the kegg codes
> ###   given.
> ### Aliases: get_cpd_names
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_data")
> ### * get_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_data
> ### Title: Get data
> ### Aliases: get_data
> ### Keywords: matrix dataset
> 
> ### ** Examples
> 
>   ## Example of getting the data matrix
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia.dm = get_data(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_data_as_df")
> ### * get_data_as_df
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_data_as_df
> ### Title: Get data as data frame
> ### Aliases: get_data_as_df
> ### Keywords: matrix dataframe
> 
> ### ** Examples
> 
>   ## Example of getting the data matrix as data frame
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia.dt = get_data_as_df(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_data_value")
> ### * get_data_value
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_data_value
> ### Title: Get data value
> ### Aliases: get_data_value
> ### Keywords: dataset value
> 
> ### ** Examples
> 
>   ## Example of getting a data value from the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   data.value = get_data_value(cachexia, "Creatine", "PIF_178", 
+ 	       by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_data_values")
> ### * get_data_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_data_values
> ### Title: Get data values
> ### Aliases: get_data_values
> ### Keywords: data values
> 
> ### ** Examples
> 
>   ## Example of getting a metadata value
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   data.values = get_data_values(cachexia, c("Creatine","Serine","Lactate"), 
+ 		by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_files_list_assay")
> ### * get_files_list_assay
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_files_list_per_assay
> ### Title: Get list of files per assay for MetaboLights study.
> ### Aliases: get_files_list_per_assay
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_metabolights_study_files_assay")
> ### * get_metabolights_study_files_assay
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metabolights_study_files_assay
> ### Title: Download data files from an assay of MetaboLights study
> ### Aliases: get_metabolights_study_files_assay
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_metabolights_study_metadata_assay")
> ### * get_metabolights_study_metadata_assay
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metabolights_study_metadata_assay
> ### Title: Download metadata file from an assay of MetaboLights study
> ### Aliases: get_metabolights_study_metadata_assay
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_metabolights_study_samples_files")
> ### * get_metabolights_study_samples_files
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metabolights_study_samples_files
> ### Title: Get list of files from an assay of the MetaboLights study and
> ###   saves it in a csv file.
> ### Aliases: get_metabolights_study_samples_files
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_metadata")
> ### * get_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metadata
> ### Title: Get metadata
> ### Aliases: get_metadata
> ### Keywords: metadata dataset
> 
> ### ** Examples
> 
>   ## Example of getting the metadata
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia.mt = get_metadata(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_metadata_value")
> ### * get_metadata_value
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metadata_value
> ### Title: Get metadata value
> ### Aliases: get_metadata_value
> ### Keywords: metadata value
> 
> ### ** Examples
> 
>   ## Example of getting a metadata value
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   metadata.value = get_metadata_value(cachexia, "Muscle.loss", "PIF_178")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_metadata_var")
> ### * get_metadata_var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_metadata_var
> ### Title: Get metadata variable
> ### Aliases: get_metadata_var
> ### Keywords: metadata variable
> 
> ### ** Examples
> 
>   ## Example of getting a metadata variable
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   metadata.variable = get_metadata_var(cachexia, "Muscle.loss")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_paths_with_cpds_org")
> ### * get_paths_with_cpds_org
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_paths_with_cpds_org
> ### Title: Get only the paths of the organism that contain one or more of
> ###   the given compounds.
> ### Aliases: get_paths_with_cpds_org
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("get_peak_values")
> ### * get_peak_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_peak_values
> ### Title: Get peak values
> ### Aliases: get_peak_values
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>   ## Example of getting the peak values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   peak.values = get_peak_values(propolis$data, 2.11)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_sample_names")
> ### * get_sample_names
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_sample_names
> ### Title: Get sample names
> ### Aliases: get_sample_names
> ### Keywords: sample dataset
> 
> ### ** Examples
> 
>   ## Example of getting the sample names
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   sample.names = get_sample_names(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_type")
> ### * get_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_type
> ### Title: Get type of data
> ### Aliases: get_type
> ### Keywords: type dataset
> 
> ### ** Examples
> 
>   ## Example of getting the type of the data
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   type = get_type(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_value_label")
> ### * get_value_label
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_value_label
> ### Title: Get value label
> ### Aliases: get_value_label
> ### Keywords: label dataset
> 
> ### ** Examples
> 
>   ## Example of getting the value label
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cassavaPPD)
>   value.label = get_value_label(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_x_label")
> ### * get_x_label
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_x_label
> ### Title: Get x-axis label
> ### Aliases: get_x_label
> ### Keywords: label xaxis
> 
> ### ** Examples
> 
>   ## Example of getting the x-axis label
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cassavaPPD)
>   x.label = get_x_label(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_x_values_as_num")
> ### * get_x_values_as_num
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_x_values_as_num
> ### Title: Get x-axis values as numbers
> ### Aliases: get_x_values_as_num
> ### Keywords: dataset xaxis
> 
> ### ** Examples
> 
>   ## Example of getting the x-axis values as numbers
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   xvalues.numeric = get_x_values_as_num(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("get_x_values_as_text")
> ### * get_x_values_as_text
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_x_values_as_text
> ### Title: Get x-axis values as text
> ### Aliases: get_x_values_as_text
> ### Keywords: xaxis dataset
> 
> ### ** Examples
> 
>   ## Example of getting the x-axis values as text
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   xvalues.text = get_x_values_as_text(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("group_peaks")
> ### * group_peaks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: group_peaks
> ### Title: Group peaks
> ### Aliases: group_peaks
> ### Keywords: peak alignment
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("heatmap_correlations")
> ### * heatmap_correlations
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: heatmap_correlations
> ### Title: Correlations heatmap
> ### Aliases: heatmap_correlations
> ### Keywords: correlations heatmap
> 
> ### ** Examples
> 
>   ## Example of correlations heatmap
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   correlations = correlations_dataset(cachexia)
>   heatmap_correlations(correlations)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("hierarchical_clustering")
> ### * hierarchical_clustering
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hierarchical_clustering
> ### Title: Perform hierarchical clustering analysis
> ### Aliases: hierarchical_clustering
> ### Keywords: clustering hclust
> 
> ### ** Examples
> 
>   ## Example of hierarchical clustering
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   hc.result = hierarchical_clustering(cachexia, 
+ 	      distance = "euclidean", clustMethod = "complete", 
+ 	      hc.type = "samples")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("impute_nas_knn")
> ### * impute_nas_knn
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_nas_knn
> ### Title: Impute missing values with KNN
> ### Aliases: impute_nas_knn
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of NA imputation with knn
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   dataset = impute_nas_knn(propolis, k=10)
Warning in knnimp(x, k, maxmiss = rowmax, maxp = maxp) :
  96 rows with more than 50 % entries missing;
 mean imputation used for these rows
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("impute_nas_linapprox")
> ### * impute_nas_linapprox
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_nas_linapprox
> ### Title: Impute missing values with linear approximation
> ### Aliases: impute_nas_linapprox
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of NA imputation with linear approximation
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   dataset = impute_nas_linapprox(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("impute_nas_mean")
> ### * impute_nas_mean
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_nas_mean
> ### Title: Impute missing values with mean
> ### Aliases: impute_nas_mean
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of NA imputation with mean
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = impute_nas_mean(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("impute_nas_median")
> ### * impute_nas_median
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_nas_median
> ### Title: Impute missing values with median
> ### Aliases: impute_nas_median
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of NA imputation with median
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = impute_nas_median(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("impute_nas_value")
> ### * impute_nas_value
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_nas_value
> ### Title: Impute missing values with value replacement
> ### Aliases: impute_nas_value
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of NA imputation with value replacing
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = impute_nas_value(propolis, 0.0005)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("indexes_to_xvalue_interval")
> ### * indexes_to_xvalue_interval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: indexes_to_xvalue_interval
> ### Title: Get the x-values of a vector of indexes
> ### Aliases: indexes_to_xvalue_interval
> ### Keywords: xvalues indexes
> 
> ### ** Examples
> 
>   ## Example of getting the interval of x-values from indexes
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   xvalue.interval = indexes_to_xvalue_interval(propolis, c(10,50))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("is_spectra")
> ### * is_spectra
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is_spectra
> ### Title: Check type of data
> ### Aliases: is_spectra
> ### Keywords: dataset spectral
> 
> ### ** Examples
> 
>   ## Example of checking if the dataset is from spectral data
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   is_spectra(propolis)
[1] FALSE
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("kmeans_clustering")
> ### * kmeans_clustering
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kmeans_clustering
> ### Title: Perform k-means clustering analysis
> ### Aliases: kmeans_clustering
> ### Keywords: clustering kmeans
> 
> ### ** Examples
> 
>   ## Example of kmeans clustering
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   kmeans.result = kmeans_clustering(cachexia, 
+ 		  num.clusters = 4, type = "samples")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("kmeans_plot")
> ### * kmeans_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kmeans_plot
> ### Title: Plot kmeans clusters
> ### Aliases: kmeans_plot
> ### Keywords: clustering kmeans plotting
> 
> ### ** Examples
> 
>   ## Example of kmeans plot - dataset filtered for performance purposes
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   kmeans.result = kmeans_clustering(cachexia, 
+ 		  num.clusters = 4, type = "samples")
>   kmeans_plot(cachexia, kmeans.result)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("kmeans_result_df")
> ### * kmeans_result_df
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kmeans_result_df
> ### Title: Show cluster's members
> ### Aliases: kmeans_result_df
> ### Keywords: clustering kmeans
> 
> ### ** Examples
> 
>   ## Example of showing kmeans cluster's members
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   kmeans.result = kmeans_clustering(cachexia, 
+ 		  num.clusters = 4, type = "samples")
>   kmeans_result_df(kmeans.result)
  cluster
1       1
2       2
3       3
4       4
                                                                                                                                                                                                                                                                                                                       samples
1 NETCR_014_V1 PIF_119 PIF_099 PIF_100 NETL_004_V1 NETCR_003_V1 NETL_028_V2 NETL_020_V1 PIF_192 NETCR_012_V1 PIF_179 PIF_116 PIF_191 NETL_013_V1 PIF_188 PIF_195 NETL_010_V1 NETL_010_V2 PIF_111 NETCR_008_V1 NETL_017_V1 NETL_017_V2 PIF_190 NETCR_009_V2 NETL_007_V1 PIF_112 NETL_012_V1 NETL_012_V2 NETL_003_V1 NETL_003_V2
2                                 PIF_115 NETL_019_V1 NETCR_014_V2 PIF_154 NETL_022_V1 NETL_022_V2 PIF_146 PIF_162 PIF_160 PIF_113 PIF_143 NETCR_007_V1 PIF_094 PIF_163 NETCR_013_V1 NETL_020_V2 NETCR_002_V1 PIF_141 NETCR_015_V1 PIF_102 NETL_001_V1 NETCR_015_V2 NETCR_005_V1 PIF_171 NETCR_008_V2 NETL_002_V1 NETCR_019_V2
3                                                                                                                                                                                                                                                                         PIF_090 NETL_005_V1 PIF_132 NETL_028_V1 NETCR_025_V2
4                                                                                                                                                                PIF_178 PIF_087 PIF_110 NETL_008_V1 NETCR_007_V2 PIF_137 NETCR_012_V2 PIF_089 PIF_114 NETCR_006_V1 NETCR_025_V1 NETCR_016_V1 PIF_164 NETL_002_V2 NETCR_009_V1
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("kruskalTest_dataset")
> ### * kruskalTest_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kruskalTest_dataset
> ### Title: Kruskal-Wallis tests on dataset
> ### Aliases: kruskalTest_dataset
> ### Keywords: Kruskal-Wallis
> 
> ### ** Examples
> 
>   ## Example of ks-Tests on dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   kruskaltests.result = kruskalTest_dataset(cachexia, "Muscle.loss", 
+ 		  write.file = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("ksTest_dataset")
> ### * ksTest_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ksTest_dataset
> ### Title: Kolmogorov-Smirnov tests on dataset
> ### Aliases: ksTest_dataset
> ### Keywords: Kolmogorov-Smirnov
> 
> ### ** Examples
> 
>   ## Example of ks-Tests on dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   kstests.result = ksTest_dataset(cachexia, "Muscle.loss", 
+ 		  write.file = FALSE)
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("log_transform")
> ### * log_transform
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: log_transform
> ### Title: Logarithmic transformation.
> ### Aliases: log_transform
> ### Keywords: log transformation
> 
> ### ** Examples
> 
>   ## Example of logarithmic transformation
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis_proc = missingvalues_imputation(propolis)
>   datamat.log = log_transform(propolis_proc$data)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("merge_data_metadata")
> ### * merge_data_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: merge_data_metadata
> ### Title: Merge data and metadata
> ### Aliases: merge_data_metadata
> ### Keywords: data metadata
> 
> ### ** Examples
> 
>   ## Example of merging data and metadata
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dt.merged = merge_data_metadata(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("metabolights_studies_list")
> ### * metabolights_studies_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: metabolights_studies_list
> ### Title: List the study IDs available in the MetaboLights database.
> ### Aliases: metabolights_studies_list
> 
> ### ** Examples
> 
> ## metabolights_studies_list()
> 
> 
> 
> cleanEx()
> nameEx("metadata_as_variables")
> ### * metadata_as_variables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: metadata_as_variables
> ### Title: Metadata as variables
> ### Aliases: metadata_as_variables
> ### Keywords: metadata variable
> 
> ### ** Examples
> 
>   ## Example of using a metadata variable as data variable
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = metadata_as_variables(propolis, "seasons", by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("missingvalues_imputation")
> ### * missingvalues_imputation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: missingvalues_imputation
> ### Title: Missing values imputation
> ### Aliases: missingvalues_imputation
> ### Keywords: missing values
> 
> ### ** Examples
> 
>   ## Example of impute missing values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   dataset = missingvalues_imputation(propolis, method = "value", 
+ 	    value = 0.0005)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("multifactor_aov_all_vars")
> ### * multifactor_aov_all_vars
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multifactor_aov_all_vars
> ### Title: Multifactor ANOVA
> ### Aliases: multifactor_aov_all_vars
> ### Keywords: anova multifactor
> 
> ### ** Examples
> 
>   ## Example of multifactor ANOVA on all variables 
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = missingvalues_imputation(propolis, "value", value = 0.00005)
>   m.aov.results = multifactor_aov_all_vars(propolis, 
+ 		  c("seasons","agroregions"), "seasons*agroregions")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("multifactor_aov_pvalues_table")
> ### * multifactor_aov_pvalues_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multifactor_aov_pvalues_table
> ### Title: Multifactor ANOVA p-values table
> ### Aliases: multifactor_aov_pvalues_table
> ### Keywords: multifactor anova
> 
> ### ** Examples
> 
>   ## Example of multifactor ANOVA p-values table
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = missingvalues_imputation(propolis, "value", value = 0.00005)
>   m.aov.results = multifactor_aov_all_vars(propolis, 
+ 		  c("seasons","agroregions"), "seasons*agroregions")
>   m.aov.pvalues = multifactor_aov_pvalues_table(m.aov.results)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("multifactor_aov_varexp_table")
> ### * multifactor_aov_varexp_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multifactor_aov_varexp_table
> ### Title: Multifactor ANOVA variability explained table
> ### Aliases: multifactor_aov_varexp_table
> ### Keywords: varexp anova
> 
> ### ** Examples
> 
>   ## Example of multifactor ANOVA variability explained table
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = missingvalues_imputation(propolis, "value", value = 0.00005)
>   m.aov.results = multifactor_aov_all_vars(propolis, 
+ 		  c("seasons","agroregions"), "seasons*agroregions")
>   m.aov.varepx = multifactor_aov_varexp_table(m.aov.results)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("multiplot")
> ### * multiplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multiplot
> ### Title: Multiplot
> ### Aliases: multiplot
> ### Keywords: multiplot ggplot
> 
> ### ** Examples
> 
>      ## Example of multiplot
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      pca.result = pca_analysis_dataset(cachexia)
>      plot1 = pca_scoresplot2D(cachexia, pca.result, "Muscle.loss", 
+ 	ellipses = TRUE)
>      plot2 = pca_scoresplot2D(cachexia, pca.result, "Muscle.loss", 
+ 	ellipses = FALSE, labels = TRUE)
>      plts = list(plot1,plot2)
>      multiplot(plts, cols = 2)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("nmr_identification")
> ### * nmr_identification
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nmr_identification
> ### Title: NMR metabolite identification
> ### Aliases: nmr_identification
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("num_samples")
> ### * num_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: num_samples
> ### Title: Get number of samples
> ### Aliases: num_samples
> ### Keywords: samples dataset
> 
> ### ** Examples
> 
>   ## Example of getting the number of samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   number.of.samples = num_samples(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("num_x_values")
> ### * num_x_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: num_x_values
> ### Title: Get number of x values
> ### Aliases: num_x_values
> ### Keywords: dataset xaxis
> 
> ### ** Examples
> 
>   ## Example of getting the number of x-axis values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   number.x.values = num_x_values(propolis)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pathway_analysis")
> ### * pathway_analysis
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pathway_analysis
> ### Title: Creates the metabolic pathway wanted. If any of the given
> ###   compounds is present in the pathway, it is coloured differently.
> ### Aliases: pathway_analysis
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_analysis_dataset")
> ### * pca_analysis_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_analysis_dataset
> ### Title: PCA analysis (classical)
> ### Aliases: pca_analysis_dataset
> ### Keywords: pca unsupervised
> 
> ### ** Examples
> 
>   ## Example of performing a classical PCA analysis
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.results = pca_analysis_dataset(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_biplot")
> ### * pca_biplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_biplot
> ### Title: PCA biplot
> ### Aliases: pca_biplot
> ### Keywords: pca biplot
> 
> ### ** Examples
> 
>   ## Example of a PCA biplot
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.result = pca_analysis_dataset(cachexia)
>   pca_biplot(cachexia, pca.result, cex = 0.8)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_biplot3D")
> ### * pca_biplot3D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_biplot3D
> ### Title: 3D PCA biplot (interactive)
> ### Aliases: pca_biplot3D
> ### Keywords: pca biplot
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_importance")
> ### * pca_importance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_importance
> ### Title: PCA importance
> ### Aliases: pca_importance
> ### Keywords: pca importance
> 
> ### ** Examples
> 
>   ## Example of performing a classical PCA analysis
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.result = pca_analysis_dataset(cachexia)
>   pca_importance(pca.result, pcs = 1:5)
                           PC1      PC2      PC3      PC4      PC5
Standard deviation     5.04667 2.270128 1.833107 1.747276 1.659056
Proportion of Variance 0.40427 0.081800 0.053340 0.048460 0.043690
Cumulative Proportion  0.40427 0.486070 0.539410 0.587870 0.631560
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_kmeans_plot2D")
> ### * pca_kmeans_plot2D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_kmeans_plot2D
> ### Title: 2D PCA k-means plot
> ### Aliases: pca_kmeans_plot2D
> ### Keywords: pca kmeans
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_kmeans_plot3D")
> ### * pca_kmeans_plot3D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_kmeans_plot3D
> ### Title: 3D PCA k-means plot (interactive)
> ### Aliases: pca_kmeans_plot3D
> ### Keywords: kmeans pca
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_pairs_kmeans_plot")
> ### * pca_pairs_kmeans_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_pairs_kmeans_plot
> ### Title: PCA k-means pairs plot
> ### Aliases: pca_pairs_kmeans_plot
> ### Keywords: kmeans pairs
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_pairs_plot")
> ### * pca_pairs_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_pairs_plot
> ### Title: PCA pairs plot
> ### Aliases: pca_pairs_plot
> ### Keywords: pairs pca
> 
> ### ** Examples
> 
>   ## Example of a PCA pairs plot
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.result = pca_analysis_dataset(cachexia)
>   pca_pairs_plot(cachexia, pca.result, "Muscle.loss", pcas = c(1,2,3))
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_plot_3d")
> ### * pca_plot_3d
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_plot_3d
> ### Title: 3D pca plot
> ### Aliases: pca_plot_3d
> ### Keywords: pca pls
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_robust")
> ### * pca_robust
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_robust
> ### Title: PCA analysis (robust)
> ### Aliases: pca_robust
> ### Keywords: pca robust
> 
> ### ** Examples
> 
>   ## Example of performing a robust PCA analysis
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.results = pca_robust(cachexia, center = "mean", scale = "mad", 
+ 		k = 10)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_scoresplot2D")
> ### * pca_scoresplot2D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_scoresplot2D
> ### Title: 2D PCA scores plot
> ### Aliases: pca_scoresplot2D
> ### Keywords: scoresplot pca
> 
> ### ** Examples
> 
>   ## Example of a 2D PCA scores plot
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.result = pca_analysis_dataset(cachexia)
>   pca_scoresplot2D(cachexia, pca.result, "Muscle.loss", pcas = c(1,2), 
+     		   ellipses = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("pca_scoresplot3D")
> ### * pca_scoresplot3D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_scoresplot3D
> ### Title: 3D PCA scores plot
> ### Aliases: pca_scoresplot3D
> ### Keywords: scoresplot pca
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_scoresplot3D_rgl")
> ### * pca_scoresplot3D_rgl
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_scoresplot3D_rgl
> ### Title: 3D PCA scores plot (interactive)
> ### Aliases: pca_scoresplot3D_rgl
> ### Keywords: scoresplot pca
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("pca_screeplot")
> ### * pca_screeplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pca_screeplot
> ### Title: PCA scree plot
> ### Aliases: pca_screeplot
> ### Keywords: screeplot pca
> 
> ### ** Examples
> 
>   ## Example of a scree plot
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   pca.result = pca_analysis_dataset(cachexia)
>   pca_screeplot(pca.result)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("peaks_per_sample")
> ### * peaks_per_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: peaks_per_sample
> ### Title: Peaks per sample
> ### Aliases: peaks_per_sample
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>     ## Example of counting the peaks in a sample
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(propolisSampleList)
>     num.peaks.sample = peaks_per_sample(propolisSampleList, 4)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("peaks_per_samples")
> ### * peaks_per_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: peaks_per_samples
> ### Title: Peaks per samples
> ### Aliases: peaks_per_samples
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>     ## Example of counting the peaks in each sample
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(propolisSampleList)
>     num.peaks.samples = peaks_per_samples(propolisSampleList)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_anova")
> ### * plot_anova
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_anova
> ### Title: Plot ANOVA results
> ### Aliases: plot_anova
> ### Keywords: anova plot
> 
> ### ** Examples
> 
>     ## Example of plotting the ANOVA results - first filter the 
>     ## dataset to reduce computation time
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
> 	data(propolis)
>     propolis_proc = missingvalues_imputation(propolis)
>     propolis_proc = flat_pattern_filter(propolis_proc, "iqr", by.percent = TRUE,
+ 	red.value = 75) 
>     anova.results = aov_all_vars(propolis_proc, "seasons", doTukey = FALSE)
>     plot_anova(propolis_proc, anova.results)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_fold_change")
> ### * plot_fold_change
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_fold_change
> ### Title: Plot fold change results
> ### Aliases: plot_fold_change
> ### Keywords: foldchange plot
> 
> ### ** Examples
> 
>     ## Example of plotting the fold change results
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(cachexia)
>     fc.results = fold_change(cachexia, "Muscle.loss", 
+ 			"control")
>     plot_fold_change(cachexia, fc.results, 2)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_kruskaltest")
> ### * plot_kruskaltest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_kruskaltest
> ### Title: Plot Kruskal-Wallis tests results
> ### Aliases: plot_kruskaltest
> ### Keywords: Kruskal-Wallis plot
> 
> ### ** Examples
> 
>     ## Example of plotting the Kolmogorov-Smirnov tests results
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(cachexia)
>     kr.results = kruskalTest_dataset(cachexia, "Muscle.loss", 
+ 	write.file = FALSE)
>     plot_kruskaltest(cachexia, kr.results, 0.05)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_kstest")
> ### * plot_kstest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_kstest
> ### Title: Plot Kolmogorov-Smirnov tests results
> ### Aliases: plot_kstest
> ### Keywords: Kolmogorov-Smirnov plot
> 
> ### ** Examples
> 
>     ## Example of plotting the Kolmogorov-Smirnov tests results
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(cachexia)
>     ks.results = ksTest_dataset(cachexia, "Muscle.loss", 
+ 	write.file = FALSE)
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
Warning in ks.test(sub.ds1$data[i, ], sub.ds2$data[i, ]) :
  cannot compute exact p-value with ties
>     plot_kstest(cachexia, ks.results, 0.05)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_peaks")
> ### * plot_peaks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_peaks
> ### Title: Plot the peaks of a MS or NMR dataset.
> ### Aliases: plot_peaks
> 
> ### ** Examples
> 
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   plot_peaks(propolis, "seasons", variable.bounds = c(0,3), samples=c("XX_au", "XX_sm", "XX_wi"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plot_ttests")
> ### * plot_ttests
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_ttests
> ### Title: Plot t-tests results
> ### Aliases: plot_ttests
> ### Keywords: ttest plot
> 
> ### ** Examples
> 
>     ## Example of plotting the t-tests results
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(cachexia)
>     ttests.results = tTests_dataset(cachexia, "Muscle.loss")
>     plot_ttests(cachexia, ttests.results, 0.05)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("plotvar_twofactor")
> ### * plotvar_twofactor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotvar_twofactor
> ### Title: Plot variable distribution on two factors
> ### Aliases: plotvar_twofactor
> ### Keywords: plot factor
> 
> ### ** Examples
> 
>   ## Example of plotting a variable's distribution with 2 factors
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis_proc = missingvalues_imputation(propolis)
>   plotvar_twofactor(propolis_proc, "0.46", "seasons", "agroregions")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("predict_samples")
> ### * predict_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: predict_samples
> ### Title: Predict samples
> ### Aliases: predict_samples
> ### Keywords: predict samples
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("recursive_feature_elimination")
> ### * recursive_feature_elimination
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recursive_feature_elimination
> ### Title: Perform recursive feature elimination
> ### Aliases: recursive_feature_elimination
> ### Keywords: rfe wrappers
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("remove_data")
> ### * remove_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_data
> ### Title: Remove data
> ### Aliases: remove_data
> ### Keywords: remove data
> 
> ### ** Examples
> 
>   ## Example of removing data
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset = remove_data(cachexia, c("Creatine","Serine"), type = "data", 
+ 	    by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_data_variables")
> ### * remove_data_variables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_data_variables
> ### Title: Remove data variables
> ### Aliases: remove_data_variables
> ### Keywords: remove variable
> 
> ### ** Examples
> 
>   ## Example of removing data variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset = remove_data_variables(cachexia, c("Creatine","Serine"), 
+ 	    by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_metadata_variables")
> ### * remove_metadata_variables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_metadata_variables
> ### Title: Remove metadata's variables
> ### Aliases: remove_metadata_variables
> ### Keywords: remove metadata
> 
> ### ** Examples
> 
>   ## Example of removing metadata's variables
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   dataset = remove_metadata_variables(propolis, c("seasons"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_peaks_interval")
> ### * remove_peaks_interval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_peaks_interval
> ### Title: Remove interval of peaks
> ### Aliases: remove_peaks_interval
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>   ## Example of removing a interval of peaks
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolisSampleList)
>   samples.df = remove_peaks_interval(propolisSampleList[[1]], 2, 8.05)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_peaks_interval_sample_list")
> ### * remove_peaks_interval_sample_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_peaks_interval_sample_list
> ### Title: Remove interval of peaks (sample list)
> ### Aliases: remove_peaks_interval_sample_list
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>   ## Example of removing a interval of peaks in a sample list
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolisSampleList)
>   samples.list = remove_peaks_interval_sample_list(propolisSampleList, 2, 8.05)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_samples")
> ### * remove_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_samples
> ### Title: Remove samples
> ### Aliases: remove_samples
> ### Keywords: remove sample
> 
> ### ** Examples
> 
>   ## Example of removing samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia = remove_samples(cachexia, c("PIF_178","PIF_090"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_samples_by_na_metadata")
> ### * remove_samples_by_na_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_samples_by_na_metadata
> ### Title: Remove samples by NA on metadata
> ### Aliases: remove_samples_by_na_metadata
> ### Keywords: remove metadata
> 
> ### ** Examples
> 
>   ## Example of removing samples that have NAs on metadata's variable
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia$metadata$Muscle.loss[10] = NA
>   cachexia = remove_samples_by_na_metadata(cachexia, "Muscle.loss")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_samples_by_nas")
> ### * remove_samples_by_nas
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_samples_by_nas
> ### Title: Remove samples by NAs
> ### Aliases: remove_samples_by_nas
> ### Keywords: remove missingvalue
> 
> ### ** Examples
> 
>   ## Example of removing samples by NAs
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = remove_samples_by_nas(propolis, 40, by.percent = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("remove_variables_by_nas")
> ### * remove_variables_by_nas
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_variables_by_nas
> ### Title: Remove variables by NAs
> ### Aliases: remove_variables_by_nas
> ### Keywords: remove missingvalue
> 
> ### ** Examples
> 
>   ## Example of removing variables by NAs
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   propolis = remove_variables_by_nas(propolis, 40, by.percent = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("replace_data_value")
> ### * replace_data_value
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_data_value
> ### Title: Replace data value
> ### Aliases: replace_data_value
> ### Keywords: dataset value
> 
> ### ** Examples
> 
>   ## Example of replacing a data value from the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset = replace_data_value(cachexia, "Creatine", "PIF_178", 10.3, 
+ 	    by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("replace_metadata_value")
> ### * replace_metadata_value
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_metadata_value
> ### Title: Replace metadata's value
> ### Aliases: replace_metadata_value
> ### Keywords: metadata dataset
> 
> ### ** Examples
> 
>   ## Example of replacing metadata's variable value of a sample
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset = replace_metadata_value(cachexia, "Muscle.loss", "PIF_178", 
+ 	    "control")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("set_metadata")
> ### * set_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_metadata
> ### Title: Set new metadata
> ### Aliases: set_metadata
> ### Keywords: metadata dataset
> 
> ### ** Examples
> 
>   ## Example of setting a new metadata to the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   new.metadata = c(rep("meta1", 39), rep("meta2", 38)) 
>   new.metadata = data.frame(var_meta = new.metadata)
>   rownames(new.metadata) = get_sample_names(cachexia)
>   cachexia = set_metadata(cachexia, new.metadata)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("set_sample_names")
> ### * set_sample_names
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_sample_names
> ### Title: Set samples names
> ### Aliases: set_sample_names
> ### Keywords: sample dataset
> 
> ### ** Examples
> 
>   ## Example of setting a new value label to the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   new.samples.names = as.character(1:77)
>   cachexia = set_sample_names(cachexia, new.samples.names)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("set_value_label")
> ### * set_value_label
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_value_label
> ### Title: Set value label
> ### Aliases: set_value_label
> ### Keywords: label dataset
> 
> ### ** Examples
> 
>   ## Example of setting a new value label to the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia = set_value_label(cachexia, "new value label")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("set_x_label")
> ### * set_x_label
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_x_label
> ### Title: Set x-label
> ### Aliases: set_x_label
> ### Keywords: dataset label
> 
> ### ** Examples
> 
>   ## Example of setting a new x-label to the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   cachexia = set_x_label(cachexia, "new x-label")
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("set_x_values")
> ### * set_x_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_x_values
> ### Title: Set new x-values
> ### Aliases: set_x_values
> ### Keywords: xvalues dataset
> 
> ### ** Examples
> 
>   ## Example of setting new x-values to the dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   new.xvalues = 1:63
>   cachexia = set_x_values(cachexia, new.xvalues, new.x.label = NULL)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("spectra_options")
> ### * spectra_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spectra_options
> ### Title: Information on the library of NMR reference spectra in our
> ###   package.
> ### Aliases: spectra_options
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(spectra_options)
> 
> 
> 
> cleanEx()
> nameEx("stats_by_sample")
> ### * stats_by_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stats_by_sample
> ### Title: Statistics of samples
> ### Aliases: stats_by_sample
> ### Keywords: statistic sample
> 
> ### ** Examples
> 
>      ## Example of getting stats of samples
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      samples.stats.result = stats_by_sample(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("stats_by_variable")
> ### * stats_by_variable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stats_by_variable
> ### Title: Statistics of variables
> ### Aliases: stats_by_variable
> ### Keywords: statistic variable
> 
> ### ** Examples
> 
>      ## Example of getting stats of variables
> 	 library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>      data(cachexia)
>      variable.stats.result = stats_by_variable(cachexia)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_by_samples_and_xvalues")
> ### * subset_by_samples_and_xvalues
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_by_samples_and_xvalues
> ### Title: Subset by samples and x-values
> ### Aliases: subset_by_samples_and_xvalues
> ### Keywords: subset sample xvalue
> 
> ### ** Examples
> 
>   ## Example of subsetting samples and x-values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   subset = subset_by_samples_and_xvalues(cachexia, c("PIF_178","NETL_022_V1"), 
+ 	   variables = c("Creatine","Serine"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_metadata")
> ### * subset_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_metadata
> ### Title: Subset metadata
> ### Aliases: subset_metadata
> ### Keywords: subset metadata
> 
> ### ** Examples
> 
>   ## Example of subsetting samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   subset = subset_metadata(propolis, c("seasons"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_random_samples")
> ### * subset_random_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_random_samples
> ### Title: Subset random samples
> ### Aliases: subset_random_samples
> ### Keywords: random subset
> 
> ### ** Examples
> 
>   ## Example of subsetting random samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   subset = subset_random_samples(cachexia, 15)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_samples")
> ### * subset_samples
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_samples
> ### Title: Subset samples
> ### Aliases: subset_samples
> ### Keywords: subset sample
> 
> ### ** Examples
> 
>   ## Example of subsetting samples
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   subset = subset_samples(cachexia, c("PIF_178","PIF_132"))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_samples_by_metadata_values")
> ### * subset_samples_by_metadata_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_samples_by_metadata_values
> ### Title: Subset samples by metadata values
> ### Aliases: subset_samples_by_metadata_values
> ### Keywords: subset metadata
> 
> ### ** Examples
> 
>   ## Example of subsetting samples by metadata's values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   subset_samples_by_metadata_values(propolis, "seasons", 
+                                   c("sm","au"))
$data
       AC_au  AN_au  BR_au  CE_au  CN_au  DC_au  IT_au  JB_au  PU_au  SA_au
0     0.0526 0.0358 0.0133 0.0142 0.0147 0.0842 0.0109 0.0275 0.0144 0.0286
0.1       NA     NA     NA     NA     NA 0.0012     NA 0.0008     NA     NA
0.12      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.16      NA     NA     NA     NA     NA     NA 0.0001     NA     NA     NA
0.18      NA     NA     NA     NA     NA     NA     NA     NA     NA 0.0020
0.23      NA     NA     NA     NA     NA     NA     NA     NA 0.0002 0.0025
0.26      NA     NA     NA     NA     NA 0.0049 0.0003     NA     NA 0.0056
0.3       NA     NA     NA     NA     NA 0.0020     NA 0.0024     NA 0.0077
0.33      NA 0.0003     NA     NA     NA 0.0018 0.0003 0.0022     NA     NA
0.35      NA     NA     NA     NA     NA 0.0018     NA     NA     NA 0.0095
0.39      NA     NA     NA 0.0013     NA     NA     NA 0.0023 0.0015 0.0051
0.43      NA     NA     NA 0.0019     NA 0.0057 0.0004 0.0026 0.0008     NA
0.46      NA     NA     NA     NA     NA     NA     NA     NA 0.0042     NA
0.49      NA     NA     NA     NA     NA 0.0145     NA 0.0050 0.0042 0.0794
0.52  0.0042     NA 0.0465 0.0095 0.0062     NA 0.0497 0.0051 0.0020 0.0354
0.55      NA 0.0109 0.0790 0.1488 0.1142     NA 0.0784     NA     NA     NA
0.59      NA     NA 0.0184 0.0361 0.0203 0.0462 0.0202     NA 0.0553 0.1670
0.61  0.1042 0.0357 0.6605 0.7179 0.7661     NA 0.8086 0.0312 0.0623 0.2938
0.65  0.0638 0.0417 0.3903 0.5817 0.3659 0.0434 0.4405 0.0467 0.0092 0.2697
0.69  0.0092 0.0171 0.2002 0.0709 0.0885 0.0865 0.1469 0.0163 0.0238 0.0267
0.72  0.1172 0.0127 0.0667 0.0453 0.0337 0.0597 0.0326 0.0204 0.0402     NA
0.75  0.0681 0.0576 0.0884 0.0594 0.0486 0.1385 0.0515 0.0852 0.0914 0.3017
0.78  0.3063 0.0160     NA     NA     NA 0.2371 0.0269 0.1444 0.1052 0.0605
0.82  0.2495 0.0641 0.3347 0.4216 0.3705 0.1825 0.3284 0.0764 0.0894 0.2274
0.85  0.0763 0.1120 0.1171 0.1055 0.0475 0.3105 0.1465 0.0943 0.1107 0.1493
0.88  0.4965 0.2786 0.4897 0.1853 0.2067 0.3315 0.1073 0.3727 0.0819 0.3534
0.91      NA 0.0730     NA     NA 0.0569 0.6257     NA 0.0705 0.1315 0.3776
0.95  0.4259 0.1192 0.3714 0.2239 0.1786 0.1402 0.2338 0.1901 0.1162 0.4195
0.98  0.1997 0.3038 0.8539 1.1888 0.8862 0.3128 0.8544 0.1958 0.0336 0.4670
1.01  0.1169 0.0539 0.4336 0.5925 0.3426 0.2032 0.4263 0.1193 0.0817 0.2781
1.04  0.2276 0.0989 0.3464 0.3690 0.4765 0.1060 0.1681 0.1145 0.0225 0.2269
1.07  0.0686 0.0973 0.3077 0.1641 0.1374 0.1540 0.1354 0.0505 0.0552 0.1914
1.1   0.1749 0.0628 0.2512 0.1110 0.1821 0.1656 0.1857 0.0690 0.0234 0.0919
1.13  0.1214 0.2318 0.3411 0.2542 0.2427 0.3041 0.1038 0.0857 0.0398 0.0880
1.17  0.3347 0.5398 0.1110 1.0000 1.0000 0.3744 1.0000 0.5401 0.2855 1.5297
1.2   0.1695     NA 0.2211     NA     NA 0.2880     NA     NA 0.4606 0.4978
1.23      NA     NA 0.9806 0.4640 0.4611     NA 0.5420     NA 0.2683     NA
1.26  0.1220 0.1110 0.4868 0.2406 0.3202 0.8977 0.3307 1.0000 0.3078 0.6259
1.3   0.2306     NA 0.2594 0.3600 0.2156 0.2639 0.2093     NA 0.1178 0.3796
1.32      NA     NA 0.2159 0.3390 0.3580 0.3003 0.3025     NA 0.0721 0.0701
1.35  0.1983     NA     NA 0.1157     NA 0.1112     NA     NA 0.1436 0.1405
1.39  0.2251 0.0727     NA 0.0607     NA 0.2318     NA     NA 0.0925 0.1318
1.42  0.0772 0.0586 0.1864 0.0963 0.1583 0.0718 0.0977     NA 0.1286 0.2622
1.45  0.0831     NA 0.1823 0.2810 0.3890 0.0792 0.2796     NA 0.0407 0.2277
1.48  0.0650 0.1016 0.2174 0.2040 0.1909 0.2322 0.1737 0.1630     NA 0.1101
1.51  0.0472 0.1359     NA 0.0972 0.0902 0.1570 0.0858     NA 0.1003 0.1854
1.54  0.1223     NA 0.3668 0.1262 0.1139     NA 0.2186     NA     NA 0.0988
1.57      NA     NA     NA 0.1548 0.1353 0.1774 0.3486 0.1096 0.0753 0.2937
1.6   0.1726 0.0875 0.4234 0.4092 0.4059 0.1520 0.1763 0.0770 0.0612 0.1312
1.64  0.1831 0.0676 0.5535 0.5578 0.6356 0.4138 0.6082 0.0664 0.2541 0.3530
1.67  0.1781 0.1199 0.2537 0.3415 0.2569     NA 0.3420 0.0810 0.1172 0.1734
1.7       NA 0.0924 0.1527     NA     NA 0.1447     NA 0.0500 1.0000 0.1011
1.73  0.1175 0.1344 0.4971 0.6567 0.4215 0.0642 0.4882 0.0464 1.0403 0.3254
1.76  0.0576 0.0721     NA 0.1100 0.0729 0.0917     NA 0.0373 0.0891     NA
1.79  0.0816 0.0869 0.3359 0.1667 0.3723 0.0884     NA 0.0412 0.0922 0.2157
1.82  0.0851 0.0471 0.1989 0.3809 0.3834     NA 0.3825 0.0867 0.0665 0.1155
1.85  0.0920 0.0549 0.2540 0.2677 0.2418     NA 0.4522 0.1445 0.0629 0.1204
1.88  0.0863 0.0563 0.6219 0.6404 0.6141 0.1718 0.6188 0.1291 0.1140 0.3544
1.92  0.0299 0.1567 0.1696 0.3040 0.2674 0.0672     NA 0.1355 0.0222 0.1805
1.95  0.0317 0.2213 0.1834 0.3323 0.4377 0.1154 0.3141 0.0878 0.0509 0.1121
1.98  0.0402 0.0781 0.1913 0.3859 0.1809 0.0699 0.1861     NA     NA     NA
2.01  0.1043 0.2522 0.4479 0.6984 0.4512 0.0833 0.5770 0.3019 0.0556 0.1822
2.04  0.0322 0.2185 0.1719 0.1865 0.1763 0.0534 0.1941 0.3295 0.0279 0.0797
2.07  0.0219     NA 0.0878 0.0748 0.0744 0.0789     NA     NA     NA 0.0401
2.11  0.0313 0.0388     NA 0.2769 0.2328 0.0822 0.2051 0.0610 0.0472 0.1073
2.12      NA 0.0374 0.4535 0.2523 0.2300 0.0627 0.2186 0.0217 0.0204 0.1540
2.16  0.0118 0.0198 0.1823     NA 0.0954     NA 0.0999 0.0203     NA     NA
2.19  0.0106 0.0621 0.1211 0.1812 0.1605 0.0272 0.0903 0.0522     NA     NA
2.22      NA 0.0452     NA     NA     NA 0.0878 0.0376     NA 0.0340 0.0279
2.25  0.0847     NA 0.1081 0.0371 0.0784 0.0937 0.0559     NA 0.0626 0.0782
2.28  0.0552 0.0523 0.1682 0.0732 0.1188 0.0417 0.0312 0.0352 0.0283 0.0374
2.31  0.0546     NA 0.0341     NA     NA 0.0532     NA 0.0304 0.0238     NA
2.34  0.0326 0.0468     NA     NA     NA 0.0580     NA 0.0282 0.0477 0.1521
2.37  0.0916 0.0639 0.1692 0.3211 0.2977 0.0267 0.3021     NA     NA 0.0705
2.4   0.0541     NA     NA     NA     NA     NA     NA     NA 0.0093     NA
2.43  0.0276 0.0363 0.0429 0.0426 0.0689     NA 0.0281 0.0222 0.0165 0.0114
2.46  0.0326     NA 0.0613 0.0488 0.0498 0.0261 0.0127     NA 0.0157 0.0134
2.49  0.0361 0.0168 0.0661 0.0320 0.0742 0.0132 0.0393 0.0379 0.0104 0.0290
2.52  0.0321 0.0347 0.0466 0.0301 0.0402 0.0392 0.0344     NA 0.0184 0.0121
2.55  0.0416 0.0308 0.1773 0.0311 0.0796 0.0352 0.0854 0.0263 0.0485     NA
2.58  0.0057 0.0467     NA 0.0250 0.0399     NA 0.0191 0.0265 0.1364 0.0270
2.61  0.0025 0.0257 0.0275 0.0235 0.0159 0.0139 0.0169 0.0167 0.0335 0.0120
2.64  0.0029 0.0178 0.0266 0.0265 0.0441 0.0282 0.0297 0.0270 0.0199 0.0344
2.67  0.0025 0.0139     NA 0.0129 0.0107     NA 0.0072     NA 0.0062     NA
2.7   0.0067 0.0047     NA 0.0156 0.0217     NA 0.0156     NA 0.0073     NA
2.73      NA     NA 0.0307 0.0088 0.0127 0.0228     NA 0.0214 0.0133 0.0186
2.76  0.0067 0.0292 0.0607 0.0344 0.0162 0.0118 0.0363 0.0081 0.0103 0.0251
2.79  0.0034 0.0111 0.0455 0.0173 0.0300     NA 0.0080 0.0058 0.0288 0.0165
2.82  0.0012 0.0132 0.0505 0.0184 0.0232 0.0065 0.0171 0.0058 0.0092 0.0207
2.85  0.0005 0.0037     NA 0.0161 0.0307 0.0147 0.0143 0.0037 0.0639 0.0073
2.88      NA 0.0069 0.0099 0.0066 0.0220     NA 0.0031     NA 0.1777 0.0067
2.91      NA 0.0069 0.0168 0.0127 0.0191 0.0049 0.0033 0.0045 0.0100 0.0098
2.94  0.0120 0.0037 0.0153 0.0135 0.0067 0.0082 0.0095 0.0041 0.0210     NA
2.97      NA 0.0065 0.0147 0.0082 0.0132 0.0027 0.0075 0.0026 0.0393 0.0040
3     0.0007 0.0056 0.0143 0.0076 0.0270 0.0073 0.0033 0.0006 0.0786 0.0049
3.03      NA 0.0016 0.0133 0.0022 0.0136 0.0028 0.0073 0.0007 0.0107 0.0044
3.06      NA     NA     NA     NA 0.0062     NA     NA 0.0013 0.0760 0.0149
3.09  0.0156 0.0019 0.0195 0.0142 0.0098 0.0342 0.0104 0.0075 0.0057 0.0174
3.12  0.0481 0.0070 0.0127 0.0063 0.0131 0.0267 0.0024 0.0120 0.0175 0.0170
3.15  0.0381 0.0081 0.0083 0.0052 0.0106 0.0454 0.0029 0.0143 0.0095 0.0305
3.18  0.0201 0.0031 0.0067 0.0078 0.0156 0.0234 0.0071     NA 0.0731 0.0225
3.21  0.0059     NA 0.0047 0.0016     NA 0.0389     NA 0.0044 0.0956 0.0160
3.24  0.0623 0.0107 0.0177 0.0075 0.0082 0.1348 0.0073 0.0052 0.1836 0.0243
3.27      NA     NA 0.0141 0.0210 0.0096 0.0577 0.0072 0.0111 0.0519 0.0198
3.29      NA     NA     NA 0.0567 0.0615 0.3708 0.0398 0.0123 0.5765 0.0676
3.33      NA     NA     NA 0.0051 0.0162 0.0537 0.0054 0.0914 0.1869 0.1377
3.36      NA     NA     NA 0.0050 0.0281 0.0851 0.0115 0.0130 0.0696 0.0430
3.39      NA     NA     NA 0.0048 0.0169 0.1154 0.0118 0.0139 0.0569 0.0350
3.42      NA     NA     NA 0.0046 0.0180 0.1194 0.0154 0.0162 0.0118 0.0548
3.45      NA     NA     NA 0.0163 0.0235 0.1659 0.0141 0.0365 0.0175 0.0219
3.48      NA     NA     NA 0.0189 0.0460 0.1305 0.0131     NA 0.0078 0.0815
3.51  0.2645 0.0571 0.0129 0.0328 0.0648 0.1024 0.0367 0.0288 0.0180 0.0656
3.54  0.1436 0.0121 0.0263 0.0178 0.0178 0.3886 0.0307 0.0686 0.0288 0.0918
3.57  0.1769 0.0340 0.0411 0.0187 0.0957     NA 0.0218 0.0369 0.0550 0.2375
3.6   0.3868 0.1214 0.1369 0.0631 0.1296 0.2838 0.0424 0.0547 0.0448 0.1235
3.63  0.1617 0.0238 0.0485 0.0828 0.0571 0.5080 0.0470 0.1224 0.1676 0.6640
3.66  0.3798 0.0461 0.0221 0.0143 0.0469 0.3341 0.0261     NA 0.0398 0.2346
3.69  0.1010 0.0437 0.0583 0.0146 0.0446 0.3046 0.0795     NA 0.0214 0.1433
3.72  0.1129 0.0362 0.0515 0.0864 0.0904 1.0550 0.0422 0.1504 0.0180 0.4395
3.75  0.5600 0.1531 0.0984 0.1011 0.0686 1.8259 0.0787 0.3755 0.1619 0.7230
3.78  0.5763 0.2362 0.0638 0.0805 0.1512 0.9232 0.0942 0.2344     NA 0.5452
3.81  0.6878 0.2737 0.3075 0.2768 0.0740 2.7910 0.2779 1.1349 0.1333 1.9252
3.84  0.7781 0.1609     NA 0.1614 0.1684 0.3118 0.1161 0.1758 0.0302 0.2234
3.87  0.3993 0.1317 0.0759 0.0307 0.0729 0.3550 0.0473 0.3589 0.0440 0.3322
3.9       NA 0.0250 0.0169 0.0080     NA 0.0657 0.0154     NA 0.0575     NA
3.93      NA     NA     NA     NA     NA 0.0524     NA 0.0445     NA 0.0494
3.96  0.0256 0.0124 0.0355 0.0228 0.0209     NA 0.0168 0.0188 0.0081 0.0214
3.99  0.0178 0.0090 0.0250 0.0167 0.0131 0.0380 0.0121 0.0188 0.0309     NA
4.02      NA     NA     NA 0.0132 0.0127 0.0480 0.0062 0.0418     NA 0.0572
4.05      NA     NA     NA     NA 0.1593 0.0876     NA 0.0357 0.0499 0.0607
4.08      NA     NA     NA 0.2634 0.1701 0.0836 0.3071 0.0174 0.0418 0.0864
4.13      NA     NA     NA 0.0324     NA 0.1118     NA 0.0147 0.0328 0.1338
4.17      NA     NA     NA 0.0150 0.0301 0.0560 0.0331 0.0157 0.0131 0.0433
4.2       NA     NA     NA 0.0300 0.0134 0.1635 0.0341 0.0535 0.0247 0.0676
4.25      NA     NA     NA 0.0050 0.0073 0.0966 0.0049 0.0310     NA 0.0386
4.28      NA     NA     NA 0.0079 0.0154 0.0308 0.0141     NA 0.0113 0.0376
4.31      NA     NA     NA 0.0077 0.0088 0.0195 0.0085     NA 0.0035 0.0141
4.34      NA     NA     NA 0.0032 0.0041 0.0472     NA 0.0069 0.0155 0.0288
4.38      NA     NA     NA 0.0038 0.0080 0.0179 0.0021 0.0063 0.0027 0.0111
4.41      NA     NA     NA 0.0023     NA 0.0269     NA 0.0040 0.0076 0.0365
4.45      NA     NA     NA 0.0785 0.0467 0.0200 0.0527     NA 0.0072 0.0261
4.5       NA     NA     NA 0.0359 0.0276 0.0287 0.0330 0.0037 0.0103 0.0412
4.53      NA     NA     NA 0.0616 0.0653     NA 0.0674 0.0028 0.0079     NA
4.55      NA     NA     NA     NA 0.0162 0.0057 0.0175     NA 0.0025 0.0089
4.58      NA     NA     NA     NA     NA 0.0012     NA     NA     NA 0.0009
4.63      NA     NA     NA     NA     NA     NA 0.0009 0.0005 0.0002     NA
4.66      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.71      NA     NA     NA 0.0013 0.0011     NA 0.0002     NA     NA     NA
4.74      NA     NA     NA     NA     NA     NA 0.0022     NA 0.0002     NA
4.78      NA     NA     NA 0.0067 0.0041 0.0340 0.0027     NA 0.0038     NA
4.81  0.0064     NA 0.0533 0.0665 0.0468     NA 0.0529     NA 0.0047 0.0239
4.84  0.0177 0.0191 0.0907 0.1265 0.1203 0.0178 0.1297     NA 0.0024 0.0502
4.88  0.0150 0.0568 0.0178 0.0390 0.0390 0.1572 0.0390 0.0612 0.0033 0.0779
4.91  0.0391     NA 0.0149 0.0592 0.0170 0.1067 0.0296 0.0697 0.0128 0.1216
4.96  0.0196     NA 0.0049 0.0196 0.0174 0.0126 0.0077     NA 0.0094 0.0206
5     0.0200 0.0094 0.1082 0.0549 0.0546 0.0241 0.0604 0.0136 0.0109 0.0648
5.03  0.0195 0.0047 0.0280 0.0401 0.0274 0.0441 0.0267 0.0132 0.0212 0.0288
5.06  0.0152 0.0068 0.0458 0.0743 0.0440 0.0656 0.0468 0.0158     NA 0.0276
5.09  0.0163 0.0049 0.0236 0.0248 0.0191     NA 0.0192 0.0164 0.0245 0.0249
5.13  0.0271 0.0105 0.0239 0.0480 0.0424 0.0485 0.0358 0.0155 0.0541 0.0121
5.17  0.0176 0.0129 0.1211 0.0729 0.0706 0.0423 0.0573 0.0183 0.0388 0.0589
5.21  0.0142 0.0064 0.0184 0.0289 0.0156 0.0504 0.0436 0.0179 0.0560 0.0591
5.25  0.0151 0.0018 0.0077     NA 0.0052 0.0448 0.0112 0.0167 0.0188 0.0144
5.28  0.0231     NA 0.0370 0.1255 0.0437 0.0480 0.1083 0.0186     NA 0.0497
5.31  0.0807 0.0515 0.1347 0.1563 0.2404 0.0566 0.1656 0.0349 0.1411 0.0961
5.34  0.0285 0.0212 0.0617 0.0792     NA 0.0270     NA     NA     NA 0.0473
5.37  0.0100 0.0072 0.0636 0.1143 0.0614 0.0070 0.0686 0.0171 0.0107 0.0178
5.42      NA 0.0088 0.0091 0.0061 0.0288 0.0348 0.0136     NA 0.0099 0.0288
5.45  0.0123 0.0063 0.0094 0.0043 0.0083 0.0414 0.0066 0.0116 0.0120     NA
5.5       NA     NA 0.0059 0.0069 0.0076     NA 0.0070     NA     NA     NA
5.53  0.0011 0.0019 0.0062 0.0045     NA 0.0011 0.0077 0.0013 0.0041     NA
5.56  0.0043     NA 0.0042     NA     NA 0.0035 0.0028     NA 0.0067     NA
5.6   0.0023     NA     NA 0.0035     NA     NA     NA     NA 0.0143 0.0012
5.62      NA 0.0021 0.0296 0.0367 0.0357 0.0012 0.0205 0.0021 0.0164 0.0131
5.67  0.0042 0.0009 0.0163 0.0060 0.0128     NA 0.0043 0.0022 0.0190 0.0031
5.7   0.0024 0.0144 0.0595 0.0921 0.0630     NA 0.0649 0.0033     NA 0.0219
5.75      NA 0.0024 0.0143 0.0084 0.0091     NA 0.0061 0.0137 0.0127 0.0023
5.78  0.0008 0.0051 0.0052 0.0049 0.0214     NA 0.0030 0.0030     NA 0.0047
5.81  0.0025 0.0023 0.0166 0.0120 0.0173 0.0182 0.0084 0.0040 0.0040 0.0044
5.84  0.0018 0.0005 0.0469 0.0037 0.0213 0.0102     NA     NA 0.0072 0.0094
5.88  0.0050 0.0065 0.0906 0.0323 0.0343 0.0100 0.0563 0.0168 0.0203 0.0158
5.91  0.0066 0.0048 0.0497 0.0240 0.0361 0.1061 0.0243 0.0296 0.0227 0.0468
5.95  0.0052 0.0026 0.0134 0.0150 0.0418 0.0188 0.0082 0.0115 0.0048 0.0167
5.99  0.0048     NA     NA 0.0021 0.0152 0.0179 0.0027 0.0122 0.0125 0.0167
6.03  0.0026 0.0002 0.0088 0.0059 0.0068 0.0110 0.0041 0.0036 0.0031 0.0089
6.06      NA 0.0005 0.0097 0.0051 0.0117 0.0280 0.0024 0.0065 0.0043 0.0042
6.09      NA 0.0036 0.0044     NA 0.0038     NA 0.0078 0.0422 0.0086 0.0293
6.13      NA 0.0252 0.0215 0.0074 0.0196 0.0133 0.0284 0.0980     NA 0.0235
6.17  0.0059 0.0417 0.0096 0.0162 0.0296 0.0629 0.0410 0.0604 0.0078 0.0556
6.2   0.0200 0.0182 0.0077 0.0113 0.0124 0.1314 0.0111 0.0403 0.0758 0.0966
6.25  0.0218 0.0106 0.0160 0.0494 0.0185 0.2098 0.0286 0.0824 0.1673 0.2034
6.28  0.0399 0.0121 0.0327 0.0679 0.0519 0.1568 0.0393 0.0452 0.0898 0.0851
6.31  0.0204 0.0195 0.0175 0.0253 0.0047 0.1010 0.0214 0.0275 0.0505 0.0703
6.34  0.0155 0.0138 0.0046 0.0056 0.0085 0.1161 0.0097 0.0146 0.0077 0.0270
6.38  0.0593 0.0049 0.0036 0.0126 0.0192 0.2065 0.0089 0.0290 0.0499 0.0982
6.41  0.0187 0.0084 0.0057 0.0048 0.0119 0.0595 0.0081 0.0367 0.0358 0.0620
6.46  0.0395 0.0213 0.0083 0.0032 0.0089 0.0612 0.0125 0.0512 0.0230 0.0403
6.5   0.0380 0.0442 0.0150 0.0281 0.0227 0.1640 0.0225 0.0659 0.0034 0.2124
6.53  0.0369 0.0339 0.0145 0.0239 0.0246 0.1425 0.0188 0.0581     NA 0.0602
6.56  0.0569 0.0429 0.0164 0.0110 0.0074 0.1019 0.0083 0.0806 0.0088 0.0290
6.59  0.0253 0.0106 0.0248 0.0228 0.0306 0.2011 0.0221 0.0670 0.0125 0.1139
6.62  0.1146 0.0496 0.0230 0.0353 0.0349 0.1265 0.0240 0.1575 0.0020 0.2403
6.66  0.1118 0.0248 0.0168 0.0626 0.0719 0.2902 0.0253 0.0632 0.0072 0.0952
6.7   0.1698 0.0954 0.0862 0.0865 0.0874 0.2477 0.0277 0.1862 0.0430 0.3372
6.75  0.1467 0.2087 0.0859 0.1660 0.0800 0.3972 0.1254 0.3857 0.0541 0.2242
6.78  0.2449 0.0432 0.0983 0.1005 0.1334 0.2723 0.0759 0.1183     NA 0.4796
6.81  0.1457 0.1136 0.0474 0.0385 0.0556 0.4129 0.0952 0.2372 0.0977 0.3960
6.84  0.1254 0.0397 0.0491 0.0206 0.0609 0.4300 0.0530 0.1106 0.0616 0.1206
6.88  0.0292 0.0193 0.0435 0.1111 0.0235 0.3518 0.0502 0.2293 0.0525 0.3314
6.92  0.1188 0.0479 0.0871 0.0353 0.0329 0.3796 0.0259 0.0569 0.1076 0.1292
6.96  0.0566 0.0703 0.0785 0.0426 0.0376 0.0480 0.0462 0.1140 0.1302 0.0308
6.99  0.0471 0.0350 0.0160 0.0868 0.0087 0.4923 0.0315 0.0809 0.0134 0.2240
7.03  0.0794 0.0284 0.0273 0.0182 0.0197 0.1782     NA 0.0352 0.0366     NA
7.06  0.0133     NA 0.0113 0.0050 0.0150 0.0917 0.0097 0.0420 0.0538 0.0662
7.09  0.0364 0.0064 0.0346 0.0120 0.0186 0.1293 0.0075 0.0749 0.0306 0.0769
7.12  0.0763 0.0477 0.0234 0.0129 0.0299 0.2354 0.0197 0.0371 0.2949 0.1352
7.16  0.0362 0.0209 0.0481 0.0223 0.0280 0.1063 0.0200 0.0423 0.2134 0.0704
7.21  0.0471 0.0440 0.0090 0.0110 0.0085 0.0266 0.0252 0.0311 0.0855 0.0107
7.25  0.0293 0.0106 0.0110 0.0049 0.0113 0.0987 0.0076 0.0206 0.2733 0.0438
7.28      NA 0.0239 0.0088 0.0051 0.0117 0.0807 0.0093 0.0291 0.0403 0.0370
7.31  0.0638 0.0127 0.0127 0.0142 0.0103 0.0568 0.0123 0.0161 0.0412 0.0469
7.34      NA 0.0121 0.0097 0.0428 0.0144 0.3500 0.0081 0.0836 0.0778 0.2363
7.37  0.2249 0.0168 0.0142 0.0649 0.0487 0.1997 0.0166 0.0392 0.0330 0.2427
7.42  0.2106 0.0171 0.0284 0.0676 0.0192 0.9225 0.0302 0.2024 0.1350 1.2348
7.45  0.1046 0.0341 0.0354 0.1187 0.0437 0.3571 0.0571     NA 0.0422     NA
7.5   0.0278 0.0067 0.0064 0.0119 0.0198     NA 0.0128 0.0261 0.0300 0.1727
7.53  0.1203 0.0142     NA 0.0057 0.0227 0.4149     NA 0.2571 0.0971 0.4566
7.56  0.1646 0.0145 0.0155 0.0710 0.0129 0.4044 0.0360 0.1656 0.1142 0.1348
7.59  0.0781 0.0115 0.0042 0.0404 0.0150 0.0773 0.0127 0.0218 0.2392     NA
7.63  0.0210     NA 0.0024 0.0061 0.0084 0.1093 0.0016 0.0600 0.0612 0.0915
7.67  0.0342 0.0013 0.0021 0.0101     NA 0.1046 0.0042 0.0181 0.0285 0.0762
7.71  0.0161 0.0012 0.0059 0.0071 0.0070 0.0239 0.0036 0.0159 0.0078 0.0103
7.74  0.0144     NA 0.0026 0.0013 0.0031 0.0768 0.0003 0.0165 0.0043 0.0283
7.78  0.0049 0.0004     NA     NA     NA     NA     NA 0.0063     NA 0.0098
7.81  0.0048 0.0002 0.0081     NA 0.0156 0.0376 0.0074 0.0125 0.0026 0.0092
7.84  0.0305     NA 0.0012     NA 0.0030     NA     NA     NA 0.0026 0.0077
7.87  0.0085     NA 0.0015     NA 0.0059 0.0210 0.0008 0.0077 0.0057 0.0232
7.91  0.0468     NA 0.0020     NA 0.0073 0.0356 0.0006 0.0095 0.0058 0.0150
7.96  0.0247 0.0024 0.0042 0.0027 0.0191 0.0572 0.0115 0.0238 0.0042 0.0657
7.99  0.1562     NA 0.0026 0.0152     NA 0.3157 0.0049     NA 0.0021 0.0898
8.02  0.1116 0.0074 0.0130 0.0687 0.0028 0.2798 0.0417 0.2583 0.0005 0.7502
8.05  0.0126     NA 0.0026 0.0373 0.0036 0.0409 0.0060     NA 0.0064     NA
8.08  0.0248 0.0016     NA     NA 0.0028 0.0434     NA 0.0188 0.0309 0.0557
8.11  0.0101 0.0094 0.0064 0.0261 0.0169 0.0747 0.0232 0.0097 0.0312 0.0159
8.14      NA 0.0008     NA     NA     NA     NA     NA 0.0079     NA 0.0257
8.17      NA 0.0008 0.0015     NA 0.0041     NA     NA     NA     NA     NA
8.2       NA     NA 0.0016     NA 0.0041     NA     NA     NA     NA     NA
8.24      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.26      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.31      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.36      NA     NA     NA     NA     NA 0.0040     NA     NA     NA     NA
8.4   0.0005     NA     NA     NA     NA     NA     NA     NA 0.0007     NA
8.45      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.49      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.69      NA     NA     NA     NA     NA     NA     NA     NA     NA 0.0008
8.73      NA     NA     NA     NA     NA 0.0012     NA     NA     NA     NA
8.75      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.82      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.86      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.11      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.14      NA     NA     NA     NA     NA     NA 0.0001     NA     NA 0.0024
9.17      NA 0.0012 0.0064 0.0069 0.0041     NA 0.0084     NA     NA     NA
9.2       NA     NA 0.0007 0.0019 0.0015     NA     NA     NA     NA     NA
9.23      NA     NA 0.0010 0.0027     NA     NA 0.0008     NA     NA     NA
9.26      NA     NA 0.0018     NA 0.0018     NA 0.0012     NA 0.0008 0.0006
9.29      NA 0.0104     NA     NA     NA     NA 0.0002 0.0073     NA     NA
9.32      NA     NA     NA     NA     NA     NA 0.0001     NA 0.0057     NA
9.35      NA 0.0006     NA     NA     NA     NA     NA 0.0013     NA     NA
9.38      NA     NA 0.0009 0.0014 0.0013     NA 0.0004     NA     NA     NA
9.41      NA     NA     NA     NA     NA     NA 0.0004     NA     NA     NA
9.44      NA     NA     NA     NA     NA     NA     NA     NA 0.0052     NA
9.48      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.51      NA     NA     NA     NA     NA 0.0035     NA 0.0056     NA 0.0018
9.53  0.0033 0.0021 0.0040 0.0014 0.0049 0.0061 0.0034 0.0064     NA 0.0028
9.55      NA 0.0023     NA     NA     NA     NA     NA     NA     NA     NA
9.59      NA     NA     NA     NA     NA     NA     NA 0.0010     NA     NA
9.63      NA     NA     NA     NA     NA     NA     NA     NA 0.0010 0.0109
9.66      NA 0.0013     NA     NA     NA 0.0012     NA 0.0025 0.0006 0.0118
9.69  0.0011 0.0040 0.0222 0.0472 0.0308     NA 0.0213 0.0273 0.0009 0.0378
9.72  0.0230 0.0033 0.0065 0.0071 0.0056 0.0508 0.0039     NA     NA     NA
9.75      NA     NA 0.0048 0.0041 0.0049 0.0013 0.0023     NA     NA     NA
9.78      NA     NA 0.0008     NA 0.0012     NA     NA     NA     NA     NA
9.8       NA     NA     NA     NA     NA     NA 0.0005     NA 0.0007     NA
9.83      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.88      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.9       NA     NA 0.0046 0.0017 0.0045     NA 0.0025     NA     NA     NA
9.92      NA     NA     NA 0.0017     NA     NA     NA     NA     NA     NA
9.98      NA     NA     NA     NA     NA     NA     NA     NA 0.0002     NA
10        NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.04     NA     NA     NA     NA     NA     NA     NA 0.0004     NA     NA
10.06     NA 0.0003     NA     NA     NA     NA     NA     NA     NA     NA
10.11     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.15     NA     NA     NA     NA     NA     NA 0.0002     NA 0.0002     NA
10.27     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.58     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
11.96     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.03     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.13     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.17     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.81     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
13.51     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
13.55     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
       SJ_au SJC_au  UR_au  VR_au  XX_au  AC_sm  AN_sm  BR_sm  CE_sm  CN_sm
0     0.0430 0.0305 0.0242 0.0511 0.0232 0.0562 0.0237 0.0043 0.0054 0.0091
0.1       NA     NA     NA     NA     NA 0.0007     NA     NA     NA     NA
0.12      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.16      NA 0.0025 0.0008     NA     NA     NA     NA     NA 0.0001     NA
0.18      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
0.23      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.26      NA     NA 0.0022     NA 0.0009     NA     NA     NA 0.0001     NA
0.3       NA     NA 0.0014 0.0006     NA     NA     NA     NA     NA     NA
0.33      NA 0.0013 0.0032     NA 0.0008     NA     NA     NA     NA 0.0010
0.35      NA 0.0005 0.0028     NA 0.0004     NA     NA     NA     NA     NA
0.39      NA     NA 0.0048     NA     NA     NA     NA     NA     NA 0.0003
0.43  0.0007 0.0029     NA 0.0017 0.0010     NA     NA     NA 0.0003     NA
0.46      NA 0.0066     NA 0.0010     NA     NA     NA     NA 0.0001     NA
0.49  0.0132     NA 0.0958     NA     NA 0.0001     NA     NA     NA     NA
0.52  0.0113 0.1267     NA 0.0028 0.0766 0.0001 0.0008 0.0060 0.0008 0.0014
0.55  0.0072 0.0574 0.0312 0.0059 0.0479 0.0010 0.0095 0.0140 0.0366 0.0318
0.59  0.1024     NA     NA     NA     NA 0.0003 0.0019 0.0016 0.0052 0.0016
0.61      NA 0.6273 0.5460 0.0765 0.6843 0.0032 0.0243 0.1026 0.1828 0.2938
0.65  0.0699 0.3999 0.3200 0.1026 0.4050 0.0012 0.0199 0.0591 0.1147 0.0560
0.69  0.0238 0.0699 0.0354 0.0168 0.0455 0.0085 0.0228 0.0313 0.0166 0.1061
0.72  0.0322 0.0398 0.0487 0.0993 0.0249     NA 0.0104 0.0118 0.0077 0.0080
0.75      NA 0.0848 0.0385 0.1850 0.0346 0.0376 0.0210 0.0113 0.0043 0.0054
0.78  0.2459 0.3391 0.2778 0.1444 0.2415 0.0124 0.0184 0.0077 0.0158 0.0226
0.82  0.1720 0.4861 0.1415 0.4842 0.1426 0.0902 0.0454 0.0496 0.1155 0.0919
0.85  0.1354 0.1040 0.1054 0.3279 0.0365 0.0788 0.0335 0.0320 0.0076 0.0393
0.88  0.2697 0.5456 0.2099 0.3061 0.1761 0.1054 0.4736 0.0545 0.0873 0.0505
0.91  0.0515 0.1279     NA 0.0713     NA 0.0261 0.1191     NA 0.0211 0.0703
0.95  0.3320 0.6197 0.2154 0.3797 0.5012 0.0762 0.2437 0.0510 0.0519 0.0936
0.98  0.2273 1.4047 0.8761 0.0795 0.8610 0.0560 0.3287 0.1226 0.2620 0.0946
1.01  0.0899 0.3903 0.1733 0.2129 0.4226 0.0333 0.1308 0.0711 0.0994 0.2258
1.04  0.1613 0.4654 0.2884 0.0620 0.1633 0.0418 0.1099 0.0701 0.1565 0.1492
1.07  0.0780 0.3602 0.2153 0.0949 0.2335 0.0355 0.0702 0.0617 0.0697 0.1290
1.1   0.1306 0.2772 0.2699 0.1625 0.3605 0.0363 0.0542 0.0306 0.0596 0.0935
1.13  0.1983 0.1505 0.2114 0.1316 0.2103 0.0526 0.0328 0.0926 0.1025 0.1213
1.17  0.3190 1.0000 0.8443 0.4133 1.2730 0.0565 0.0966 0.3891 0.5398 0.5766
1.2   0.2961 0.3462 0.4257 0.1145 0.4049 0.0124     NA 0.0552     NA 0.1291
1.23      NA 0.4420 0.1656 0.3672 0.2883 0.0560 0.0746 0.1602 0.1472 0.2243
1.26  0.4077 0.7148 0.3729 0.8751 0.3258 0.1957 0.0777 0.0843 0.1221 0.1317
1.3   0.1698 0.3078 0.2397 0.3123 0.1957 0.0504     NA 0.0403 0.0418     NA
1.32  0.0807 0.5239 0.0735     NA     NA 0.1528     NA 0.0967 0.1821 0.1433
1.35  0.0842 0.1346 0.0634 0.2569     NA 0.0193     NA 0.0180 0.0530 0.0638
1.39  0.2698 0.7113 0.0924 0.5416 0.1041 0.1131 0.0837 0.0359 0.0123 0.0162
1.42  0.0510 0.5263 0.1032 0.0886 0.0863 0.0492 0.0739 0.0405 0.0519 0.0875
1.45  0.1106 0.2237 0.3064 0.0980 0.2576 0.0274 0.0714 0.0657 0.0811 0.1197
1.48  0.0539 0.2370 0.2799 0.2012 0.1622 0.0200 0.1506 0.0329 0.1937 0.1552
1.51  0.1413 0.1541 0.3304 0.2985 0.0783 0.0440 0.0461 0.0615 0.0217 0.0262
1.54      NA 0.1750 0.2407     NA 0.2267 0.0425 0.0547 0.0435 0.0776 0.0944
1.57  0.1105 0.4696 0.1921 0.2828 0.3129 0.0242 0.0696 0.0482 0.0593 0.0766
1.6       NA 0.2693 0.3329 0.1198 0.1584 0.0390 0.0523 0.0687 0.1038 0.0750
1.64  0.2723 0.6194 0.4837 0.3536 0.6220 0.0421 0.0313 0.1214 0.2310 0.3239
1.67  0.1324 0.5560 0.2801     NA 0.3164 0.0688 0.0133 0.0679 0.1037 0.0450
1.7   1.0000 0.8963 0.4872 1.0000 0.1015 0.0476 0.0047 0.0413 0.0622 0.1264
1.73  0.8942 1.6796 0.4383 1.0474 0.4849 0.0131 0.0375 0.0804 0.1608 0.1467
1.76      NA 0.1604     NA     NA 0.0891 0.0110 0.0239     NA 0.0207 0.0315
1.79  0.1276 0.1947 0.2865 0.1048 0.1536 0.0239     NA 0.0743 0.0974 0.0330
1.82      NA 0.4320 0.2019 0.0463 0.1977 0.0167 0.0048 0.0604 0.0877 0.1938
1.85  0.1548 0.2558 0.5102 0.0787 0.5135 0.0136 0.1204 0.0388 0.0603 0.1594
1.88  0.3284 0.5852 0.2766 0.0796 0.4351 0.0217     NA 0.1344 0.2020 0.3785
1.92  0.4914 0.1988 0.8332 0.1783 0.2511 0.0247 0.0309 0.0764 0.0896 0.1325
1.95  0.1732 0.2106 0.4505 0.0847 0.1722 0.0220 0.0226 0.0588 0.1100 0.1132
1.98  0.5395 0.2105 0.5500 0.0484 0.3780 0.0177 0.0998 0.0654 0.0874 0.1248
2.01  0.4494 0.3559 0.7833 0.2380 0.6092 0.0473 0.2000 0.0940 0.1589 0.1550
2.04  0.6995 0.3617 0.9269 0.0900 0.2566 0.0194 0.1134 0.0313 0.1189 0.0852
2.07  0.1070 0.0874 0.1402     NA 0.0698 0.0112 0.0172 0.0204 0.0196 0.0262
2.11  0.1102 0.2859 0.1626 0.0580 0.3633 0.0241 0.0620 0.0885 0.0658 0.0797
2.12  0.0457 0.4752 0.3834 0.0251 0.2178 0.0110 0.0315 0.0666 0.0948 0.1357
2.16  0.0765 0.0782 0.0626 0.0406 0.0469 0.0046 0.0172 0.0500 0.0427 0.0386
2.19  0.0746 0.1288 0.1402 0.0401 0.1055 0.0100 0.0159 0.0316 0.0402 0.0447
2.22      NA 0.0386     NA     NA     NA 0.0135 0.0077     NA 0.0058 0.0541
2.25  0.1117 0.0763 0.1110 0.1163 0.0788 0.0268 0.0729 0.0211 0.0167 0.0461
2.28  0.0483     NA     NA 0.0521 0.0686 0.0126 0.0329 0.0395 0.0215 0.0635
2.31  0.0297     NA     NA 0.0229 0.0487 0.0298 0.0089 0.0087 0.0030     NA
2.34  0.0740     NA 0.0760 0.0630     NA 0.0128 0.0190 0.0159 0.0005 0.0109
2.37  0.0784 0.2955 0.2591 0.0326 0.2661 0.0104 0.0359 0.0699 0.0752 0.1045
2.4   0.0718     NA 0.0542 0.0226     NA 0.0131 0.0297     NA 0.0257 0.0955
2.43  0.0879 0.0995 0.0371 0.0383 0.0587 0.0053 0.0208 0.0172 0.0102 0.0130
2.46  0.1042 0.0336 0.0787 0.0104 0.0225 0.0077 0.0070 0.0271 0.0058 0.0340
2.49  1.0454 0.0801 0.7775 0.0394 0.1063 0.0143 0.0029 0.0342 0.0029 0.0174
2.52  0.0557 0.0997 0.0449 0.0544 0.1254 0.0213 0.0189 0.0247 0.0071 0.0130
2.55  0.1710 0.0758 0.1369     NA 0.0868 0.0172 0.0136 0.0323 0.0052 0.0632
2.58  0.0779     NA 0.1012 0.1083 0.0659 0.0078 0.0034 0.0148 0.0030 0.0194
2.61  0.1304 0.0199 0.1233 0.0378 0.0471 0.0080 0.0080 0.0187 0.0036     NA
2.64      NA 0.0419     NA 0.0119 0.0220 0.0044 0.0066 0.0180 0.0021 0.0193
2.67  0.0161     NA     NA 0.0126     NA 0.0096 0.0060 0.0048 0.0011 0.0113
2.7   0.0244 0.0102 0.0228 0.0105 0.0097 0.0078 0.0085 0.0107 0.0025 0.0162
2.73      NA 0.0336 0.0235 0.0101 0.0114 0.0019 0.0074 0.0081 0.0031 0.0069
2.76  0.0329 0.0208 0.0145 0.0115 0.0167 0.0118 0.0159 0.0161 0.0092 0.0127
2.79  0.0262 0.0359 0.0288 0.0234 0.0167 0.0088 0.0121 0.0126 0.0032 0.0160
2.82  0.0241 0.0450 0.0172 0.0047 0.0271 0.0060 0.0099 0.0125 0.0049 0.0174
2.85  0.0507 0.0137 0.0157     NA 0.0148 0.0075 0.0102 0.0095 0.0026 0.0204
2.88  0.1707 0.0758 0.0175 0.0945     NA 0.0063 0.0109 0.0046 0.0030 0.0168
2.91  0.0149 0.0279 0.0167 0.0350 0.0021 0.0065 0.0042 0.0059 0.0014 0.0085
2.94  0.0373 0.0082 0.0420 0.0127 0.0061 0.0079 0.0029 0.0026 0.0010 0.0057
2.97  0.1257 0.0066 0.0540 0.0032 0.0106 0.0068 0.0064 0.0023 0.0019 0.0111
3     0.0573 0.0547 0.0482 0.1013 0.0117 0.0054 0.0088 0.0070 0.0096 0.0193
3.03      NA 0.0176     NA 0.0042 0.0051 0.0100 0.0062 0.0029 0.0019 0.0050
3.06  0.1452 0.0067 0.0569 0.0357 0.0115 0.0126 0.0072 0.0016 0.0015 0.0153
3.09  0.0341 0.0642 0.0673 0.0443 0.0282 0.0180     NA 0.0038 0.0023 0.0111
3.12  0.0104 0.0128     NA 0.0171 0.0096 0.0346 0.0191 0.0039 0.0037 0.0202
3.15  0.0459 0.0193 0.0122 0.0119 0.0145 0.0154 0.0148 0.0054 0.0011 0.0219
3.18  0.0365 0.0125 0.0269 0.0622 0.0074 0.0261 0.0076 0.0016 0.0029 0.0330
3.21      NA     NA 0.0158 0.0405 0.0043 0.0212 0.0086 0.0056 0.0052 0.0198
3.24  0.1370 0.0507     NA 0.1537 0.0066 0.0481 0.0024 0.0023 0.0041 0.0156
3.27  0.1160 0.0458 0.0315 0.1216 0.0093 0.0454 0.0710 0.0022 0.0038 0.0154
3.29  0.5878 0.3675 0.0147 1.2558 0.0932 0.1855 0.1086     NA 0.0362 0.0270
3.33  0.0569 0.2126 0.1983     NA 0.0163     NA     NA     NA     NA     NA
3.36  0.0608     NA 0.1095 0.0581 0.0359     NA     NA     NA     NA     NA
3.39  0.0765 0.0434 0.0195 0.0582 0.0337     NA     NA     NA     NA     NA
3.42  0.0668 0.0250 0.0611 0.0386 0.0187     NA     NA     NA     NA     NA
3.45  0.0200 0.0248 0.0356 0.0703 0.0408     NA     NA     NA     NA     NA
3.48  0.0242 0.0231 0.0724 0.0578 0.0525     NA     NA     NA     NA     NA
3.51  0.0847 0.0286 0.0568 0.1516 0.0909 0.0619 0.0511 0.0172 0.0068 0.0405
3.54  0.1048 0.0348 0.0382 0.1975 0.0566 0.0746 0.0082 0.0096 0.0077 0.0450
3.57  0.0337     NA 0.0554 0.0629 0.0569 0.1106 0.0684 0.0145 0.0120 0.0595
3.6   0.1287 0.1865 0.0992 0.2442 0.1519 0.1211 0.0300 0.0367 0.0206 0.0795
3.63  0.2141 0.1263 0.1626 0.1290 0.1131 0.1607 0.0305 0.0310 0.0277 0.0616
3.66  0.0696     NA 0.0568 0.1339 0.0430 0.0832 0.0408 0.0150 0.0168 0.0623
3.69  0.3157 0.0997 0.0937 0.1873 0.1011 0.1127 0.0223 0.0392 0.0138 0.0510
3.72  0.4001 0.0835 0.1466 0.2089 0.0746 0.0661 0.0642 0.0673 0.0436 0.0465
3.75  0.3822 0.1307 0.1617 0.4424 0.2087 0.0725 0.0433 0.0416 0.0209 0.0602
3.78  0.3037 0.1031 0.5344 0.3084 0.3100 0.2011 0.0994 0.0775 0.0307 0.0636
3.81  1.7279 0.3973 1.9690 0.8394 0.3262 0.2255 0.1789 0.1699 0.0923 0.0707
3.84  0.2050 0.1240 0.1900 0.5931 0.3966 0.1548 0.1050 0.0606 0.0598 0.0778
3.87  0.1438 0.0319 0.4160 0.2214 0.1669 0.1496 0.0491 0.0272 0.0110 0.0094
3.9       NA     NA     NA     NA     NA 0.0295 0.0031     NA 0.0026 0.0208
3.93  0.0326     NA 0.0987     NA 0.0154 0.0419     NA     NA 0.0006 0.0140
3.96  0.0638 0.0333 0.0299 0.0260 0.0142 0.0192 0.0137 0.0151 0.0033 0.0140
3.99  0.0582 0.0501 0.0519 0.0436 0.0337 0.0430 0.0065 0.0173 0.0046 0.0327
4.02  0.0328 0.0284 0.0632 0.0511 0.0190 0.0336 0.0110 0.0140 0.0025 0.0204
4.05  0.0888 0.0135 0.0211 0.0145     NA 0.0201 0.0097 0.0046 0.0464 0.0972
4.08  0.0778 0.2272 0.2507 0.0563 0.2601 0.0555 0.0115 0.0591 0.0526 0.0901
4.13  0.0466 0.0411 0.0264 0.0360 0.0150 0.0820 0.0095 0.0112 0.0039 0.0129
4.17  0.1833 0.0140 0.1384 0.0262 0.0977 0.0344 0.0122 0.0145 0.0037 0.0244
4.2   0.0777 0.0311 0.2363 0.0259 0.0481 0.0270 0.0164 0.0142 0.0105 0.0223
4.25  0.0597 0.0059 0.0184 0.0064 0.0212 0.0164 0.0073 0.0025 0.0024 0.0159
4.28  0.0362 0.0174 0.0359 0.0154 0.0241 0.0212 0.0012 0.0036 0.0010 0.0129
4.31  0.0127 0.0224 0.0131 0.0123 0.0121 0.0173 0.0064 0.0073 0.0032 0.0126
4.34      NA     NA 0.0086 0.0026     NA 0.0214 0.0109 0.0014 0.0009 0.0085
4.38  0.0485 0.0062 0.0443 0.0012 0.0158 0.0286 0.0046 0.0004 0.0008 0.0151
4.41  0.0069 0.0315 0.0235 0.0016 0.0317 0.0309 0.0035 0.0003     NA 0.0082
4.45  0.0150 0.0245 0.0258 0.0035 0.0278 0.0355 0.0224 0.0150 0.0307 0.0377
4.5   0.0144 0.0781 0.0276 0.0033 0.0402 0.0574 0.0080 0.0178 0.0256 0.0348
4.53  0.0045 0.0144 0.0580 0.0078 0.0612 0.0429 0.0154 0.0354 0.0662 0.0902
4.55  0.0042     NA 0.0123     NA     NA 0.0171 0.0056 0.0215 0.0381 0.0676
4.58  0.0052     NA 0.0026     NA     NA 0.0164 0.0037 0.0057 0.0062 0.0077
4.63  0.0033     NA 0.0049     NA     NA     NA 0.0064 0.0084 0.0035 0.0048
4.66      NA     NA     NA     NA     NA 0.0518 0.0089 0.0171 0.0033 0.0163
4.71      NA 0.0009     NA     NA     NA     NA 0.0200 0.0190 0.0153 0.0199
4.74  0.0008     NA     NA     NA 0.0013     NA 0.0054 0.0097 0.0058 0.0117
4.78      NA 0.0031     NA     NA 0.0030     NA     NA     NA     NA     NA
4.81  0.0046 0.0333 0.0260 0.0240 0.0466     NA     NA     NA     NA     NA
4.84  0.0091 0.0886 0.0751     NA 0.1139     NA     NA     NA     NA     NA
4.88  0.0535 0.0558 0.0719     NA 0.0523     NA     NA     NA     NA     NA
4.91  0.0160 0.0093 0.0292 0.1205 0.0381     NA     NA     NA     NA     NA
4.96  0.0084 0.0087     NA     NA 0.0134     NA     NA     NA     NA     NA
5     0.0143 0.0417 0.0181 0.0247 0.0412 0.0182 0.0264 0.0623 0.0552     NA
5.03  0.0689 0.0548 0.0611 0.0260 0.0539 0.0515 0.0394     NA 0.0462     NA
5.06  0.0447 0.1269 0.0227 0.0097 0.0487 0.0229 0.0139 0.0830 0.0558 0.0491
5.09  0.0332 0.0415 0.0396 0.0302 0.0085 0.0243 0.0426     NA 0.0248     NA
5.13  0.0578 0.0388 0.0107 0.0728 0.0422 0.0221 0.0212 0.0275 0.0234 0.0534
5.17  0.0561 0.0598 0.0625 0.0266 0.0633 0.0124 0.0238 0.0386 0.0457 0.0714
5.21  0.1303 0.0432 0.1523 0.0616 0.0984 0.0134 0.0065 0.0171 0.0083 0.0247
5.25  0.0663     NA     NA 0.0140 0.0578 0.0066 0.0068 0.0268 0.0019 0.0596
5.28  0.0924 0.1302 0.0979     NA 0.1082 0.0035     NA 0.0304 0.0119 0.0347
5.31  0.2030 0.2860     NA 0.2406 0.1258 0.0102 0.0657 0.0452 0.0642 0.1058
5.34      NA 0.0370 0.0719     NA 0.0513 0.0240 0.0367     NA 0.0135 0.0332
5.37  0.0310 0.0396 0.0788 0.0095 0.0481 0.0149 0.0130 0.0213 0.0163 0.0351
5.42  0.0348 0.0095 0.0362 0.0128 0.0152 0.0019 0.0136 0.0110 0.0029 0.0040
5.45  0.0154     NA 0.0063 0.0119 0.0077 0.0032 0.0065 0.0073 0.0010     NA
5.5   0.0092 0.0080 0.0035     NA 0.0023 0.0049 0.0074 0.0057     NA 0.0015
5.53  0.0109 0.0070 0.0053 0.0074 0.0078 0.0019 0.0067 0.0056 0.0011     NA
5.56      NA 0.0132 0.0034 0.0041     NA 0.0011 0.0100 0.0100 0.0009     NA
5.6   0.0074     NA     NA 0.0096 0.0023 0.0009 0.0041 0.0025     NA     NA
5.62  0.0164 0.0398 0.0262 0.0038 0.0294 0.0014 0.0028 0.0067 0.0093 0.0095
5.67  0.0478 0.0658 0.0113 0.0435 0.0128 0.0010 0.0016 0.0044 0.0012 0.0011
5.7   0.0215 0.1000 0.0454 0.0415 0.0536 0.0028 0.0066 0.0144 0.0207 0.0015
5.75  0.0104 0.0095 0.0138 0.0055 0.0081 0.0004 0.0015 0.0054 0.0014 0.0163
5.78  0.0041 0.0051 0.0066 0.0026 0.0030 0.0015 0.0031 0.0031 0.0010 0.0007
5.81  0.0082 0.0059 0.0068 0.0058 0.0039 0.0015 0.0026 0.0029 0.0006 0.0006
5.84  0.0064     NA 0.0032 0.0021 0.0029 0.0037 0.0035 0.0011 0.0027 0.0006
5.88  0.0193 0.0408 0.0201 0.0492 0.0619 0.0208 0.0198 0.0137 0.0052 0.0188
5.91  0.0282 0.0202 0.0282 0.0173 0.0236 0.0121 0.0078 0.0080 0.0055 0.0080
5.95  0.0285 0.0212 0.0214 0.0102 0.0136 0.0069 0.0041 0.0031 0.0027 0.0049
5.99  0.0272 0.0056 0.0121 0.0052 0.0049 0.0052 0.0034 0.0010 0.0005 0.0018
6.03      NA 0.0223 0.0042     NA 0.0047 0.0036 0.0054 0.0022 0.0020 0.0016
6.06  0.0097 0.0211 0.0046 0.0040 0.0051 0.0027 0.0038 0.0014 0.0010 0.0012
6.09  0.0985 0.0119 0.1014     NA 0.0219 0.0038 0.0008 0.0002 0.0005 0.0008
6.13  0.2549 0.0153 0.2381 0.0567 0.0573 0.0041 0.0035 0.0027 0.0009 0.0010
6.17  0.1674 0.0153 0.2005 0.0084 0.0773 0.0056 0.0106 0.0067 0.0077 0.0035
6.2   0.1635 0.0779 0.1070 0.1516 0.0599 0.0132 0.0051 0.0011 0.0032 0.0005
6.25  0.0727 0.0452 0.0258 0.1235 0.0404 0.0195 0.0027 0.0055 0.0085 0.0050
6.28  0.0349 0.0809 0.0319 0.0854 0.0399 0.0203 0.0037 0.0062 0.0140 0.0103
6.31  0.0511 0.0598 0.0180 0.0967 0.0164 0.0031 0.0049 0.0039 0.0068 0.0047
6.34  0.0323 0.0543 0.0058 0.0845 0.0046 0.0202 0.0056 0.0009 0.0013 0.0008
6.38  0.0557 0.0256 0.0056 0.0469 0.0058 0.0123 0.0042 0.0010 0.0026 0.0006
6.41  0.0257 0.0180 0.0057 0.0326 0.0031 0.0205 0.0032 0.0005 0.0043 0.0004
6.46  0.0886 0.0090 0.0807 0.0144 0.0286 0.0245 0.0082 0.0017 0.0010 0.0012
6.5   0.1437 0.0205 0.1900 0.0582 0.0290 0.0075 0.0233 0.0079 0.0051 0.0036
6.53  0.0900 0.0377 0.1040 0.0403 0.0233 0.0097 0.0235 0.0114 0.0107 0.0060
6.56  0.0333 0.0246 0.0268 0.0360 0.0374 0.0149 0.0069 0.0048 0.0008 0.0032
6.59  0.1383 0.0204 0.0484 0.0656 0.0483 0.0191 0.0232 0.0068 0.0121 0.0077
6.62  0.0783 0.0695 0.0748 0.0814 0.0512 0.0220 0.0311 0.0112 0.0056 0.0065
6.66  0.0438 0.0558 0.0291 0.0390 0.0560 0.0214 0.0649 0.0286 0.0228 0.0123
6.7   0.3047 0.1285 0.0813 0.2785 0.0900 0.0148 0.0822 0.0408 0.0250 0.0308
6.75  0.6616 0.2447 1.0377 0.1545 0.5387 0.0367 0.1250 0.0486 0.0320 0.0151
6.78  0.5287 0.2274 0.4248 0.1283 0.3147 0.0526 0.0669 0.0276 0.0218 0.0243
6.81  0.3787 0.0602 0.4474 0.1509 0.1670 0.0715 0.0373 0.0201 0.0089 0.0133
6.84  0.2778 0.0863 0.3115 0.1065 0.3020 0.0521 0.0168 0.0169 0.0084 0.0040
6.88  0.2577 0.1201 0.1372 0.1361 0.0435 0.0340 0.0328 0.0226 0.0148 0.0030
6.92  0.4057 0.0929 0.1824 0.1256 0.0558 0.0464 0.0241 0.0086 0.0039 0.0106
6.96  0.2059 0.0861 0.3132 0.0882 0.1370 0.1021 0.0102 0.0262 0.0053 0.0511
6.99  0.1363 0.0208 0.1191 0.1008 0.0374 0.0098 0.0064 0.0080 0.0045 0.0022
7.03  0.0892 0.0518 0.0405 0.0569 0.0473 0.0336 0.0091 0.0084 0.0071 0.0079
7.06  0.0624 0.0235 0.0438 0.0440 0.0175 0.0240 0.0007 0.0037 0.0003 0.0209
7.09  0.1084 0.0153 0.1441 0.0435 0.0279 0.0033 0.0004 0.0065 0.0012 0.0010
7.12  0.3322 0.1909 0.0495 0.2886 0.0570 0.0280 0.0076 0.0074 0.0010 0.0016
7.16  0.1760 0.1574 0.0508 0.1130 0.0238 0.0366 0.0100 0.0108 0.0083 0.0055
7.21  0.1232 0.1030 0.0263 0.1957 0.0135 0.0145 0.0081 0.0020 0.0006 0.0041
7.25  0.2354 0.1827 0.0170 0.1862 0.0124 0.0147 0.0043 0.0022 0.0007 0.0243
7.28  0.0658 0.1052 0.0085 0.2095 0.0105 0.0104 0.0098 0.0010     NA 0.0019
7.31  0.0788 0.0275 0.0194 0.0536 0.0183 0.0092 0.0066 0.0036 0.0011 0.0230
7.34  0.0534 0.0409 0.0069 0.0660 0.0482 0.0080 0.0037 0.0042 0.0015 0.0377
7.37  0.1350 0.0606 0.0563 0.1633 0.0302 0.0389 0.0110 0.0139 0.0070 0.0430
7.42  0.1110 0.1031 0.0083 0.2263 0.0690 0.0251 0.0046 0.0106 0.0104 0.0255
7.45  0.0203 0.0622 0.0149 0.2037 0.0485 0.0267 0.0187 0.0091 0.0281 0.0046
7.5   0.0439 0.0613 0.0262     NA 0.0151 0.0112 0.0083 0.0029 0.0025 0.0174
7.53  0.0762 0.0621 0.0056 0.0912 0.0156 0.0200 0.0006 0.0039 0.0017 0.0013
7.56  0.1806     NA 0.0046 0.2818 0.0499 0.0121 0.0071 0.0048 0.0096 0.0025
7.59  0.0708     NA 0.0037 0.0583 0.0034 0.0092 0.0059 0.0018 0.0053 0.0015
7.63      NA 0.0129 0.0068 0.0294 0.0023 0.0092 0.0026 0.0014 0.0024 0.0057
7.67  0.0324 0.0198 0.0057 0.0402 0.0053 0.0068 0.0011 0.0011 0.0013     NA
7.71  0.0264 0.0124 0.0164 0.0170 0.0060 0.0083 0.0020 0.0014 0.0006 0.0008
7.74  0.0100 0.0136 0.0036 0.0237 0.0007 0.0074 0.0017 0.0004 0.0003 0.0006
7.78  0.1655 0.0051 0.1441 0.0040     NA 0.0007 0.0004 0.0005     NA 0.0002
7.81  0.0062 0.0077     NA     NA 0.0342 0.0017     NA 0.0034 0.0001 0.0023
7.84  0.0275 0.0012 0.0104 0.0182 0.0006 0.0010     NA 0.0003     NA 0.0016
7.87  0.0119 0.0015 0.0172 0.0172 0.0028 0.0153     NA 0.0006 0.0006 0.0055
7.91  0.0217     NA 0.0100 0.0050 0.0047 0.0014 0.0003 0.0012 0.0003 0.0032
7.96  0.0146 0.0242 0.0132 0.0414 0.0038 0.0236 0.0026 0.0014 0.0030 0.0016
7.99  0.0146 0.0088 0.0050 0.0611     NA 0.0146 0.0029 0.0030 0.0038 0.0051
8.02  0.0145 0.0313 0.0028 0.1667 0.0574 0.0128 0.0065 0.0074 0.0068 0.0069
8.05  0.0098     NA 0.0060 0.0109 0.0018 0.0132 0.0014 0.0005 0.0041 0.0037
8.08  0.0035 0.0083 0.0032 0.0104 0.0029 0.0047     NA     NA 0.0004 0.0003
8.11  0.0210 0.0140 0.0011 0.0031 0.0018 0.0041 0.0074 0.0010 0.0087 0.0005
8.14  0.0045 0.0024     NA 0.0112     NA 0.0089     NA     NA     NA     NA
8.17      NA 0.0021     NA     NA     NA 0.0010 0.0009     NA 0.0001 0.0003
8.2       NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
8.24      NA     NA     NA     NA 0.0004 0.0001     NA     NA     NA     NA
8.26      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.31  0.0012     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.36      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.4       NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.45      NA     NA     NA     NA     NA 0.0011     NA     NA     NA 0.0002
8.49      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.69      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.73      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.75      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.82      NA     NA     NA     NA     NA 0.0002     NA     NA     NA     NA
8.86      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.11      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.14  0.0003 0.0063 0.0041     NA 0.0042     NA     NA     NA 0.0001     NA
9.17      NA 0.0021     NA     NA 0.0022 0.0002     NA 0.0013 0.0024 0.0010
9.2       NA 0.0014 0.0011     NA 0.0018     NA     NA     NA 0.0007 0.0009
9.23      NA     NA     NA     NA     NA     NA     NA     NA 0.0003     NA
9.26  0.0003 0.0015 0.0016     NA 0.0010     NA     NA 0.0003 0.0004 0.0006
9.29      NA     NA     NA 0.0043     NA     NA 0.0052     NA 0.0001     NA
9.32  0.0021 0.0005 0.0012     NA 0.0005     NA 0.0007     NA     NA     NA
9.35      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.38  0.0004 0.0006     NA     NA 0.0007     NA     NA     NA 0.0002     NA
9.41      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
9.44  0.0014     NA     NA     NA     NA     NA 0.0003     NA 0.0001     NA
9.48  0.0030     NA 0.0020     NA     NA     NA     NA     NA     NA     NA
9.51  0.0155     NA 0.0206     NA     NA     NA     NA     NA     NA     NA
9.53      NA 0.0006     NA 0.0036 0.0134 0.0002     NA 0.0006 0.0001     NA
9.55      NA     NA     NA     NA     NA 0.0002     NA     NA 0.0003     NA
9.59      NA     NA     NA 0.0007     NA     NA     NA     NA     NA     NA
9.63  0.0013     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.66  0.0032     NA 0.0285     NA     NA     NA 0.0004     NA     NA     NA
9.69  0.0170 0.0453 0.0259     NA 0.0292 0.0002     NA 0.0078 0.0124     NA
9.72      NA 0.0052 0.0035 0.0083 0.0142 0.0022 0.0029 0.0010 0.0043 0.0095
9.75      NA     NA 0.0012     NA 0.0018     NA     NA     NA 0.0006     NA
9.78  0.0005     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.8       NA     NA 0.0019     NA 0.0012     NA     NA     NA     NA     NA
9.83      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.88      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.9       NA 0.0013 0.0034     NA 0.0018 0.0001     NA     NA 0.0003     NA
9.92      NA     NA     NA     NA     NA     NA     NA     NA 0.0002     NA
9.98      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10        NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.04     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.06     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.11     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.15     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.27     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.58     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
11.96     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.03     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.13     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.17     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.81     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
13.51     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
13.55     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
       DC_sm  FP_sm  IT_sm  JB_sm  PU_sm  SA_sm SJC_sm  SJ_sm  UR_sm  VR_sm
0     0.0492 0.0243 0.0132 0.0054 0.0169 0.0722 0.0109 0.0417 0.0063 0.0025
0.1   0.0004     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.12      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.16      NA     NA     NA     NA     NA     NA 0.0002 0.0015 0.0001     NA
0.18      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.23      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
0.26  0.0008     NA     NA     NA     NA 0.0008     NA     NA 0.0003     NA
0.3   0.0041 0.0002     NA 0.0002     NA 0.0015     NA     NA 0.0003     NA
0.33  0.0012     NA     NA 0.0002     NA 0.0009     NA 0.0022 0.0002     NA
0.35  0.0015     NA     NA 0.0002     NA 0.0024     NA     NA 0.0004     NA
0.39  0.0034     NA     NA     NA     NA 0.0027     NA 0.0018 0.0004 0.0001
0.43  0.0051     NA     NA 0.0005     NA 0.0029 0.0002 0.0020 0.0003 0.0002
0.46  0.0078     NA     NA 0.0012 0.0004 0.0017 0.0010 0.0013 0.0006     NA
0.49  0.0040     NA     NA 0.0010 0.0018 0.0046 0.0046     NA     NA 0.0006
0.52  0.0126 0.0004 0.0049 0.0038 0.0040     NA 0.0009     NA 0.0016 0.0006
0.55  0.0085     NA 0.0848 0.0064 0.0679 0.0126 0.0108 0.0100 0.0374 0.0003
0.59  0.0051     NA     NA 0.0165 0.0107 0.0053 0.0016 0.0043 0.0048 0.0013
0.61  0.0188 0.0021 0.6723     NA 0.9347 0.0669 0.0834 0.0218 0.1933 0.0035
0.65  0.0443     NA 0.3373 0.0263 0.3604 0.0348 0.0524 0.0138 0.1143 0.0018
0.69  0.0289 0.0035 0.1474 0.0092 0.4268 0.0320 0.0605 0.0358 0.0131 0.0030
0.72  0.0813 0.0675 0.0056 0.0114 0.0226 0.0568 0.0215 0.0116 0.0074 0.0091
0.75  0.0921 0.0739 0.0024 0.0176 0.0141 0.0591 0.0278 0.0250 0.0138 0.0095
0.78  0.0983 0.0769 0.0200 0.0427 0.0489 0.0793 0.0835 0.0464 0.0123 0.0262
0.82  0.1522 0.2797 0.2336 0.0488 0.2035 0.1678 0.2020 0.1170 0.1155 0.0336
0.85  0.1710 0.1918 0.0632 0.0359 0.1214 0.1936 0.1102 0.1306 0.0306 0.0132
0.88  0.3729 0.1604 0.1336 0.0616 0.1595 0.2973 0.1022 0.2293 0.0554 0.0288
0.91  0.2317     NA 0.0737 0.0315 0.0545 0.0366 0.3058 0.1707 0.0209 0.0176
0.95  0.1675 0.2879 0.2352 0.0885 0.4813 0.2057 0.2418 0.2180 0.0701 0.0237
0.98  0.1848 0.0356 0.3855 0.0545 0.3090 0.1552 0.2123 0.0565 0.2125 0.0156
1.01  0.2067 0.1234 0.4888 0.0377 0.5030 0.1189 0.3744 0.2719 0.1099 0.0129
1.04  0.2190 0.0770 0.2046 0.0376 0.2295 0.0979 0.3828 0.2064 0.1086 0.0093
1.07  0.1064 0.0549 0.3866 0.0226 0.5564 0.0840 0.1699 0.1023 0.0672 0.0084
1.1   0.1287 0.0721 0.0623 0.0239 0.1578 0.1224 0.1688 0.0942 0.0635 0.0075
1.13  0.3339 0.1075 0.2474 0.0465 0.1217 0.2038 0.2741 0.6407 0.1425 0.0090
1.17  0.1436 0.1010 1.3917 0.1047 1.3081 0.2406 0.1956 0.2464 0.3881 0.0295
1.2   0.0628 0.3125 0.0839 0.0533 0.4437 0.0551 0.1858 0.1065     NA 0.0146
1.23  0.3170 0.3944 0.5007 0.1119 1.1982 0.2523 0.1668 0.2615 0.1119 0.0478
1.26  0.8149 0.2529 0.3707 0.0808 0.5296 0.4953 0.1066 0.5094 0.1123 0.0176
1.3   0.1674 0.2670 0.0981 0.0741 0.3261 0.1423 0.2060 0.2068 0.0356 0.0193
1.32  0.2476 0.2818 0.3192 0.0268 0.7991 0.0719 0.0541     NA 0.1227     NA
1.35  0.1550 0.0601 0.0918 0.0332 0.2288 0.1076 0.0917 0.1075 0.0381 0.0178
1.39  0.1588 0.1203 0.0256 0.0180 0.1779 0.1665 0.1216 0.3712 0.0095 0.0708
1.42  0.1699 0.0923 0.0482 0.0238 0.1252 0.0682 0.1743     NA 0.0519 0.0120
1.45  0.0399 0.1227 0.1082 0.0320 0.1520 0.1802 0.1001 0.1643 0.0807 0.0133
1.48  0.1631 0.2481 0.2681 0.0298 0.3653 0.0720 0.0963 0.0898 0.0739 0.0120
1.51  0.2592 0.1014     NA 0.0408 0.1274 0.0767 0.1551 0.2781 0.0190 0.0160
1.54  0.1179 0.4861 0.1721 0.0288 0.4108 0.0371 0.0997 0.1982 0.0428     NA
1.57  0.1928 1.2194 0.1305 0.0474 0.2983 0.2072 0.1144 0.2329 0.0585 0.0270
1.6   0.1631 0.6316 0.1352 0.0145 0.1528 0.1655 0.0518 0.2409 0.1001 0.0253
1.64  0.2010 0.1587 0.5916 0.0276 0.5462 0.1832 0.0913 0.1596 0.1539 0.0360
1.67  0.1114 0.1087 0.2138 0.0285 0.2878 0.1186 0.0793 0.4037 0.0894 0.0231
1.7   0.0920 0.2872 0.0454 0.0387 0.2400 0.0738 0.2584     NA 0.0538 0.1258
1.73  0.0875 0.1912 0.2835 0.0118 0.3812 0.0732 0.0935 0.1105 0.1197 0.1406
1.76  0.0566 0.5713 0.0118 0.0308 0.0508 0.1026 0.0526 0.0894 0.0183 0.0165
1.79  0.0394     NA 0.0426 0.0202 0.2207 0.0301 0.0850 0.0744 0.0629 0.0115
1.82  0.0496 0.0334 0.2080 0.0362 0.4361 0.0513 0.0573     NA 0.0819 0.0068
1.85  0.0823 0.0658 0.3876 0.0196 0.6713 0.1148 0.1106 0.1768 0.1151 0.0054
1.88  0.1057 0.0679 0.5668 0.0260 0.8334 0.1153 0.0693 0.1657 0.1960 0.0094
1.92  0.0969     NA 0.1380 0.0478 0.3534 0.1042 0.0709 0.1810 0.1202 0.0074
1.95  0.0740 0.3114 0.0831 0.0164 0.1216 0.0696 0.1203 0.0849 0.1083 0.0059
1.98  0.0361     NA 0.1604 0.0174 0.4695 0.0775 0.1431 0.0869 0.1038 0.0041
2.01  0.1136 0.3100 0.2708 0.0499 0.4059 0.1726 0.1713 0.1001 0.1604 0.0250
2.04  0.0933 0.5109 0.1242 0.0238 0.2192 0.0437 0.0893 0.4410 0.1479 0.0086
2.07  0.0493 0.6604 0.0367     NA 0.0263 0.1329 0.0224     NA 0.0682 0.0095
2.11  0.0931 0.1938 0.1485 0.0255 0.2312 0.1560 0.1015 0.1205 0.0973 0.0053
2.12  0.0476 0.1092 0.2212 0.0057 0.2461 0.0330 0.0323 0.0991 0.0987 0.0056
2.16  0.0235     NA 0.0593 0.0120 0.0972 0.0552 0.0603 0.1032 0.0609 0.0061
2.19  0.0356 0.0513 0.0403 0.0054 0.0603     NA 0.0206 0.0565 0.0268 0.0026
2.22  0.0185 0.0597 0.0060 0.0046 0.0069     NA 0.0487 0.0696 0.0087 0.0056
2.25  0.0992 0.3861 0.0297 0.0136 0.0539 0.0882 0.0196 0.1936 0.0239 0.0118
2.28  0.0396     NA 0.0061 0.0102 0.0271 0.0779 0.0253 0.0560 0.0491 0.0084
2.31  0.0136 0.0267     NA     NA 0.0049 0.0603     NA 0.0618 0.0115 0.0057
2.34  0.0377 0.0242     NA 0.0046 0.0021 0.0329 0.0094 0.0285     NA 0.0048
2.37  0.0559     NA 0.3356 0.0122 0.4569 0.0610 0.0442 0.0634 0.1177 0.0035
2.4   0.0324 0.0376     NA 0.0037     NA 0.0345 0.0286 0.0188     NA 0.0061
2.43  0.0278 0.0272 0.0168 0.0045 0.0225 0.0413 0.0149     NA 0.0191 0.0023
2.46  0.0189 0.0275 0.0030 0.0016 0.0101 0.0391 0.0640 0.0453 0.0210 0.0046
2.49  0.0347 0.0234     NA 0.0023 0.0050 0.0340 0.0442 0.0459 0.0380 0.0059
2.52  0.0344 0.0417 0.0037 0.0027 0.0037 0.0422 0.0396 0.0375 0.0364 0.0053
2.55  0.0492 0.0203 0.1781 0.0112 0.5294 0.0575 0.0590 0.0731 0.0142 0.0081
2.58  0.0221 0.0549 0.0115 0.0013     NA 0.0282 0.0087 0.0390 0.0198 0.0136
2.61  0.0142 0.0530 0.0046 0.0007     NA 0.0147 0.0073 0.0628 0.0261 0.0069
2.64  0.0263 0.1569 0.0015 0.0028 0.0034 0.0182 0.0061 0.0662 0.0239 0.0049
2.67  0.0212     NA 0.0013 0.0029 0.0083 0.0210 0.0029 0.0500 0.0031 0.0029
2.7   0.0177     NA     NA 0.0093 0.0010 0.0123 0.0017     NA 0.0047 0.0030
2.73  0.0200 0.0199     NA 0.0135 0.0022 0.0070 0.0006 0.0271 0.0043 0.0046
2.76  0.0156 0.0292 0.0028 0.0066 0.0115 0.0320 0.0009 0.0541 0.0042 0.0045
2.79  0.0339 0.0052 0.0027 0.0041 0.0038 0.0231 0.0078     NA 0.0052 0.0035
2.82  0.0077 0.0042 0.0077 0.0085 0.0206 0.0330 0.0116 0.0083 0.0035 0.0042
2.85  0.0189 0.0032 0.0088 0.0076 0.0160 0.0159 0.0068 0.0066 0.0057 0.0041
2.88  0.0158 0.0071     NA 0.0022 0.0045 0.0187 0.0016 0.0137 0.0013 0.0291
2.91  0.0326 0.0064 0.0008 0.0029 0.0014 0.0217 0.0022 0.0050 0.0016     NA
2.94  0.0209 0.0058     NA 0.0057 0.0008 0.0170     NA 0.0050 0.0006 0.0045
2.97  0.0104 0.0065     NA 0.0017 0.0004 0.0184 0.0002 0.0169 0.0010 0.0013
3     0.0131 0.0036 0.0208 0.0135 0.0336 0.0241 0.0048 0.0213 0.0088 0.0159
3.03  0.0137 0.0028 0.0024 0.0111 0.0064 0.0154 0.0016 0.0104 0.0067 0.0017
3.06  0.0505 0.0014     NA 0.0102 0.0064 0.0155 0.0020 0.0104 0.0004 0.0105
3.09  0.0486 0.0030     NA 0.0058 0.0052 0.0787 0.0007 0.0117 0.0037     NA
3.12  0.0456 0.0112 0.0079 0.0098 0.0081 0.0426 0.0025 0.0321 0.0049 0.0059
3.15  0.0680 0.0350 0.0051 0.0034 0.0068 0.0525 0.0029 0.0237 0.0052 0.0125
3.18  0.0376 0.0206 0.0099 0.0120 0.0145 0.0862 0.0017 0.0736 0.0056 0.0037
3.21  0.0659 0.0140 0.0059 0.0115 0.0026 0.0496 0.0057 0.0490 0.0069 0.0131
3.24  0.0770 0.0057 0.0089 0.0109 0.0213 0.0885 0.0048 0.0176 0.0018 0.0414
3.27  0.0844     NA 0.0204 0.0130 0.0254 0.0739 0.0029 0.1374 0.0023 0.0074
3.29  0.0402     NA 0.1083     NA 0.1155     NA 0.0362 0.1680 0.0023 0.0103
3.33      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.36      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.39      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.42      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.45      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.48      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
3.51  0.2116 0.0338 0.0131 0.0083 0.0211 0.1909 0.0018 0.0673 0.0082 0.0104
3.54  0.2153 0.0170 0.0022 0.0077 0.0033 0.0968 0.0010 0.0265 0.0036 0.0121
3.57  0.3803 0.0457 0.0711 0.0100 0.0322 0.2534 0.0092 0.0955 0.0138 0.0140
3.6   0.3470 0.0691 0.0625 0.0257 0.0829 0.2724 0.0101 0.0990 0.0291 0.0213
3.63  0.3452 0.0445 0.0776 0.0231 0.0751 0.1802 0.0095 0.1782 0.0265 0.0175
3.66  0.3371 0.0472 0.0335 0.0216 0.0463 0.2753 0.0035 0.0925 0.0337 0.0118
3.69  0.6657 0.0634 0.0453 0.0338 0.0355 0.2741 0.0051 0.1345 0.0192 0.0112
3.72  0.5756 0.0233 0.0531 0.0331 0.0568 0.2236 0.0136 0.1065 0.0376 0.0141
3.75  0.7107 0.0886 0.0467 0.0400 0.0515 0.3286 0.0058 0.1515 0.0436 0.0305
3.78  0.9049 0.1211 0.0857 0.0445 0.1394 0.4190 0.0168 0.2186 0.0886 0.0374
3.81  1.0292     NA 0.0970 0.0616 0.0942 0.6136 0.0552 0.1844 0.0849 0.0248
3.84  0.5774 0.1386 0.0638 0.0592 0.2296 0.6943 0.0913 0.2761 0.0716 0.0370
3.87  0.4764 0.0731 0.0099 0.0230 0.0570 0.3492 0.0072 0.2162 0.0386 0.0294
3.9   0.0922 0.0371 0.0058 0.0030 0.0167 0.1098 0.0107 0.1067 0.0133 0.0036
3.93  0.0654     NA 0.0020 0.0035 0.0077 0.0514 0.0034 0.0442     NA 0.0021
3.96  0.1860 0.0102 0.0094 0.0149 0.0106 0.1066 0.0008 0.0680 0.0046 0.0047
3.99  0.0442 0.0150 0.0088 0.0021 0.0105 0.0530 0.0014 0.0987 0.0063 0.0221
4.02  0.0447 0.0150 0.0122 0.0105 0.0070 0.0599 0.0013 0.0595 0.0059 0.0080
4.05  0.0808 0.0375 0.1898 0.0064 0.1411 0.0903 0.0073 0.0415 0.0550 0.0066
4.08  0.1219 0.0071 0.1682 0.0137 0.1400 0.1130 0.0080 0.0484 0.0490 0.0138
4.13  0.1012 0.0204 0.0024 0.0171 0.0054 0.1734     NA 0.0367 0.0040 0.0074
4.17  0.0895 0.0159 0.0069 0.0036 0.0154 0.0659 0.0098 0.0637 0.0187 0.0119
4.2   0.1359     NA 0.0031 0.0039 0.0141 0.0593 0.0025     NA 0.0190 0.0046
4.25  0.1109 0.0090 0.0078 0.0057 0.0318 0.0537 0.0017 0.0411 0.0020 0.0014
4.28  0.0634 0.0067 0.0060 0.0064 0.0190 0.0294 0.0027 0.0349 0.0013 0.0032
4.31  0.0335 0.0059 0.0413 0.0048 0.1257 0.0304 0.0132 0.0279 0.0035 0.0048
4.34  0.0399 0.0058 0.0015 0.0051 0.0015 0.0280 0.0006 0.0274 0.0013 0.0069
4.38  0.0892 0.0164 0.0026 0.0070 0.0026 0.0367 0.0034 0.0295 0.0024 0.0047
4.41  0.0498 0.0090     NA 0.0070 0.0030 0.0407 0.0019 0.0400 0.0010 0.0036
4.45  0.0773 0.0108 0.0901 0.0060 0.0633 0.0315 0.0043 0.0550 0.0268 0.0073
4.5   0.1032 0.0394 0.0821 0.0189 0.0650 0.0470 0.0025 0.0120 0.0291 0.0036
4.53  0.0573 0.0199 0.2603 0.0179 0.2160 0.0309 0.0179 0.0158 0.0642 0.0071
4.55  0.0455 0.0131 0.1357 0.0027 0.1580 0.0326 0.0141 0.0347 0.0445 0.0035
4.58  0.0613 0.0124 0.0083 0.0055 0.0136 0.0116 0.0025 0.0285 0.0055 0.0035
4.63  0.0428 0.0498 0.0014 0.0058 0.0102 0.0286 0.0039 0.0184 0.0058 0.0057
4.66  0.0463 0.0289 0.0040 0.0145 0.0151 0.0393 0.0113 0.0906 0.0118 0.0044
4.71  0.1105     NA 0.0089 0.0095 0.0161 0.0457 0.0061 0.0221 0.0062 0.0043
4.74  0.0690     NA     NA 0.0054 0.0014 0.0181 0.0056     NA 0.0018 0.0048
4.78      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.81      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.84      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.88      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.91      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
4.96      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
5         NA     NA 0.1532 0.0209 0.3517 0.0383 0.0297 0.0115     NA     NA
5.03  0.2064     NA 0.1420 0.0137 0.1137 0.0779     NA 0.0089 0.0445     NA
5.06  0.1175     NA 0.2254 0.0102 0.0811 0.0358 0.0185 0.0218 0.0605 0.0780
5.09  0.0507 0.2429     NA     NA 0.0849 0.0459 0.0310 0.0558     NA     NA
5.13  0.0805 0.1548 0.0400 0.0105 0.0421 0.0777 0.0069 0.0590 0.0427     NA
5.17  0.1134     NA 0.1481 0.0168 0.3328 0.0364 0.0518 0.0281 0.0502 0.0370
5.21  0.1110 0.0268 0.0099 0.0075 0.0406 0.0169 0.0220 0.0437 0.0254     NA
5.25  0.0745 0.0327     NA 0.0080 0.0183 0.0147 0.0268 0.0142 0.0098     NA
5.28  0.0735 0.0194 0.0358 0.0066 0.0331 0.0109 0.0195 0.0132 0.0124 0.0200
5.31  0.0727 0.0459 0.1899 0.0072 0.1747 0.0497 0.0209 0.0222 0.0576 0.0366
5.34  0.0433 0.0430 0.0222 0.0124 0.0443 0.0531 0.0109 0.0328 0.0067     NA
5.37  0.0251 0.0712 0.0299 0.0141 0.0350 0.0346 0.0037 0.0135 0.0162 0.0027
5.42  0.0495 0.0262 0.0024 0.0052 0.0120 0.0027 0.0042 0.0123 0.0021 0.0020
5.45  0.0476 0.0267 0.0016 0.0013 0.0049 0.0027 0.0034 0.0206 0.0048 0.0082
5.5   0.0111 0.0106     NA 0.0010 0.0021 0.0133 0.0024     NA 0.0016 0.0049
5.53  0.0053 0.0091     NA 0.0002 0.0014 0.0058 0.0039 0.0111 0.0025 0.0016
5.56  0.0156 0.0089     NA 0.0011 0.0004 0.0046 0.0021 0.0210 0.0009 0.0025
5.6   0.0042     NA 0.0222 0.0016 0.0166 0.0034 0.0030 0.0095 0.0002 0.0060
5.62  0.0134 0.0135 0.0101 0.0013 0.0094 0.0070 0.0020 0.0118 0.0082 0.0047
5.67  0.0093 0.0126 0.0024 0.0021 0.0027 0.0038 0.0005 0.0187 0.0011 0.0147
5.7   0.0067 0.0122 0.0507 0.0041 0.0398 0.0088 0.0051 0.0243 0.0147 0.0014
5.75  0.0093 0.0062 0.0034 0.0033 0.0040 0.0040 0.0015     NA 0.0014 0.0049
5.78  0.0102     NA     NA 0.0102 0.0022 0.0053 0.0006 0.0047 0.0004 0.0025
5.81  0.0091 0.0047     NA 0.0023 0.0008 0.0022 0.0004     NA 0.0007 0.0016
5.84  0.0158     NA 0.0358 0.0004 0.1022 0.0040 0.0109 0.0041 0.0004 0.0008
5.88  0.0844 0.0083 0.0669 0.0063 0.1788 0.0094 0.0243 0.0154 0.0042 0.0040
5.91  0.0810 0.0123 0.0327 0.0347 0.0862 0.0097 0.0409 0.0141 0.0023 0.0085
5.95  0.0315 0.0078 0.0042 0.0178 0.0209 0.0076 0.0020 0.0046 0.0030 0.0069
5.99  0.0255 0.0069     NA 0.0064 0.0054 0.0040 0.0015 0.0020 0.0003 0.0022
6.03  0.0208 0.0063 0.0023 0.0040 0.0023 0.0028 0.0015 0.0026 0.0014 0.0041
6.06  0.0148 0.0030 0.0009 0.0023     NA 0.0019 0.0004 0.0088 0.0012 0.0062
6.09  0.0155 0.0060     NA 0.0084 0.0021 0.0033     NA 0.0079 0.0006 0.0061
6.13  0.0166 0.0028 0.0028 0.0038 0.0055 0.0114 0.0048 0.0251 0.0038 0.0068
6.17  0.0363 0.0157 0.0075 0.0044 0.0072 0.0097 0.0067 0.0269 0.0144 0.0060
6.2   0.0738 0.0163     NA 0.0150 0.0085 0.0279 0.0037 0.0206 0.0042 0.0187
6.25  0.0604 0.0131 0.0146 0.0200 0.0182 0.0519 0.0043 0.0086 0.0059 0.0336
6.28  0.0429 0.0147 0.0444 0.0061 0.0378 0.0619 0.0080 0.0046 0.0096 0.0210
6.31  0.0670 0.0529 0.0027 0.0031 0.0141 0.0175 0.0027 0.0073 0.0065 0.0137
6.34  0.0632     NA 0.0074 0.0068 0.0032 0.0302 0.0003 0.0049 0.0009 0.0058
6.38  0.0662 0.0117 0.0018 0.0032 0.0010 0.0299 0.0006 0.0036 0.0008 0.0066
6.41  0.1137 0.0917 0.0015 0.0090 0.0003 0.0241 0.0002 0.0034 0.0025 0.0127
6.46  0.0450 0.0876 0.0035 0.0103 0.0036 0.0522 0.0020 0.0063 0.0034 0.0053
6.5   0.1005 0.0078 0.0140 0.0103 0.0081 0.0251 0.0020 0.0117 0.0085 0.0066
6.53  0.0786 0.0261 0.0052 0.0040 0.0100 0.0328 0.0043     NA 0.0067 0.0041
6.56  0.0335 0.0065 0.0020 0.0028 0.0065 0.0358 0.0034 0.0142 0.0018 0.0106
6.59  0.0351 0.0147     NA 0.0039 0.0027 0.0729 0.0010 0.0115 0.0025 0.0032
6.62  0.1393 0.0294 0.0061 0.0099 0.0148 0.0619 0.0033 0.0243 0.0050 0.0045
6.66  0.0960 0.0095 0.0084 0.0136 0.0281 0.1040 0.0097 0.0251 0.0072 0.0049
6.7   0.1762 0.0217 0.0112 0.0119 0.0396 0.0689 0.0148 0.0334 0.0314 0.0141
6.75  0.1867 0.2071 0.0279 0.0242 0.1011 0.2595 0.0262 0.0706 0.0507 0.0147
6.78  0.3084     NA 0.0340 0.0162 0.0425 0.1007 0.0078 0.0420 0.0503 0.0085
6.81  0.1306 0.0230 0.0137 0.0181 0.0315 0.1307 0.0087 0.0672 0.0294 0.0305
6.84  0.1545 0.0209 0.0042 0.0073 0.0308 0.0714 0.0095 0.0391 0.0265 0.0065
6.88  0.2654 0.0166 0.0087 0.0161 0.0591 0.1131 0.0185 0.0184 0.0110 0.0123
6.92  0.2988 0.0107 0.0064 0.0259 0.0198 0.1281 0.0031 0.0562 0.0080 0.0204
6.96  0.2041 0.0176 0.0123 0.0062 0.0384 0.1065 0.0123 0.0254 0.0294 0.0093
6.99  0.1325 0.0040     NA 0.0130 0.0363 0.0242 0.0125 0.0664 0.0085 0.0206
7.03  0.1146 0.0164 0.0049 0.0234 0.0177 0.0433 0.0143 0.0148 0.0082 0.0080
7.06  0.0368 0.0091 0.0014 0.0032 0.0033 0.0503 0.0003 0.0038 0.0048 0.0084
7.09  0.0343 0.0019 0.0041 0.0038 0.0058 0.0115 0.0008 0.0056 0.0015 0.0088
7.12  0.1116 0.0063 0.0083 0.0160 0.0137 0.0860 0.0015 0.0077 0.0107 0.0558
7.16  0.0985 0.0119 0.0165 0.0107 0.0172 0.0377 0.0052 0.0275 0.0057 0.0222
7.21  0.0555 0.0129 0.0061 0.0083 0.0045 0.0250 0.0012 0.0123 0.0040 0.0197
7.25  0.0523 0.0113 0.0028 0.0086 0.0014 0.0189 0.0022 0.0176 0.0011 0.0359
7.28  0.0536     NA 0.0029 0.0105 0.0007 0.0126 0.0003 0.0071 0.0007 0.0312
7.31  0.1036 0.0466 0.0035 0.0161 0.0042 0.0492 0.0016 0.0013 0.0004 0.0045
7.34  0.0467     NA 0.0023 0.0250 0.0044 0.0253 0.0014 0.0037 0.0014 0.0105
7.37  0.1547 0.0277 0.0071 0.0722 0.0509 0.0540 0.0128 0.0046 0.0008 0.0145
7.42  0.1321 0.0336 0.0024 0.0270 0.0281 0.0827 0.0075 0.0166 0.0044 0.0175
7.45  0.3575 0.1077 0.0040 0.0632 0.0496 0.1062 0.0214 0.0029 0.0011 0.0033
7.5   0.0167 0.0368     NA 0.0291 0.0004 0.0220 0.0003 0.0032 0.0009 0.0058
7.53  0.0196     NA 0.0013 0.0246 0.0060 0.0398 0.0009 0.0107 0.0021 0.0293
7.56  0.1590 0.0502 0.0016 0.0264 0.0233 0.0983 0.0061 0.0076 0.0024 0.0368
7.59  0.0507 0.0196     NA 0.0128 0.0243 0.0437 0.0110 0.0063 0.0010 0.0141
7.63  0.0274 0.0051     NA 0.0078 0.0019 0.0366 0.0003 0.0014 0.0003 0.0066
7.67  0.0328 0.0108     NA 0.0039 0.0014 0.0084 0.0003 0.0005 0.0002 0.0021
7.71  0.0223 0.0029 0.0009 0.0029 0.0081 0.0175 0.0023 0.0021 0.0011 0.0024
7.74  0.0232 0.0055     NA 0.0020     NA 0.0114 0.0004 0.0014 0.0006 0.0014
7.78  0.0137     NA 0.0009 0.0005     NA 0.0067     NA 0.0006 0.0001 0.0013
7.81  0.0071 0.0025     NA 0.0011 0.0012 0.0052     NA     NA 0.0079 0.0010
7.84  0.0121 0.0040     NA 0.0004     NA 0.0237 0.0009 0.0062     NA 0.0007
7.87  0.0190 0.0056     NA 0.0007 0.0008 0.0221 0.0002 0.0011 0.0019 0.0018
7.91  0.0110 0.0020     NA 0.0120     NA 0.0044     NA 0.0008 0.0019 0.0008
7.96  0.0260 0.0062     NA 0.0021 0.0025 0.0495     NA 0.0020 0.0014 0.0035
7.99  0.1379 0.0174     NA 0.0048 0.0089 0.1006 0.0018 0.0017 0.0011 0.0026
8.02  0.1123 0.0414 0.0008 0.0070 0.0312 0.0493 0.0102 0.0018 0.0013 0.0020
8.05  0.0396     NA     NA 0.0008 0.0148 0.0171 0.0060 0.0016 0.0004 0.0009
8.08  0.0149 0.0017     NA 0.0014     NA 0.0178 0.0011 0.0012 0.0004 0.0009
8.11  0.0229 0.0115     NA 0.0003 0.0012 0.0070 0.0002 0.0013     NA 0.0010
8.14      NA     NA     NA 0.0001     NA 0.0078     NA 0.0003 0.0003 0.0015
8.17  0.0037     NA     NA 0.0080     NA 0.0019     NA     NA     NA 0.0001
8.2   0.0016     NA     NA 0.0007     NA     NA     NA 0.0010     NA 0.0000
8.24  0.0023     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.26      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
8.31      NA 0.0004     NA     NA     NA     NA     NA     NA     NA     NA
8.36      NA     NA     NA     NA     NA 0.0014     NA     NA     NA     NA
8.4       NA     NA     NA     NA     NA     NA     NA     NA     NA 0.0001
8.45      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.49      NA     NA     NA     NA     NA     NA     NA 0.0002     NA     NA
8.69      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.73  0.0009     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.75  0.0010     NA     NA     NA     NA     NA     NA     NA     NA     NA
8.82      NA     NA     NA     NA     NA 0.0006     NA     NA     NA     NA
8.86  0.0017     NA     NA     NA     NA 0.0006     NA     NA     NA     NA
9.11      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
9.14      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
9.17  0.0013     NA 0.0058     NA 0.0054 0.0005     NA     NA 0.0025     NA
9.2       NA     NA 0.0012     NA 0.0023     NA 0.0002     NA 0.0010     NA
9.23      NA     NA     NA     NA 0.0011     NA     NA     NA 0.0003     NA
9.26      NA     NA 0.0013     NA 0.0013 0.0002     NA     NA 0.0005 0.0000
9.29      NA 0.0079     NA 0.0002 0.0004     NA     NA     NA 0.0001 0.0001
9.32      NA     NA     NA     NA     NA 0.0003 0.0004     NA     NA 0.0000
9.35      NA     NA     NA     NA     NA     NA 0.0002 0.0020 0.0002     NA
9.38      NA     NA     NA     NA 0.0006     NA 0.0007 0.0008 0.0004     NA
9.41      NA     NA     NA     NA     NA     NA     NA     NA 0.0002     NA
9.44      NA 0.0004     NA     NA     NA     NA     NA 0.0006     NA     NA
9.48      NA     NA     NA     NA     NA     NA     NA     NA 0.0001 0.0001
9.51      NA     NA     NA     NA     NA     NA     NA     NA     NA 0.0000
9.53  0.0025 0.0005 0.0009 0.0004 0.0014     NA     NA 0.0009 0.0032 0.0000
9.55  0.0004     NA 0.0009     NA 0.0015 0.0002 0.0006 0.0107 0.0004     NA
9.59  0.0012     NA     NA 0.0001     NA     NA     NA 0.0004 0.0006 0.0000
9.63      NA     NA     NA     NA     NA     NA     NA     NA 0.0009     NA
9.66  0.0006     NA     NA     NA     NA     NA     NA     NA     NA 0.0000
9.69  0.0004     NA 0.0247 0.0005 0.0215     NA     NA     NA 0.0090 0.0002
9.72  0.0084 0.0005     NA 0.0005 0.0027 0.0078 0.0038 0.0075 0.0035     NA
9.75      NA     NA 0.0018     NA 0.0021 0.0003 0.0008 0.0003 0.0017     NA
9.78      NA     NA     NA     NA     NA     NA     NA     NA 0.0005     NA
9.8       NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.83      NA     NA     NA     NA     NA     NA     NA     NA 0.0001     NA
9.88      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
9.9       NA     NA 0.0009     NA 0.0006     NA     NA     NA 0.0003     NA
9.92      NA     NA 0.0008     NA 0.0005     NA     NA 0.0003 0.0004     NA
9.98      NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10        NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.04     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.06     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.11     NA 0.0002     NA     NA     NA     NA     NA     NA     NA     NA
10.15     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.27     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
10.58     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
11.96     NA     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.03     NA     NA     NA 0.0002     NA     NA     NA     NA     NA     NA
12.13 0.0004     NA     NA     NA     NA     NA     NA     NA     NA     NA
12.17     NA     NA     NA     NA     NA     NA     NA     NA 0.0003     NA
12.81 0.0007     NA     NA     NA     NA     NA     NA     NA     NA     NA
13.51     NA     NA     NA     NA     NA 0.0002     NA     NA     NA     NA
13.55     NA     NA     NA     NA     NA 0.0002     NA     NA     NA     NA
        XX_sm
0      0.0368
0.1    0.0011
0.12   0.0013
0.16   0.0033
0.18       NA
0.23       NA
0.26   0.0027
0.3        NA
0.33   0.0038
0.35       NA
0.39   0.0045
0.43   0.0055
0.46       NA
0.49   0.0107
0.52       NA
0.55   0.0809
0.59       NA
0.61   0.7481
0.65   0.0672
0.69   0.1742
0.72   0.0206
0.75   0.0514
0.78   0.0610
0.82   0.1870
0.85   0.1610
0.88   0.4389
0.91   0.3456
0.95   0.2692
0.98   0.2039
1.01   0.2413
1.04   0.3292
1.07   0.3350
1.1    0.4073
1.13   0.6291
1.17  10.4787
1.2    0.5458
1.23   0.3653
1.26   0.6803
1.3    0.2084
1.32   0.4187
1.35   0.3154
1.39   0.1741
1.42   0.2985
1.45   0.2628
1.48   0.3743
1.51       NA
1.54   0.2294
1.57   0.1289
1.6    0.3664
1.64   0.6410
1.67   0.1889
1.7    0.4839
1.73   0.2777
1.76   0.0886
1.79   0.0960
1.82   0.1664
1.85   0.2223
1.88   0.4803
1.92       NA
1.95   0.1070
1.98   0.4475
2.01   0.5479
2.04   0.1813
2.07   0.1730
2.11   0.2285
2.12   0.1995
2.16   0.0645
2.19   0.1284
2.22   0.0324
2.25   0.1426
2.28   0.1357
2.31   0.0370
2.34   0.0780
2.37   0.1172
2.4    0.2025
2.43       NA
2.46   0.0334
2.49   0.0479
2.52   0.0336
2.55   0.0435
2.58   0.0260
2.61   0.0323
2.64   0.0240
2.67   0.0058
2.7    0.0121
2.73   0.0099
2.76   0.0189
2.79   0.0064
2.82   0.0298
2.85   0.0196
2.88   0.0099
2.91   0.0046
2.94   0.0017
2.97   0.0016
3      0.0010
3.03       NA
3.06       NA
3.09       NA
3.12       NA
3.15       NA
3.18       NA
3.21       NA
3.24       NA
3.27       NA
3.29       NA
3.33       NA
3.36       NA
3.39       NA
3.42       NA
3.45       NA
3.48       NA
3.51   0.0229
3.54   0.0512
3.57   0.2435
3.6    0.2285
3.63   0.0962
3.66   0.0634
3.69   0.0355
3.72   0.0568
3.75   0.0566
3.78   0.0919
3.81   0.0595
3.84   0.0653
3.87   0.0519
3.9    0.0329
3.93   0.0240
3.96   0.0260
3.99   0.0292
4.02       NA
4.05       NA
4.08       NA
4.13       NA
4.17       NA
4.2        NA
4.25       NA
4.28       NA
4.31       NA
4.34       NA
4.38       NA
4.41       NA
4.45       NA
4.5        NA
4.53       NA
4.55       NA
4.58       NA
4.63       NA
4.66       NA
4.71       NA
4.74       NA
4.78       NA
4.81   0.0776
4.84   0.2110
4.88       NA
4.91   0.3951
4.96       NA
5      0.0781
5.03   0.0376
5.06   0.0172
5.09   0.0484
5.13   0.0330
5.17   0.0469
5.21   0.0268
5.25   0.0268
5.28   0.0846
5.31   0.0893
5.34   0.0411
5.37   0.0233
5.42   0.0190
5.45   0.0118
5.5    0.0059
5.53   0.0157
5.56   0.0140
5.6    0.0266
5.62   0.0340
5.67   0.0175
5.7    0.0231
5.75   0.0177
5.78   0.0120
5.81   0.0118
5.84   0.0258
5.88   0.0355
5.91   0.0324
5.95   0.0319
5.99   0.0243
6.03   0.0083
6.06   0.0095
6.09   0.0050
6.13   0.0147
6.17   0.0123
6.2    0.0031
6.25   0.0095
6.28   0.0124
6.31   0.0059
6.34   0.0063
6.38   0.0128
6.41   0.0107
6.46   0.0095
6.5    0.0087
6.53   0.0107
6.56   0.0040
6.59   0.0180
6.62   0.0202
6.66   0.0169
6.7    0.0337
6.75   0.0233
6.78   0.0246
6.81   0.0212
6.84   0.0247
6.88   0.0080
6.92   0.0325
6.96   0.0226
6.99   0.0124
7.03   0.0169
7.06   0.0169
7.09   0.0365
7.12   0.0139
7.16   0.0446
7.21   0.0217
7.25   0.0117
7.28   0.0090
7.31   0.0102
7.34   0.0116
7.37   0.0161
7.42   0.0166
7.45   0.0329
7.5    0.0212
7.53   0.0103
7.56   0.0105
7.59   0.0197
7.63   0.0127
7.67   0.0055
7.71   0.0145
7.74   0.0094
7.78   0.0114
7.81   0.0071
7.84   0.0047
7.87   0.0042
7.91   0.0039
7.96   0.0094
7.99   0.0110
8.02   0.0044
8.05   0.0146
8.08   0.0103
8.11   0.0109
8.14       NA
8.17       NA
8.2        NA
8.24       NA
8.26   0.0016
8.31       NA
8.36       NA
8.4        NA
8.45       NA
8.49       NA
8.69       NA
8.73       NA
8.75       NA
8.82       NA
8.86       NA
9.11       NA
9.14       NA
9.17       NA
9.2        NA
9.23       NA
9.26   0.0042
9.29       NA
9.32   0.0011
9.35       NA
9.38       NA
9.41   0.0013
9.44       NA
9.48       NA
9.51       NA
9.53       NA
9.55   0.0011
9.59       NA
9.63       NA
9.66       NA
9.69       NA
9.72   0.0153
9.75   0.0053
9.78   0.0052
9.8        NA
9.83       NA
9.88       NA
9.9        NA
9.92   0.0223
9.98       NA
10         NA
10.04      NA
10.06      NA
10.11      NA
10.15      NA
10.27      NA
10.58      NA
11.96      NA
12.03      NA
12.13      NA
12.17      NA
12.81      NA
13.51      NA
13.55      NA

$type
[1] "nmr-peaks"

$description
[1] "NMR propolis"

$metadata
       seasons agroregions
AC_au       au       Plain
AN_au       au     Plateau
BR_au       au   Highlands
CE_au       au     Plateau
CN_au       au     Plateau
DC_au       au     Plateau
IT_au       au     Plateau
JB_au       au       Plain
PU_au       au     Plateau
SA_au       au     Plateau
SJ_au       au   Highlands
SJC_au      au     Plateau
UR_au       au   Highlands
VR_au       au     Plateau
XX_au       au     Plateau
AC_sm       sm       Plain
AN_sm       sm     Plateau
BR_sm       sm   Highlands
CE_sm       sm     Plateau
CN_sm       sm     Plateau
DC_sm       sm     Plateau
FP_sm       sm       Plain
IT_sm       sm     Plateau
JB_sm       sm       Plain
PU_sm       sm     Plateau
SA_sm       sm     Plateau
SJC_sm      sm     Plateau
SJ_sm       sm   Highlands
UR_sm       sm   Highlands
VR_sm       sm     Plateau
XX_sm       sm     Plateau

$labels
$labels$x
[1] "ppm"

$labels$val
[1] "intensity"


$xSet
NULL

> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_x_values")
> ### * subset_x_values
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_x_values
> ### Title: Subset x-values
> ### Aliases: subset_x_values
> ### Keywords: subset xvalues
> 
> ### ** Examples
> 
>   ## Example of subsetting x-values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   subset = subset_x_values(cachexia, c(1,2,10,20), by.index = TRUE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("subset_x_values_by_interval")
> ### * subset_x_values_by_interval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: subset_x_values_by_interval
> ### Title: Subset x-values by interval
> ### Aliases: subset_x_values_by_interval
> ### Keywords: subset interval
> 
> ### ** Examples
> 
>   ## Example of subsetting x-values by an interval
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   subset = subset_x_values_by_interval(propolis, 1, 3)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("sum_dataset")
> ### * sum_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sum_dataset
> ### Title: Dataset summary
> ### Aliases: sum_dataset
> ### Keywords: dataset summary
> 
> ### ** Examples
> 
> ## Don't show: 
>   ## Example of summarizing a dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   sum_dataset(cachexia, stats = TRUE)
Dataset summary:
Valid dataset
Description:  Human cachexia 
Type of data:  concentrations 
Number of samples:  77 
Number of data points 63 
Number of metadata variables:  1 
Label of x-axis values:  compound 
Label of data points:  concentration 
Number of missing values in data:  0 
Mean of data values:  347.3735 
Median of data values:  51.42 
Standard deviation:  1500.838 
Range of values:  0.79 33860.35 
Quantiles: 
      0%      25%      50%      75%     100% 
    0.79    17.46    51.42   160.77 33860.35 
> ## End(Don't show)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("summary_var_importance")
> ### * summary_var_importance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summary_var_importance
> ### Title: Summary of variables importance
> ### Aliases: summary_var_importance
> ### Keywords: vip summary
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("tTests_dataset")
> ### * tTests_dataset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tTests_dataset
> ### Title: t-Tests on dataset
> ### Aliases: tTests_dataset
> ### Keywords: ttest
> 
> ### ** Examples
> 
>   ## Example of t-Tests on dataset
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   ttests.result = tTests_dataset(cachexia, "Muscle.loss", 
+ 		  write.file = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("train_and_predict")
> ### * train_and_predict
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: train_and_predict
> ### Title: Train and predict
> ### Aliases: train_and_predict
> ### Keywords: train predict
> 
> ### ** Examples
> 
>   ## Example of training and predicting
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   result = train_and_predict(cachexia, new.samples = cachexia$data,
+ 	 "Muscle.loss", "pls", "cv")
Warning: `repeats` has no meaning for this resampling method.
Loading required package: lattice
Loading required package: ggplot2
Warning: package ‘ggplot2’ was built under R version 4.0.2

Attaching package: ‘caret’

The following object is masked from ‘package:specmine’:

    multiClassSummary

> 
> 
> 
> cleanEx()

detaching ‘package:caret’, ‘package:ggplot2’, ‘package:lattice’,
  ‘package:specmine.datasets’

> nameEx("train_classifier")
> ### * train_classifier
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: train_classifier
> ### Title: Train classifier
> ### Aliases: train_classifier
> ### Keywords: train classifier
> 
> ### ** Examples
> 
>   ## Example of training a classifier
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   result = train_classifier(cachexia, "Muscle.loss", "pls", "cv")
Warning: `repeats` has no meaning for this resampling method.
Loading required package: lattice
Loading required package: ggplot2
Warning: package ‘ggplot2’ was built under R version 4.0.2

Attaching package: ‘caret’

The following object is masked from ‘package:specmine’:

    multiClassSummary

> 
> 
> 
> cleanEx()

detaching ‘package:caret’, ‘package:ggplot2’, ‘package:lattice’,
  ‘package:specmine.datasets’

> nameEx("train_models_performance")
> ### * train_models_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: train_models_performance
> ### Title: Train models
> ### Aliases: train_models_performance
> ### Keywords: train model
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("transform_data")
> ### * transform_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: transform_data
> ### Title: Transform data
> ### Aliases: transform_data
> ### Keywords: log cubicroot
> 
> ### ** Examples
> 
> 
>   ## Example of logarithmic transformation
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset.log = transform_data(cachexia, "log")
> 
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("values_per_peak")
> ### * values_per_peak
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: values_per_peak
> ### Title: Values per peak
> ### Aliases: values_per_peak
> ### Keywords: peak sample
> 
> ### ** Examples
> 
>   ## Example of getting the number of values for each peak
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   num.peaks = values_per_peak(propolis$data)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("values_per_sample")
> ### * values_per_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: values_per_sample
> ### Title: Values per peak
> ### Aliases: values_per_sample
> ### Keywords: values sample
> 
> ### ** Examples
> 
>   ## Example of getting the number of values for each sample
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   num.values.samples = values_per_sample(propolis$data)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("variables_as_metadata")
> ### * variables_as_metadata
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: variables_as_metadata
> ### Title: Variables as metadata
> ### Aliases: variables_as_metadata
> ### Keywords: metadata variable
> 
> ### ** Examples
> 
>   ## Example of using a variable as metadata variable
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(cachexia)
>   dataset = variables_as_metadata(cachexia, "Creatine", by.index = FALSE)
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("volcano_plot_fc_tt")
> ### * volcano_plot_fc_tt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: volcano_plot_fc_tt
> ### Title: Volcano plot
> ### Aliases: volcano_plot_fc_tt
> ### Keywords: volcano plot
> 
> ### ** Examples
> 
>     ## Example of a volcano plot
> 	library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>     data(cachexia)
>     foldchange.results = fold_change(cachexia, "Muscle.loss", "control")
>     ttests.results = tTests_dataset(cachexia, "Muscle.loss")
>     volcano_plot_fc_tt(cachexia, foldchange.results, ttests.results, 
+ 		       fc.threshold = 2, tt.threshold = 0.01)
 [1] "3-Hydroxybutyrate"    "3-Hydroxyisovalerate" "Acetate"             
 [4] "Alanine"              "Betaine"              "Dimethylamine"       
 [7] "Glutamine"            "Leucine"              "N.N-Dimethylglycine" 
[10] "Pyroglutamate"        "Quinolinate"          "Serine"              
[13] "Valine"               "cis-Aconitate"        "myo-Inositol"        
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("x_values_to_indexes")
> ### * x_values_to_indexes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: x_values_to_indexes
> ### Title: Get x-values indexes
> ### Aliases: x_values_to_indexes
> ### Keywords: indexes xvalues
> 
> ### ** Examples
> 
>   ## Example of getting the indexes of the x-values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   indexes = x_values_to_indexes(propolis, c(1.3, 3.51, 6.03))
> 
> 
> 
> cleanEx()

detaching ‘package:specmine.datasets’

> nameEx("xvalue_interval_to_indexes")
> ### * xvalue_interval_to_indexes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: xvalue_interval_to_indexes
> ### Title: Get indexes of an interval of x-values
> ### Aliases: xvalue_interval_to_indexes
> ### Keywords: indexes interval
> 
> ### ** Examples
> 
>   ## Example of getting the indexes of an interval of x-values
>   library(specmine.datasets)
Warning: package ‘specmine.datasets’ was built under R version 4.0.2
>   data(propolis)
>   indexes.interval = xvalue_interval_to_indexes(propolis, 2.0, 5.5)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:specmine.datasets’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  18.151 0.88 19.435 0.003 0.005 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
