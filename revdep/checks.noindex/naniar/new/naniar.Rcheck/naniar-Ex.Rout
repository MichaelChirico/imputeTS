
R version 4.0.1 (2020-06-06) -- "See Things Now"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "naniar"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('naniar')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("add_any_miss")
> ### * add_any_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_any_miss
> ### Title: Add a column describing presence of any missing values
> ### Aliases: add_any_miss
> 
> ### ** Examples
> 
> 
> airquality %>% add_any_miss()
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_miss_all
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m       
[90m 1[39m    41     190   7.4    67     5     1 complete    
[90m 2[39m    36     118   8      72     5     2 complete    
[90m 3[39m    12     149  12.6    74     5     3 complete    
[90m 4[39m    18     313  11.5    62     5     4 complete    
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 missing     
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 missing     
[90m 7[39m    23     299   8.6    65     5     7 complete    
[90m 8[39m    19      99  13.8    59     5     8 complete    
[90m 9[39m     8      19  20.1    61     5     9 complete    
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 missing     
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_any_miss(Ozone)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_miss_vars
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m        
[90m 1[39m    41     190   7.4    67     5     1 complete     
[90m 2[39m    36     118   8      72     5     2 complete     
[90m 3[39m    12     149  12.6    74     5     3 complete     
[90m 4[39m    18     313  11.5    62     5     4 complete     
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 missing      
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 complete     
[90m 7[39m    23     299   8.6    65     5     7 complete     
[90m 8[39m    19      99  13.8    59     5     8 complete     
[90m 9[39m     8      19  20.1    61     5     9 complete     
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 missing      
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_any_miss(Ozone, Solar.R)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_miss_vars
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m        
[90m 1[39m    41     190   7.4    67     5     1 complete     
[90m 2[39m    36     118   8      72     5     2 complete     
[90m 3[39m    12     149  12.6    74     5     3 complete     
[90m 4[39m    18     313  11.5    62     5     4 complete     
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 missing      
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 missing      
[90m 7[39m    23     299   8.6    65     5     7 complete     
[90m 8[39m    19      99  13.8    59     5     8 complete     
[90m 9[39m     8      19  20.1    61     5     9 complete     
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 missing      
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("add_label_missings")
> ### * add_label_missings
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_label_missings
> ### Title: Add a column describing if there are any missings in the dataset
> ### Aliases: add_label_missings
> 
> ### ** Examples
> 
> 
> airquality %>% add_label_missings()
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190   7.4    67     5     1 Not Missing
[90m 2[39m    36     118   8      72     5     2 Not Missing
[90m 3[39m    12     149  12.6    74     5     3 Not Missing
[90m 4[39m    18     313  11.5    62     5     4 Not Missing
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 Missing    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 Missing    
[90m 7[39m    23     299   8.6    65     5     7 Not Missing
[90m 8[39m    19      99  13.8    59     5     8 Not Missing
[90m 9[39m     8      19  20.1    61     5     9 Not Missing
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 Missing    
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_label_missings(Ozone)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190   7.4    67     5     1 Not Missing
[90m 2[39m    36     118   8      72     5     2 Not Missing
[90m 3[39m    12     149  12.6    74     5     3 Not Missing
[90m 4[39m    18     313  11.5    62     5     4 Not Missing
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 Missing    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 Not Missing
[90m 7[39m    23     299   8.6    65     5     7 Not Missing
[90m 8[39m    19      99  13.8    59     5     8 Not Missing
[90m 9[39m     8      19  20.1    61     5     9 Not Missing
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 Missing    
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_label_missings(Ozone, Solar.R)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190   7.4    67     5     1 Not Missing
[90m 2[39m    36     118   8      72     5     2 Not Missing
[90m 3[39m    12     149  12.6    74     5     3 Not Missing
[90m 4[39m    18     313  11.5    62     5     4 Not Missing
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 Missing    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 Missing    
[90m 7[39m    23     299   8.6    65     5     7 Not Missing
[90m 8[39m    19      99  13.8    59     5     8 Not Missing
[90m 9[39m     8      19  20.1    61     5     9 Not Missing
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 Missing    
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_label_missings(Ozone, Solar.R, missing = "yes", complete = "no")
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190   7.4    67     5     1 no         
[90m 2[39m    36     118   8      72     5     2 no         
[90m 3[39m    12     149  12.6    74     5     3 no         
[90m 4[39m    18     313  11.5    62     5     4 no         
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 yes        
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 yes        
[90m 7[39m    23     299   8.6    65     5     7 no         
[90m 8[39m    19      99  13.8    59     5     8 no         
[90m 9[39m     8      19  20.1    61     5     9 no         
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 yes        
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("add_label_shadow")
> ### * add_label_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_label_shadow
> ### Title: Add a column describing whether there is a shadow
> ### Aliases: add_label_shadow
> 
> ### ** Examples
> 
> 
> airquality %>%
+   add_shadow(Ozone, Solar.R) %>%
+   add_label_shadow()
[90m# A tibble: 153 x 9[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190   7.4    67     5     1 !NA      !NA        Not Missing
[90m 2[39m    36     118   8      72     5     2 !NA      !NA        Not Missing
[90m 3[39m    12     149  12.6    74     5     3 !NA      !NA        Not Missing
[90m 4[39m    18     313  11.5    62     5     4 !NA      !NA        Not Missing
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA       NA         Missing    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA      NA         Missing    
[90m 7[39m    23     299   8.6    65     5     7 !NA      !NA        Not Missing
[90m 8[39m    19      99  13.8    59     5     8 !NA      !NA        Not Missing
[90m 9[39m     8      19  20.1    61     5     9 !NA      !NA        Not Missing
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA       !NA        Missing    
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("add_miss_cluster")
> ### * add_miss_cluster
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_miss_cluster
> ### Title: Add a column that tells us which "missingness cluster" a row
> ###   belongs to
> ### Aliases: add_miss_cluster
> 
> ### ** Examples
> 
> 
> add_miss_cluster(airquality)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day miss_cluster
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m        [3m[90m<int>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1            1
[90m 2[39m    36     118   8      72     5     2            1
[90m 3[39m    12     149  12.6    74     5     3            1
[90m 4[39m    18     313  11.5    62     5     4            1
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5            2
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6            1
[90m 7[39m    23     299   8.6    65     5     7            1
[90m 8[39m    19      99  13.8    59     5     8            1
[90m 9[39m     8      19  20.1    61     5     9            1
[90m10[39m    [31mNA[39m     194   8.6    69     5    10            2
[90m# â€¦ with 143 more rows[39m
> add_miss_cluster(airquality, cluster_method = "ward.D")
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day miss_cluster
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m        [3m[90m<int>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1            1
[90m 2[39m    36     118   8      72     5     2            1
[90m 3[39m    12     149  12.6    74     5     3            1
[90m 4[39m    18     313  11.5    62     5     4            1
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5            1
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6            1
[90m 7[39m    23     299   8.6    65     5     7            1
[90m 8[39m    19      99  13.8    59     5     8            1
[90m 9[39m     8      19  20.1    61     5     9            1
[90m10[39m    [31mNA[39m     194   8.6    69     5    10            2
[90m# â€¦ with 143 more rows[39m
> add_miss_cluster(airquality, cluster_method = "ward.D", n_clusters = 3)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day miss_cluster
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m        [3m[90m<int>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1            1
[90m 2[39m    36     118   8      72     5     2            1
[90m 3[39m    12     149  12.6    74     5     3            1
[90m 4[39m    18     313  11.5    62     5     4            1
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5            2
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6            2
[90m 7[39m    23     299   8.6    65     5     7            1
[90m 8[39m    19      99  13.8    59     5     8            1
[90m 9[39m     8      19  20.1    61     5     9            1
[90m10[39m    [31mNA[39m     194   8.6    69     5    10            3
[90m# â€¦ with 143 more rows[39m
> add_miss_cluster(airquality, n_clusters = 3)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day miss_cluster
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m        [3m[90m<int>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1            1
[90m 2[39m    36     118   8      72     5     2            1
[90m 3[39m    12     149  12.6    74     5     3            1
[90m 4[39m    18     313  11.5    62     5     4            1
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5            2
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6            1
[90m 7[39m    23     299   8.6    65     5     7            1
[90m 8[39m    19      99  13.8    59     5     8            1
[90m 9[39m     8      19  20.1    61     5     9            1
[90m10[39m    [31mNA[39m     194   8.6    69     5    10            3
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> cleanEx()
> nameEx("add_n_miss")
> ### * add_n_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_n_miss
> ### Title: Add column containing number of missing data values
> ### Aliases: add_n_miss
> 
> ### ** Examples
> 
> 
> airquality %>% add_n_miss()
    Ozone Solar.R Wind Temp Month Day n_miss_all
1      41     190  7.4   67     5   1          0
2      36     118  8.0   72     5   2          0
3      12     149 12.6   74     5   3          0
4      18     313 11.5   62     5   4          0
5      NA      NA 14.3   56     5   5          2
6      28      NA 14.9   66     5   6          1
7      23     299  8.6   65     5   7          0
8      19      99 13.8   59     5   8          0
9       8      19 20.1   61     5   9          0
10     NA     194  8.6   69     5  10          1
11      7      NA  6.9   74     5  11          1
12     16     256  9.7   69     5  12          0
13     11     290  9.2   66     5  13          0
14     14     274 10.9   68     5  14          0
15     18      65 13.2   58     5  15          0
16     14     334 11.5   64     5  16          0
17     34     307 12.0   66     5  17          0
18      6      78 18.4   57     5  18          0
19     30     322 11.5   68     5  19          0
20     11      44  9.7   62     5  20          0
21      1       8  9.7   59     5  21          0
22     11     320 16.6   73     5  22          0
23      4      25  9.7   61     5  23          0
24     32      92 12.0   61     5  24          0
25     NA      66 16.6   57     5  25          1
26     NA     266 14.9   58     5  26          1
27     NA      NA  8.0   57     5  27          2
28     23      13 12.0   67     5  28          0
29     45     252 14.9   81     5  29          0
30    115     223  5.7   79     5  30          0
31     37     279  7.4   76     5  31          0
32     NA     286  8.6   78     6   1          1
33     NA     287  9.7   74     6   2          1
34     NA     242 16.1   67     6   3          1
35     NA     186  9.2   84     6   4          1
36     NA     220  8.6   85     6   5          1
37     NA     264 14.3   79     6   6          1
38     29     127  9.7   82     6   7          0
39     NA     273  6.9   87     6   8          1
40     71     291 13.8   90     6   9          0
41     39     323 11.5   87     6  10          0
42     NA     259 10.9   93     6  11          1
43     NA     250  9.2   92     6  12          1
44     23     148  8.0   82     6  13          0
45     NA     332 13.8   80     6  14          1
46     NA     322 11.5   79     6  15          1
47     21     191 14.9   77     6  16          0
48     37     284 20.7   72     6  17          0
49     20      37  9.2   65     6  18          0
50     12     120 11.5   73     6  19          0
51     13     137 10.3   76     6  20          0
52     NA     150  6.3   77     6  21          1
53     NA      59  1.7   76     6  22          1
54     NA      91  4.6   76     6  23          1
55     NA     250  6.3   76     6  24          1
56     NA     135  8.0   75     6  25          1
57     NA     127  8.0   78     6  26          1
58     NA      47 10.3   73     6  27          1
59     NA      98 11.5   80     6  28          1
60     NA      31 14.9   77     6  29          1
61     NA     138  8.0   83     6  30          1
62    135     269  4.1   84     7   1          0
63     49     248  9.2   85     7   2          0
64     32     236  9.2   81     7   3          0
65     NA     101 10.9   84     7   4          1
66     64     175  4.6   83     7   5          0
67     40     314 10.9   83     7   6          0
68     77     276  5.1   88     7   7          0
69     97     267  6.3   92     7   8          0
70     97     272  5.7   92     7   9          0
71     85     175  7.4   89     7  10          0
72     NA     139  8.6   82     7  11          1
73     10     264 14.3   73     7  12          0
74     27     175 14.9   81     7  13          0
75     NA     291 14.9   91     7  14          1
76      7      48 14.3   80     7  15          0
77     48     260  6.9   81     7  16          0
78     35     274 10.3   82     7  17          0
79     61     285  6.3   84     7  18          0
80     79     187  5.1   87     7  19          0
81     63     220 11.5   85     7  20          0
82     16       7  6.9   74     7  21          0
83     NA     258  9.7   81     7  22          1
84     NA     295 11.5   82     7  23          1
85     80     294  8.6   86     7  24          0
86    108     223  8.0   85     7  25          0
87     20      81  8.6   82     7  26          0
88     52      82 12.0   86     7  27          0
89     82     213  7.4   88     7  28          0
90     50     275  7.4   86     7  29          0
91     64     253  7.4   83     7  30          0
92     59     254  9.2   81     7  31          0
93     39      83  6.9   81     8   1          0
94      9      24 13.8   81     8   2          0
95     16      77  7.4   82     8   3          0
96     78      NA  6.9   86     8   4          1
97     35      NA  7.4   85     8   5          1
98     66      NA  4.6   87     8   6          1
99    122     255  4.0   89     8   7          0
100    89     229 10.3   90     8   8          0
101   110     207  8.0   90     8   9          0
102    NA     222  8.6   92     8  10          1
103    NA     137 11.5   86     8  11          1
104    44     192 11.5   86     8  12          0
105    28     273 11.5   82     8  13          0
106    65     157  9.7   80     8  14          0
107    NA      64 11.5   79     8  15          1
108    22      71 10.3   77     8  16          0
109    59      51  6.3   79     8  17          0
110    23     115  7.4   76     8  18          0
111    31     244 10.9   78     8  19          0
112    44     190 10.3   78     8  20          0
113    21     259 15.5   77     8  21          0
114     9      36 14.3   72     8  22          0
115    NA     255 12.6   75     8  23          1
116    45     212  9.7   79     8  24          0
117   168     238  3.4   81     8  25          0
118    73     215  8.0   86     8  26          0
119    NA     153  5.7   88     8  27          1
120    76     203  9.7   97     8  28          0
121   118     225  2.3   94     8  29          0
122    84     237  6.3   96     8  30          0
123    85     188  6.3   94     8  31          0
124    96     167  6.9   91     9   1          0
125    78     197  5.1   92     9   2          0
126    73     183  2.8   93     9   3          0
127    91     189  4.6   93     9   4          0
128    47      95  7.4   87     9   5          0
129    32      92 15.5   84     9   6          0
130    20     252 10.9   80     9   7          0
131    23     220 10.3   78     9   8          0
132    21     230 10.9   75     9   9          0
133    24     259  9.7   73     9  10          0
134    44     236 14.9   81     9  11          0
135    21     259 15.5   76     9  12          0
136    28     238  6.3   77     9  13          0
137     9      24 10.9   71     9  14          0
138    13     112 11.5   71     9  15          0
139    46     237  6.9   78     9  16          0
140    18     224 13.8   67     9  17          0
141    13      27 10.3   76     9  18          0
142    24     238 10.3   68     9  19          0
143    16     201  8.0   82     9  20          0
144    13     238 12.6   64     9  21          0
145    23      14  9.2   71     9  22          0
146    36     139 10.3   81     9  23          0
147     7      49 10.3   69     9  24          0
148    14      20 16.6   63     9  25          0
149    30     193  6.9   70     9  26          0
150    NA     145 13.2   77     9  27          1
151    14     191 14.3   75     9  28          0
152    18     131  8.0   76     9  29          0
153    20     223 11.5   68     9  30          0
> airquality %>% add_n_miss(Ozone, Solar.R)
    Ozone Solar.R Wind Temp Month Day n_miss_vars
1      41     190  7.4   67     5   1           0
2      36     118  8.0   72     5   2           0
3      12     149 12.6   74     5   3           0
4      18     313 11.5   62     5   4           0
5      NA      NA 14.3   56     5   5           2
6      28      NA 14.9   66     5   6           1
7      23     299  8.6   65     5   7           0
8      19      99 13.8   59     5   8           0
9       8      19 20.1   61     5   9           0
10     NA     194  8.6   69     5  10           1
11      7      NA  6.9   74     5  11           1
12     16     256  9.7   69     5  12           0
13     11     290  9.2   66     5  13           0
14     14     274 10.9   68     5  14           0
15     18      65 13.2   58     5  15           0
16     14     334 11.5   64     5  16           0
17     34     307 12.0   66     5  17           0
18      6      78 18.4   57     5  18           0
19     30     322 11.5   68     5  19           0
20     11      44  9.7   62     5  20           0
21      1       8  9.7   59     5  21           0
22     11     320 16.6   73     5  22           0
23      4      25  9.7   61     5  23           0
24     32      92 12.0   61     5  24           0
25     NA      66 16.6   57     5  25           1
26     NA     266 14.9   58     5  26           1
27     NA      NA  8.0   57     5  27           2
28     23      13 12.0   67     5  28           0
29     45     252 14.9   81     5  29           0
30    115     223  5.7   79     5  30           0
31     37     279  7.4   76     5  31           0
32     NA     286  8.6   78     6   1           1
33     NA     287  9.7   74     6   2           1
34     NA     242 16.1   67     6   3           1
35     NA     186  9.2   84     6   4           1
36     NA     220  8.6   85     6   5           1
37     NA     264 14.3   79     6   6           1
38     29     127  9.7   82     6   7           0
39     NA     273  6.9   87     6   8           1
40     71     291 13.8   90     6   9           0
41     39     323 11.5   87     6  10           0
42     NA     259 10.9   93     6  11           1
43     NA     250  9.2   92     6  12           1
44     23     148  8.0   82     6  13           0
45     NA     332 13.8   80     6  14           1
46     NA     322 11.5   79     6  15           1
47     21     191 14.9   77     6  16           0
48     37     284 20.7   72     6  17           0
49     20      37  9.2   65     6  18           0
50     12     120 11.5   73     6  19           0
51     13     137 10.3   76     6  20           0
52     NA     150  6.3   77     6  21           1
53     NA      59  1.7   76     6  22           1
54     NA      91  4.6   76     6  23           1
55     NA     250  6.3   76     6  24           1
56     NA     135  8.0   75     6  25           1
57     NA     127  8.0   78     6  26           1
58     NA      47 10.3   73     6  27           1
59     NA      98 11.5   80     6  28           1
60     NA      31 14.9   77     6  29           1
61     NA     138  8.0   83     6  30           1
62    135     269  4.1   84     7   1           0
63     49     248  9.2   85     7   2           0
64     32     236  9.2   81     7   3           0
65     NA     101 10.9   84     7   4           1
66     64     175  4.6   83     7   5           0
67     40     314 10.9   83     7   6           0
68     77     276  5.1   88     7   7           0
69     97     267  6.3   92     7   8           0
70     97     272  5.7   92     7   9           0
71     85     175  7.4   89     7  10           0
72     NA     139  8.6   82     7  11           1
73     10     264 14.3   73     7  12           0
74     27     175 14.9   81     7  13           0
75     NA     291 14.9   91     7  14           1
76      7      48 14.3   80     7  15           0
77     48     260  6.9   81     7  16           0
78     35     274 10.3   82     7  17           0
79     61     285  6.3   84     7  18           0
80     79     187  5.1   87     7  19           0
81     63     220 11.5   85     7  20           0
82     16       7  6.9   74     7  21           0
83     NA     258  9.7   81     7  22           1
84     NA     295 11.5   82     7  23           1
85     80     294  8.6   86     7  24           0
86    108     223  8.0   85     7  25           0
87     20      81  8.6   82     7  26           0
88     52      82 12.0   86     7  27           0
89     82     213  7.4   88     7  28           0
90     50     275  7.4   86     7  29           0
91     64     253  7.4   83     7  30           0
92     59     254  9.2   81     7  31           0
93     39      83  6.9   81     8   1           0
94      9      24 13.8   81     8   2           0
95     16      77  7.4   82     8   3           0
96     78      NA  6.9   86     8   4           1
97     35      NA  7.4   85     8   5           1
98     66      NA  4.6   87     8   6           1
99    122     255  4.0   89     8   7           0
100    89     229 10.3   90     8   8           0
101   110     207  8.0   90     8   9           0
102    NA     222  8.6   92     8  10           1
103    NA     137 11.5   86     8  11           1
104    44     192 11.5   86     8  12           0
105    28     273 11.5   82     8  13           0
106    65     157  9.7   80     8  14           0
107    NA      64 11.5   79     8  15           1
108    22      71 10.3   77     8  16           0
109    59      51  6.3   79     8  17           0
110    23     115  7.4   76     8  18           0
111    31     244 10.9   78     8  19           0
112    44     190 10.3   78     8  20           0
113    21     259 15.5   77     8  21           0
114     9      36 14.3   72     8  22           0
115    NA     255 12.6   75     8  23           1
116    45     212  9.7   79     8  24           0
117   168     238  3.4   81     8  25           0
118    73     215  8.0   86     8  26           0
119    NA     153  5.7   88     8  27           1
120    76     203  9.7   97     8  28           0
121   118     225  2.3   94     8  29           0
122    84     237  6.3   96     8  30           0
123    85     188  6.3   94     8  31           0
124    96     167  6.9   91     9   1           0
125    78     197  5.1   92     9   2           0
126    73     183  2.8   93     9   3           0
127    91     189  4.6   93     9   4           0
128    47      95  7.4   87     9   5           0
129    32      92 15.5   84     9   6           0
130    20     252 10.9   80     9   7           0
131    23     220 10.3   78     9   8           0
132    21     230 10.9   75     9   9           0
133    24     259  9.7   73     9  10           0
134    44     236 14.9   81     9  11           0
135    21     259 15.5   76     9  12           0
136    28     238  6.3   77     9  13           0
137     9      24 10.9   71     9  14           0
138    13     112 11.5   71     9  15           0
139    46     237  6.9   78     9  16           0
140    18     224 13.8   67     9  17           0
141    13      27 10.3   76     9  18           0
142    24     238 10.3   68     9  19           0
143    16     201  8.0   82     9  20           0
144    13     238 12.6   64     9  21           0
145    23      14  9.2   71     9  22           0
146    36     139 10.3   81     9  23           0
147     7      49 10.3   69     9  24           0
148    14      20 16.6   63     9  25           0
149    30     193  6.9   70     9  26           0
150    NA     145 13.2   77     9  27           1
151    14     191 14.3   75     9  28           0
152    18     131  8.0   76     9  29           0
153    20     223 11.5   68     9  30           0
> airquality %>% add_n_miss(dplyr::contains("o"))
    Ozone Solar.R Wind Temp Month Day n_miss_vars
1      41     190  7.4   67     5   1           0
2      36     118  8.0   72     5   2           0
3      12     149 12.6   74     5   3           0
4      18     313 11.5   62     5   4           0
5      NA      NA 14.3   56     5   5           2
6      28      NA 14.9   66     5   6           1
7      23     299  8.6   65     5   7           0
8      19      99 13.8   59     5   8           0
9       8      19 20.1   61     5   9           0
10     NA     194  8.6   69     5  10           1
11      7      NA  6.9   74     5  11           1
12     16     256  9.7   69     5  12           0
13     11     290  9.2   66     5  13           0
14     14     274 10.9   68     5  14           0
15     18      65 13.2   58     5  15           0
16     14     334 11.5   64     5  16           0
17     34     307 12.0   66     5  17           0
18      6      78 18.4   57     5  18           0
19     30     322 11.5   68     5  19           0
20     11      44  9.7   62     5  20           0
21      1       8  9.7   59     5  21           0
22     11     320 16.6   73     5  22           0
23      4      25  9.7   61     5  23           0
24     32      92 12.0   61     5  24           0
25     NA      66 16.6   57     5  25           1
26     NA     266 14.9   58     5  26           1
27     NA      NA  8.0   57     5  27           2
28     23      13 12.0   67     5  28           0
29     45     252 14.9   81     5  29           0
30    115     223  5.7   79     5  30           0
31     37     279  7.4   76     5  31           0
32     NA     286  8.6   78     6   1           1
33     NA     287  9.7   74     6   2           1
34     NA     242 16.1   67     6   3           1
35     NA     186  9.2   84     6   4           1
36     NA     220  8.6   85     6   5           1
37     NA     264 14.3   79     6   6           1
38     29     127  9.7   82     6   7           0
39     NA     273  6.9   87     6   8           1
40     71     291 13.8   90     6   9           0
41     39     323 11.5   87     6  10           0
42     NA     259 10.9   93     6  11           1
43     NA     250  9.2   92     6  12           1
44     23     148  8.0   82     6  13           0
45     NA     332 13.8   80     6  14           1
46     NA     322 11.5   79     6  15           1
47     21     191 14.9   77     6  16           0
48     37     284 20.7   72     6  17           0
49     20      37  9.2   65     6  18           0
50     12     120 11.5   73     6  19           0
51     13     137 10.3   76     6  20           0
52     NA     150  6.3   77     6  21           1
53     NA      59  1.7   76     6  22           1
54     NA      91  4.6   76     6  23           1
55     NA     250  6.3   76     6  24           1
56     NA     135  8.0   75     6  25           1
57     NA     127  8.0   78     6  26           1
58     NA      47 10.3   73     6  27           1
59     NA      98 11.5   80     6  28           1
60     NA      31 14.9   77     6  29           1
61     NA     138  8.0   83     6  30           1
62    135     269  4.1   84     7   1           0
63     49     248  9.2   85     7   2           0
64     32     236  9.2   81     7   3           0
65     NA     101 10.9   84     7   4           1
66     64     175  4.6   83     7   5           0
67     40     314 10.9   83     7   6           0
68     77     276  5.1   88     7   7           0
69     97     267  6.3   92     7   8           0
70     97     272  5.7   92     7   9           0
71     85     175  7.4   89     7  10           0
72     NA     139  8.6   82     7  11           1
73     10     264 14.3   73     7  12           0
74     27     175 14.9   81     7  13           0
75     NA     291 14.9   91     7  14           1
76      7      48 14.3   80     7  15           0
77     48     260  6.9   81     7  16           0
78     35     274 10.3   82     7  17           0
79     61     285  6.3   84     7  18           0
80     79     187  5.1   87     7  19           0
81     63     220 11.5   85     7  20           0
82     16       7  6.9   74     7  21           0
83     NA     258  9.7   81     7  22           1
84     NA     295 11.5   82     7  23           1
85     80     294  8.6   86     7  24           0
86    108     223  8.0   85     7  25           0
87     20      81  8.6   82     7  26           0
88     52      82 12.0   86     7  27           0
89     82     213  7.4   88     7  28           0
90     50     275  7.4   86     7  29           0
91     64     253  7.4   83     7  30           0
92     59     254  9.2   81     7  31           0
93     39      83  6.9   81     8   1           0
94      9      24 13.8   81     8   2           0
95     16      77  7.4   82     8   3           0
96     78      NA  6.9   86     8   4           1
97     35      NA  7.4   85     8   5           1
98     66      NA  4.6   87     8   6           1
99    122     255  4.0   89     8   7           0
100    89     229 10.3   90     8   8           0
101   110     207  8.0   90     8   9           0
102    NA     222  8.6   92     8  10           1
103    NA     137 11.5   86     8  11           1
104    44     192 11.5   86     8  12           0
105    28     273 11.5   82     8  13           0
106    65     157  9.7   80     8  14           0
107    NA      64 11.5   79     8  15           1
108    22      71 10.3   77     8  16           0
109    59      51  6.3   79     8  17           0
110    23     115  7.4   76     8  18           0
111    31     244 10.9   78     8  19           0
112    44     190 10.3   78     8  20           0
113    21     259 15.5   77     8  21           0
114     9      36 14.3   72     8  22           0
115    NA     255 12.6   75     8  23           1
116    45     212  9.7   79     8  24           0
117   168     238  3.4   81     8  25           0
118    73     215  8.0   86     8  26           0
119    NA     153  5.7   88     8  27           1
120    76     203  9.7   97     8  28           0
121   118     225  2.3   94     8  29           0
122    84     237  6.3   96     8  30           0
123    85     188  6.3   94     8  31           0
124    96     167  6.9   91     9   1           0
125    78     197  5.1   92     9   2           0
126    73     183  2.8   93     9   3           0
127    91     189  4.6   93     9   4           0
128    47      95  7.4   87     9   5           0
129    32      92 15.5   84     9   6           0
130    20     252 10.9   80     9   7           0
131    23     220 10.3   78     9   8           0
132    21     230 10.9   75     9   9           0
133    24     259  9.7   73     9  10           0
134    44     236 14.9   81     9  11           0
135    21     259 15.5   76     9  12           0
136    28     238  6.3   77     9  13           0
137     9      24 10.9   71     9  14           0
138    13     112 11.5   71     9  15           0
139    46     237  6.9   78     9  16           0
140    18     224 13.8   67     9  17           0
141    13      27 10.3   76     9  18           0
142    24     238 10.3   68     9  19           0
143    16     201  8.0   82     9  20           0
144    13     238 12.6   64     9  21           0
145    23      14  9.2   71     9  22           0
146    36     139 10.3   81     9  23           0
147     7      49 10.3   69     9  24           0
148    14      20 16.6   63     9  25           0
149    30     193  6.9   70     9  26           0
150    NA     145 13.2   77     9  27           1
151    14     191 14.3   75     9  28           0
152    18     131  8.0   76     9  29           0
153    20     223 11.5   68     9  30           0
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("add_prop_miss")
> ### * add_prop_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_prop_miss
> ### Title: Add column containing proportion of missing data values
> ### Aliases: add_prop_miss
> 
> ### ** Examples
> 
> 
> airquality %>% add_prop_miss()
    Ozone Solar.R Wind Temp Month Day prop_miss_all
1      41     190  7.4   67     5   1     0.0000000
2      36     118  8.0   72     5   2     0.0000000
3      12     149 12.6   74     5   3     0.0000000
4      18     313 11.5   62     5   4     0.0000000
5      NA      NA 14.3   56     5   5     0.3333333
6      28      NA 14.9   66     5   6     0.1666667
7      23     299  8.6   65     5   7     0.0000000
8      19      99 13.8   59     5   8     0.0000000
9       8      19 20.1   61     5   9     0.0000000
10     NA     194  8.6   69     5  10     0.1666667
11      7      NA  6.9   74     5  11     0.1666667
12     16     256  9.7   69     5  12     0.0000000
13     11     290  9.2   66     5  13     0.0000000
14     14     274 10.9   68     5  14     0.0000000
15     18      65 13.2   58     5  15     0.0000000
16     14     334 11.5   64     5  16     0.0000000
17     34     307 12.0   66     5  17     0.0000000
18      6      78 18.4   57     5  18     0.0000000
19     30     322 11.5   68     5  19     0.0000000
20     11      44  9.7   62     5  20     0.0000000
21      1       8  9.7   59     5  21     0.0000000
22     11     320 16.6   73     5  22     0.0000000
23      4      25  9.7   61     5  23     0.0000000
24     32      92 12.0   61     5  24     0.0000000
25     NA      66 16.6   57     5  25     0.1666667
26     NA     266 14.9   58     5  26     0.1666667
27     NA      NA  8.0   57     5  27     0.3333333
28     23      13 12.0   67     5  28     0.0000000
29     45     252 14.9   81     5  29     0.0000000
30    115     223  5.7   79     5  30     0.0000000
31     37     279  7.4   76     5  31     0.0000000
32     NA     286  8.6   78     6   1     0.1666667
33     NA     287  9.7   74     6   2     0.1666667
34     NA     242 16.1   67     6   3     0.1666667
35     NA     186  9.2   84     6   4     0.1666667
36     NA     220  8.6   85     6   5     0.1666667
37     NA     264 14.3   79     6   6     0.1666667
38     29     127  9.7   82     6   7     0.0000000
39     NA     273  6.9   87     6   8     0.1666667
40     71     291 13.8   90     6   9     0.0000000
41     39     323 11.5   87     6  10     0.0000000
42     NA     259 10.9   93     6  11     0.1666667
43     NA     250  9.2   92     6  12     0.1666667
44     23     148  8.0   82     6  13     0.0000000
45     NA     332 13.8   80     6  14     0.1666667
46     NA     322 11.5   79     6  15     0.1666667
47     21     191 14.9   77     6  16     0.0000000
48     37     284 20.7   72     6  17     0.0000000
49     20      37  9.2   65     6  18     0.0000000
50     12     120 11.5   73     6  19     0.0000000
51     13     137 10.3   76     6  20     0.0000000
52     NA     150  6.3   77     6  21     0.1666667
53     NA      59  1.7   76     6  22     0.1666667
54     NA      91  4.6   76     6  23     0.1666667
55     NA     250  6.3   76     6  24     0.1666667
56     NA     135  8.0   75     6  25     0.1666667
57     NA     127  8.0   78     6  26     0.1666667
58     NA      47 10.3   73     6  27     0.1666667
59     NA      98 11.5   80     6  28     0.1666667
60     NA      31 14.9   77     6  29     0.1666667
61     NA     138  8.0   83     6  30     0.1666667
62    135     269  4.1   84     7   1     0.0000000
63     49     248  9.2   85     7   2     0.0000000
64     32     236  9.2   81     7   3     0.0000000
65     NA     101 10.9   84     7   4     0.1666667
66     64     175  4.6   83     7   5     0.0000000
67     40     314 10.9   83     7   6     0.0000000
68     77     276  5.1   88     7   7     0.0000000
69     97     267  6.3   92     7   8     0.0000000
70     97     272  5.7   92     7   9     0.0000000
71     85     175  7.4   89     7  10     0.0000000
72     NA     139  8.6   82     7  11     0.1666667
73     10     264 14.3   73     7  12     0.0000000
74     27     175 14.9   81     7  13     0.0000000
75     NA     291 14.9   91     7  14     0.1666667
76      7      48 14.3   80     7  15     0.0000000
77     48     260  6.9   81     7  16     0.0000000
78     35     274 10.3   82     7  17     0.0000000
79     61     285  6.3   84     7  18     0.0000000
80     79     187  5.1   87     7  19     0.0000000
81     63     220 11.5   85     7  20     0.0000000
82     16       7  6.9   74     7  21     0.0000000
83     NA     258  9.7   81     7  22     0.1666667
84     NA     295 11.5   82     7  23     0.1666667
85     80     294  8.6   86     7  24     0.0000000
86    108     223  8.0   85     7  25     0.0000000
87     20      81  8.6   82     7  26     0.0000000
88     52      82 12.0   86     7  27     0.0000000
89     82     213  7.4   88     7  28     0.0000000
90     50     275  7.4   86     7  29     0.0000000
91     64     253  7.4   83     7  30     0.0000000
92     59     254  9.2   81     7  31     0.0000000
93     39      83  6.9   81     8   1     0.0000000
94      9      24 13.8   81     8   2     0.0000000
95     16      77  7.4   82     8   3     0.0000000
96     78      NA  6.9   86     8   4     0.1666667
97     35      NA  7.4   85     8   5     0.1666667
98     66      NA  4.6   87     8   6     0.1666667
99    122     255  4.0   89     8   7     0.0000000
100    89     229 10.3   90     8   8     0.0000000
101   110     207  8.0   90     8   9     0.0000000
102    NA     222  8.6   92     8  10     0.1666667
103    NA     137 11.5   86     8  11     0.1666667
104    44     192 11.5   86     8  12     0.0000000
105    28     273 11.5   82     8  13     0.0000000
106    65     157  9.7   80     8  14     0.0000000
107    NA      64 11.5   79     8  15     0.1666667
108    22      71 10.3   77     8  16     0.0000000
109    59      51  6.3   79     8  17     0.0000000
110    23     115  7.4   76     8  18     0.0000000
111    31     244 10.9   78     8  19     0.0000000
112    44     190 10.3   78     8  20     0.0000000
113    21     259 15.5   77     8  21     0.0000000
114     9      36 14.3   72     8  22     0.0000000
115    NA     255 12.6   75     8  23     0.1666667
116    45     212  9.7   79     8  24     0.0000000
117   168     238  3.4   81     8  25     0.0000000
118    73     215  8.0   86     8  26     0.0000000
119    NA     153  5.7   88     8  27     0.1666667
120    76     203  9.7   97     8  28     0.0000000
121   118     225  2.3   94     8  29     0.0000000
122    84     237  6.3   96     8  30     0.0000000
123    85     188  6.3   94     8  31     0.0000000
124    96     167  6.9   91     9   1     0.0000000
125    78     197  5.1   92     9   2     0.0000000
126    73     183  2.8   93     9   3     0.0000000
127    91     189  4.6   93     9   4     0.0000000
128    47      95  7.4   87     9   5     0.0000000
129    32      92 15.5   84     9   6     0.0000000
130    20     252 10.9   80     9   7     0.0000000
131    23     220 10.3   78     9   8     0.0000000
132    21     230 10.9   75     9   9     0.0000000
133    24     259  9.7   73     9  10     0.0000000
134    44     236 14.9   81     9  11     0.0000000
135    21     259 15.5   76     9  12     0.0000000
136    28     238  6.3   77     9  13     0.0000000
137     9      24 10.9   71     9  14     0.0000000
138    13     112 11.5   71     9  15     0.0000000
139    46     237  6.9   78     9  16     0.0000000
140    18     224 13.8   67     9  17     0.0000000
141    13      27 10.3   76     9  18     0.0000000
142    24     238 10.3   68     9  19     0.0000000
143    16     201  8.0   82     9  20     0.0000000
144    13     238 12.6   64     9  21     0.0000000
145    23      14  9.2   71     9  22     0.0000000
146    36     139 10.3   81     9  23     0.0000000
147     7      49 10.3   69     9  24     0.0000000
148    14      20 16.6   63     9  25     0.0000000
149    30     193  6.9   70     9  26     0.0000000
150    NA     145 13.2   77     9  27     0.1666667
151    14     191 14.3   75     9  28     0.0000000
152    18     131  8.0   76     9  29     0.0000000
153    20     223 11.5   68     9  30     0.0000000
> 
> airquality %>% add_prop_miss(Solar.R)
    Ozone Solar.R Wind Temp Month Day prop_miss_vars
1      41     190  7.4   67     5   1              0
2      36     118  8.0   72     5   2              0
3      12     149 12.6   74     5   3              0
4      18     313 11.5   62     5   4              0
5      NA      NA 14.3   56     5   5              1
6      28      NA 14.9   66     5   6              1
7      23     299  8.6   65     5   7              0
8      19      99 13.8   59     5   8              0
9       8      19 20.1   61     5   9              0
10     NA     194  8.6   69     5  10              0
11      7      NA  6.9   74     5  11              1
12     16     256  9.7   69     5  12              0
13     11     290  9.2   66     5  13              0
14     14     274 10.9   68     5  14              0
15     18      65 13.2   58     5  15              0
16     14     334 11.5   64     5  16              0
17     34     307 12.0   66     5  17              0
18      6      78 18.4   57     5  18              0
19     30     322 11.5   68     5  19              0
20     11      44  9.7   62     5  20              0
21      1       8  9.7   59     5  21              0
22     11     320 16.6   73     5  22              0
23      4      25  9.7   61     5  23              0
24     32      92 12.0   61     5  24              0
25     NA      66 16.6   57     5  25              0
26     NA     266 14.9   58     5  26              0
27     NA      NA  8.0   57     5  27              1
28     23      13 12.0   67     5  28              0
29     45     252 14.9   81     5  29              0
30    115     223  5.7   79     5  30              0
31     37     279  7.4   76     5  31              0
32     NA     286  8.6   78     6   1              0
33     NA     287  9.7   74     6   2              0
34     NA     242 16.1   67     6   3              0
35     NA     186  9.2   84     6   4              0
36     NA     220  8.6   85     6   5              0
37     NA     264 14.3   79     6   6              0
38     29     127  9.7   82     6   7              0
39     NA     273  6.9   87     6   8              0
40     71     291 13.8   90     6   9              0
41     39     323 11.5   87     6  10              0
42     NA     259 10.9   93     6  11              0
43     NA     250  9.2   92     6  12              0
44     23     148  8.0   82     6  13              0
45     NA     332 13.8   80     6  14              0
46     NA     322 11.5   79     6  15              0
47     21     191 14.9   77     6  16              0
48     37     284 20.7   72     6  17              0
49     20      37  9.2   65     6  18              0
50     12     120 11.5   73     6  19              0
51     13     137 10.3   76     6  20              0
52     NA     150  6.3   77     6  21              0
53     NA      59  1.7   76     6  22              0
54     NA      91  4.6   76     6  23              0
55     NA     250  6.3   76     6  24              0
56     NA     135  8.0   75     6  25              0
57     NA     127  8.0   78     6  26              0
58     NA      47 10.3   73     6  27              0
59     NA      98 11.5   80     6  28              0
60     NA      31 14.9   77     6  29              0
61     NA     138  8.0   83     6  30              0
62    135     269  4.1   84     7   1              0
63     49     248  9.2   85     7   2              0
64     32     236  9.2   81     7   3              0
65     NA     101 10.9   84     7   4              0
66     64     175  4.6   83     7   5              0
67     40     314 10.9   83     7   6              0
68     77     276  5.1   88     7   7              0
69     97     267  6.3   92     7   8              0
70     97     272  5.7   92     7   9              0
71     85     175  7.4   89     7  10              0
72     NA     139  8.6   82     7  11              0
73     10     264 14.3   73     7  12              0
74     27     175 14.9   81     7  13              0
75     NA     291 14.9   91     7  14              0
76      7      48 14.3   80     7  15              0
77     48     260  6.9   81     7  16              0
78     35     274 10.3   82     7  17              0
79     61     285  6.3   84     7  18              0
80     79     187  5.1   87     7  19              0
81     63     220 11.5   85     7  20              0
82     16       7  6.9   74     7  21              0
83     NA     258  9.7   81     7  22              0
84     NA     295 11.5   82     7  23              0
85     80     294  8.6   86     7  24              0
86    108     223  8.0   85     7  25              0
87     20      81  8.6   82     7  26              0
88     52      82 12.0   86     7  27              0
89     82     213  7.4   88     7  28              0
90     50     275  7.4   86     7  29              0
91     64     253  7.4   83     7  30              0
92     59     254  9.2   81     7  31              0
93     39      83  6.9   81     8   1              0
94      9      24 13.8   81     8   2              0
95     16      77  7.4   82     8   3              0
96     78      NA  6.9   86     8   4              1
97     35      NA  7.4   85     8   5              1
98     66      NA  4.6   87     8   6              1
99    122     255  4.0   89     8   7              0
100    89     229 10.3   90     8   8              0
101   110     207  8.0   90     8   9              0
102    NA     222  8.6   92     8  10              0
103    NA     137 11.5   86     8  11              0
104    44     192 11.5   86     8  12              0
105    28     273 11.5   82     8  13              0
106    65     157  9.7   80     8  14              0
107    NA      64 11.5   79     8  15              0
108    22      71 10.3   77     8  16              0
109    59      51  6.3   79     8  17              0
110    23     115  7.4   76     8  18              0
111    31     244 10.9   78     8  19              0
112    44     190 10.3   78     8  20              0
113    21     259 15.5   77     8  21              0
114     9      36 14.3   72     8  22              0
115    NA     255 12.6   75     8  23              0
116    45     212  9.7   79     8  24              0
117   168     238  3.4   81     8  25              0
118    73     215  8.0   86     8  26              0
119    NA     153  5.7   88     8  27              0
120    76     203  9.7   97     8  28              0
121   118     225  2.3   94     8  29              0
122    84     237  6.3   96     8  30              0
123    85     188  6.3   94     8  31              0
124    96     167  6.9   91     9   1              0
125    78     197  5.1   92     9   2              0
126    73     183  2.8   93     9   3              0
127    91     189  4.6   93     9   4              0
128    47      95  7.4   87     9   5              0
129    32      92 15.5   84     9   6              0
130    20     252 10.9   80     9   7              0
131    23     220 10.3   78     9   8              0
132    21     230 10.9   75     9   9              0
133    24     259  9.7   73     9  10              0
134    44     236 14.9   81     9  11              0
135    21     259 15.5   76     9  12              0
136    28     238  6.3   77     9  13              0
137     9      24 10.9   71     9  14              0
138    13     112 11.5   71     9  15              0
139    46     237  6.9   78     9  16              0
140    18     224 13.8   67     9  17              0
141    13      27 10.3   76     9  18              0
142    24     238 10.3   68     9  19              0
143    16     201  8.0   82     9  20              0
144    13     238 12.6   64     9  21              0
145    23      14  9.2   71     9  22              0
146    36     139 10.3   81     9  23              0
147     7      49 10.3   69     9  24              0
148    14      20 16.6   63     9  25              0
149    30     193  6.9   70     9  26              0
150    NA     145 13.2   77     9  27              0
151    14     191 14.3   75     9  28              0
152    18     131  8.0   76     9  29              0
153    20     223 11.5   68     9  30              0
> 
> airquality %>% add_prop_miss(Solar.R, Ozone)
    Ozone Solar.R Wind Temp Month Day prop_miss_vars
1      41     190  7.4   67     5   1            0.0
2      36     118  8.0   72     5   2            0.0
3      12     149 12.6   74     5   3            0.0
4      18     313 11.5   62     5   4            0.0
5      NA      NA 14.3   56     5   5            1.0
6      28      NA 14.9   66     5   6            0.5
7      23     299  8.6   65     5   7            0.0
8      19      99 13.8   59     5   8            0.0
9       8      19 20.1   61     5   9            0.0
10     NA     194  8.6   69     5  10            0.5
11      7      NA  6.9   74     5  11            0.5
12     16     256  9.7   69     5  12            0.0
13     11     290  9.2   66     5  13            0.0
14     14     274 10.9   68     5  14            0.0
15     18      65 13.2   58     5  15            0.0
16     14     334 11.5   64     5  16            0.0
17     34     307 12.0   66     5  17            0.0
18      6      78 18.4   57     5  18            0.0
19     30     322 11.5   68     5  19            0.0
20     11      44  9.7   62     5  20            0.0
21      1       8  9.7   59     5  21            0.0
22     11     320 16.6   73     5  22            0.0
23      4      25  9.7   61     5  23            0.0
24     32      92 12.0   61     5  24            0.0
25     NA      66 16.6   57     5  25            0.5
26     NA     266 14.9   58     5  26            0.5
27     NA      NA  8.0   57     5  27            1.0
28     23      13 12.0   67     5  28            0.0
29     45     252 14.9   81     5  29            0.0
30    115     223  5.7   79     5  30            0.0
31     37     279  7.4   76     5  31            0.0
32     NA     286  8.6   78     6   1            0.5
33     NA     287  9.7   74     6   2            0.5
34     NA     242 16.1   67     6   3            0.5
35     NA     186  9.2   84     6   4            0.5
36     NA     220  8.6   85     6   5            0.5
37     NA     264 14.3   79     6   6            0.5
38     29     127  9.7   82     6   7            0.0
39     NA     273  6.9   87     6   8            0.5
40     71     291 13.8   90     6   9            0.0
41     39     323 11.5   87     6  10            0.0
42     NA     259 10.9   93     6  11            0.5
43     NA     250  9.2   92     6  12            0.5
44     23     148  8.0   82     6  13            0.0
45     NA     332 13.8   80     6  14            0.5
46     NA     322 11.5   79     6  15            0.5
47     21     191 14.9   77     6  16            0.0
48     37     284 20.7   72     6  17            0.0
49     20      37  9.2   65     6  18            0.0
50     12     120 11.5   73     6  19            0.0
51     13     137 10.3   76     6  20            0.0
52     NA     150  6.3   77     6  21            0.5
53     NA      59  1.7   76     6  22            0.5
54     NA      91  4.6   76     6  23            0.5
55     NA     250  6.3   76     6  24            0.5
56     NA     135  8.0   75     6  25            0.5
57     NA     127  8.0   78     6  26            0.5
58     NA      47 10.3   73     6  27            0.5
59     NA      98 11.5   80     6  28            0.5
60     NA      31 14.9   77     6  29            0.5
61     NA     138  8.0   83     6  30            0.5
62    135     269  4.1   84     7   1            0.0
63     49     248  9.2   85     7   2            0.0
64     32     236  9.2   81     7   3            0.0
65     NA     101 10.9   84     7   4            0.5
66     64     175  4.6   83     7   5            0.0
67     40     314 10.9   83     7   6            0.0
68     77     276  5.1   88     7   7            0.0
69     97     267  6.3   92     7   8            0.0
70     97     272  5.7   92     7   9            0.0
71     85     175  7.4   89     7  10            0.0
72     NA     139  8.6   82     7  11            0.5
73     10     264 14.3   73     7  12            0.0
74     27     175 14.9   81     7  13            0.0
75     NA     291 14.9   91     7  14            0.5
76      7      48 14.3   80     7  15            0.0
77     48     260  6.9   81     7  16            0.0
78     35     274 10.3   82     7  17            0.0
79     61     285  6.3   84     7  18            0.0
80     79     187  5.1   87     7  19            0.0
81     63     220 11.5   85     7  20            0.0
82     16       7  6.9   74     7  21            0.0
83     NA     258  9.7   81     7  22            0.5
84     NA     295 11.5   82     7  23            0.5
85     80     294  8.6   86     7  24            0.0
86    108     223  8.0   85     7  25            0.0
87     20      81  8.6   82     7  26            0.0
88     52      82 12.0   86     7  27            0.0
89     82     213  7.4   88     7  28            0.0
90     50     275  7.4   86     7  29            0.0
91     64     253  7.4   83     7  30            0.0
92     59     254  9.2   81     7  31            0.0
93     39      83  6.9   81     8   1            0.0
94      9      24 13.8   81     8   2            0.0
95     16      77  7.4   82     8   3            0.0
96     78      NA  6.9   86     8   4            0.5
97     35      NA  7.4   85     8   5            0.5
98     66      NA  4.6   87     8   6            0.5
99    122     255  4.0   89     8   7            0.0
100    89     229 10.3   90     8   8            0.0
101   110     207  8.0   90     8   9            0.0
102    NA     222  8.6   92     8  10            0.5
103    NA     137 11.5   86     8  11            0.5
104    44     192 11.5   86     8  12            0.0
105    28     273 11.5   82     8  13            0.0
106    65     157  9.7   80     8  14            0.0
107    NA      64 11.5   79     8  15            0.5
108    22      71 10.3   77     8  16            0.0
109    59      51  6.3   79     8  17            0.0
110    23     115  7.4   76     8  18            0.0
111    31     244 10.9   78     8  19            0.0
112    44     190 10.3   78     8  20            0.0
113    21     259 15.5   77     8  21            0.0
114     9      36 14.3   72     8  22            0.0
115    NA     255 12.6   75     8  23            0.5
116    45     212  9.7   79     8  24            0.0
117   168     238  3.4   81     8  25            0.0
118    73     215  8.0   86     8  26            0.0
119    NA     153  5.7   88     8  27            0.5
120    76     203  9.7   97     8  28            0.0
121   118     225  2.3   94     8  29            0.0
122    84     237  6.3   96     8  30            0.0
123    85     188  6.3   94     8  31            0.0
124    96     167  6.9   91     9   1            0.0
125    78     197  5.1   92     9   2            0.0
126    73     183  2.8   93     9   3            0.0
127    91     189  4.6   93     9   4            0.0
128    47      95  7.4   87     9   5            0.0
129    32      92 15.5   84     9   6            0.0
130    20     252 10.9   80     9   7            0.0
131    23     220 10.3   78     9   8            0.0
132    21     230 10.9   75     9   9            0.0
133    24     259  9.7   73     9  10            0.0
134    44     236 14.9   81     9  11            0.0
135    21     259 15.5   76     9  12            0.0
136    28     238  6.3   77     9  13            0.0
137     9      24 10.9   71     9  14            0.0
138    13     112 11.5   71     9  15            0.0
139    46     237  6.9   78     9  16            0.0
140    18     224 13.8   67     9  17            0.0
141    13      27 10.3   76     9  18            0.0
142    24     238 10.3   68     9  19            0.0
143    16     201  8.0   82     9  20            0.0
144    13     238 12.6   64     9  21            0.0
145    23      14  9.2   71     9  22            0.0
146    36     139 10.3   81     9  23            0.0
147     7      49 10.3   69     9  24            0.0
148    14      20 16.6   63     9  25            0.0
149    30     193  6.9   70     9  26            0.0
150    NA     145 13.2   77     9  27            0.5
151    14     191 14.3   75     9  28            0.0
152    18     131  8.0   76     9  29            0.0
153    20     223 11.5   68     9  30            0.0
> 
> airquality %>% add_prop_miss(Solar.R, Ozone, label = "testing")
    Ozone Solar.R Wind Temp Month Day testing_vars
1      41     190  7.4   67     5   1          0.0
2      36     118  8.0   72     5   2          0.0
3      12     149 12.6   74     5   3          0.0
4      18     313 11.5   62     5   4          0.0
5      NA      NA 14.3   56     5   5          1.0
6      28      NA 14.9   66     5   6          0.5
7      23     299  8.6   65     5   7          0.0
8      19      99 13.8   59     5   8          0.0
9       8      19 20.1   61     5   9          0.0
10     NA     194  8.6   69     5  10          0.5
11      7      NA  6.9   74     5  11          0.5
12     16     256  9.7   69     5  12          0.0
13     11     290  9.2   66     5  13          0.0
14     14     274 10.9   68     5  14          0.0
15     18      65 13.2   58     5  15          0.0
16     14     334 11.5   64     5  16          0.0
17     34     307 12.0   66     5  17          0.0
18      6      78 18.4   57     5  18          0.0
19     30     322 11.5   68     5  19          0.0
20     11      44  9.7   62     5  20          0.0
21      1       8  9.7   59     5  21          0.0
22     11     320 16.6   73     5  22          0.0
23      4      25  9.7   61     5  23          0.0
24     32      92 12.0   61     5  24          0.0
25     NA      66 16.6   57     5  25          0.5
26     NA     266 14.9   58     5  26          0.5
27     NA      NA  8.0   57     5  27          1.0
28     23      13 12.0   67     5  28          0.0
29     45     252 14.9   81     5  29          0.0
30    115     223  5.7   79     5  30          0.0
31     37     279  7.4   76     5  31          0.0
32     NA     286  8.6   78     6   1          0.5
33     NA     287  9.7   74     6   2          0.5
34     NA     242 16.1   67     6   3          0.5
35     NA     186  9.2   84     6   4          0.5
36     NA     220  8.6   85     6   5          0.5
37     NA     264 14.3   79     6   6          0.5
38     29     127  9.7   82     6   7          0.0
39     NA     273  6.9   87     6   8          0.5
40     71     291 13.8   90     6   9          0.0
41     39     323 11.5   87     6  10          0.0
42     NA     259 10.9   93     6  11          0.5
43     NA     250  9.2   92     6  12          0.5
44     23     148  8.0   82     6  13          0.0
45     NA     332 13.8   80     6  14          0.5
46     NA     322 11.5   79     6  15          0.5
47     21     191 14.9   77     6  16          0.0
48     37     284 20.7   72     6  17          0.0
49     20      37  9.2   65     6  18          0.0
50     12     120 11.5   73     6  19          0.0
51     13     137 10.3   76     6  20          0.0
52     NA     150  6.3   77     6  21          0.5
53     NA      59  1.7   76     6  22          0.5
54     NA      91  4.6   76     6  23          0.5
55     NA     250  6.3   76     6  24          0.5
56     NA     135  8.0   75     6  25          0.5
57     NA     127  8.0   78     6  26          0.5
58     NA      47 10.3   73     6  27          0.5
59     NA      98 11.5   80     6  28          0.5
60     NA      31 14.9   77     6  29          0.5
61     NA     138  8.0   83     6  30          0.5
62    135     269  4.1   84     7   1          0.0
63     49     248  9.2   85     7   2          0.0
64     32     236  9.2   81     7   3          0.0
65     NA     101 10.9   84     7   4          0.5
66     64     175  4.6   83     7   5          0.0
67     40     314 10.9   83     7   6          0.0
68     77     276  5.1   88     7   7          0.0
69     97     267  6.3   92     7   8          0.0
70     97     272  5.7   92     7   9          0.0
71     85     175  7.4   89     7  10          0.0
72     NA     139  8.6   82     7  11          0.5
73     10     264 14.3   73     7  12          0.0
74     27     175 14.9   81     7  13          0.0
75     NA     291 14.9   91     7  14          0.5
76      7      48 14.3   80     7  15          0.0
77     48     260  6.9   81     7  16          0.0
78     35     274 10.3   82     7  17          0.0
79     61     285  6.3   84     7  18          0.0
80     79     187  5.1   87     7  19          0.0
81     63     220 11.5   85     7  20          0.0
82     16       7  6.9   74     7  21          0.0
83     NA     258  9.7   81     7  22          0.5
84     NA     295 11.5   82     7  23          0.5
85     80     294  8.6   86     7  24          0.0
86    108     223  8.0   85     7  25          0.0
87     20      81  8.6   82     7  26          0.0
88     52      82 12.0   86     7  27          0.0
89     82     213  7.4   88     7  28          0.0
90     50     275  7.4   86     7  29          0.0
91     64     253  7.4   83     7  30          0.0
92     59     254  9.2   81     7  31          0.0
93     39      83  6.9   81     8   1          0.0
94      9      24 13.8   81     8   2          0.0
95     16      77  7.4   82     8   3          0.0
96     78      NA  6.9   86     8   4          0.5
97     35      NA  7.4   85     8   5          0.5
98     66      NA  4.6   87     8   6          0.5
99    122     255  4.0   89     8   7          0.0
100    89     229 10.3   90     8   8          0.0
101   110     207  8.0   90     8   9          0.0
102    NA     222  8.6   92     8  10          0.5
103    NA     137 11.5   86     8  11          0.5
104    44     192 11.5   86     8  12          0.0
105    28     273 11.5   82     8  13          0.0
106    65     157  9.7   80     8  14          0.0
107    NA      64 11.5   79     8  15          0.5
108    22      71 10.3   77     8  16          0.0
109    59      51  6.3   79     8  17          0.0
110    23     115  7.4   76     8  18          0.0
111    31     244 10.9   78     8  19          0.0
112    44     190 10.3   78     8  20          0.0
113    21     259 15.5   77     8  21          0.0
114     9      36 14.3   72     8  22          0.0
115    NA     255 12.6   75     8  23          0.5
116    45     212  9.7   79     8  24          0.0
117   168     238  3.4   81     8  25          0.0
118    73     215  8.0   86     8  26          0.0
119    NA     153  5.7   88     8  27          0.5
120    76     203  9.7   97     8  28          0.0
121   118     225  2.3   94     8  29          0.0
122    84     237  6.3   96     8  30          0.0
123    85     188  6.3   94     8  31          0.0
124    96     167  6.9   91     9   1          0.0
125    78     197  5.1   92     9   2          0.0
126    73     183  2.8   93     9   3          0.0
127    91     189  4.6   93     9   4          0.0
128    47      95  7.4   87     9   5          0.0
129    32      92 15.5   84     9   6          0.0
130    20     252 10.9   80     9   7          0.0
131    23     220 10.3   78     9   8          0.0
132    21     230 10.9   75     9   9          0.0
133    24     259  9.7   73     9  10          0.0
134    44     236 14.9   81     9  11          0.0
135    21     259 15.5   76     9  12          0.0
136    28     238  6.3   77     9  13          0.0
137     9      24 10.9   71     9  14          0.0
138    13     112 11.5   71     9  15          0.0
139    46     237  6.9   78     9  16          0.0
140    18     224 13.8   67     9  17          0.0
141    13      27 10.3   76     9  18          0.0
142    24     238 10.3   68     9  19          0.0
143    16     201  8.0   82     9  20          0.0
144    13     238 12.6   64     9  21          0.0
145    23      14  9.2   71     9  22          0.0
146    36     139 10.3   81     9  23          0.0
147     7      49 10.3   69     9  24          0.0
148    14      20 16.6   63     9  25          0.0
149    30     193  6.9   70     9  26          0.0
150    NA     145 13.2   77     9  27          0.5
151    14     191 14.3   75     9  28          0.0
152    18     131  8.0   76     9  29          0.0
153    20     223 11.5   68     9  30          0.0
> 
> # this can be applied to model the proportion of missing data
> # as in Tierney et al (doi: 10.1136/bmjopen-2014-007450)
> library(rpart)
> library(rpart.plot)
> 
> airquality %>%
+ add_prop_miss() %>%
+ rpart(prop_miss_all ~ ., data = ., model = TRUE) %>%
+ prp(type = 4,
+     extra = 101,
+     prefix = "prop_miss = ")
> 
> 
> 
> cleanEx()

detaching â€˜package:rpart.plotâ€™, â€˜package:rpartâ€™

> nameEx("add_shadow")
> ### * add_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_shadow
> ### Title: Add a shadow column to dataframe
> ### Aliases: add_shadow
> 
> ### ** Examples
> 
> 
> airquality %>% add_shadow(Ozone)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m   
[90m 1[39m    41     190   7.4    67     5     1 !NA     
[90m 2[39m    36     118   8      72     5     2 !NA     
[90m 3[39m    12     149  12.6    74     5     3 !NA     
[90m 4[39m    18     313  11.5    62     5     4 !NA     
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA      
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA     
[90m 7[39m    23     299   8.6    65     5     7 !NA     
[90m 8[39m    19      99  13.8    59     5     8 !NA     
[90m 9[39m     8      19  20.1    61     5     9 !NA     
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA      
[90m# â€¦ with 143 more rows[39m
> airquality %>% add_shadow(Ozone, Solar.R)
[90m# A tibble: 153 x 8[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m     
[90m 1[39m    41     190   7.4    67     5     1 !NA      !NA       
[90m 2[39m    36     118   8      72     5     2 !NA      !NA       
[90m 3[39m    12     149  12.6    74     5     3 !NA      !NA       
[90m 4[39m    18     313  11.5    62     5     4 !NA      !NA       
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA       NA        
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA      NA        
[90m 7[39m    23     299   8.6    65     5     7 !NA      !NA       
[90m 8[39m    19      99  13.8    59     5     8 !NA      !NA       
[90m 9[39m     8      19  20.1    61     5     9 !NA      !NA       
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA       !NA       
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("add_shadow_shift")
> ### * add_shadow_shift
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_shadow_shift
> ### Title: Add a shadow shifted column to a dataset
> ### Aliases: add_shadow_shift
> 
> ### ** Examples
> 
> 
> pedestrian %>% add_shadow_shift(hourly_counts)
[90m# A tibble: 37,700 x 10[39m
   hourly_counts date_time            year month month_day week_day  hour
           [3m[90m<int>[39m[23m [3m[90m<dttm>[39m[23m              [3m[90m<int>[39m[23m [3m[90m<ord>[39m[23m     [3m[90m<int>[39m[23m [3m[90m<ord>[39m[23m    [3m[90m<int>[39m[23m
[90m 1[39m           883 2016-01-01 [90m00:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       0
[90m 2[39m           597 2016-01-01 [90m01:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       1
[90m 3[39m           294 2016-01-01 [90m02:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       2
[90m 4[39m           183 2016-01-01 [90m03:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       3
[90m 5[39m           118 2016-01-01 [90m04:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       4
[90m 6[39m            68 2016-01-01 [90m05:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       5
[90m 7[39m            47 2016-01-01 [90m06:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       6
[90m 8[39m            52 2016-01-01 [90m07:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       7
[90m 9[39m           120 2016-01-01 [90m08:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       8
[90m10[39m           333 2016-01-01 [90m09:00:00[39m  [4m2[24m016 Januâ€¦         1 Friday       9
[90m# â€¦ with 37,690 more rows, and 3 more variables: sensor_id [3m[90m<int>[90m[23m,[39m
[90m#   sensor_name [3m[90m<chr>[90m[23m, hourly_counts_shift [3m[90m<dbl>[90m[23m[39m
> 
> airquality %>% add_shadow_shift(Ozone, Solar.R)
[90m# A tibble: 153 x 8[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_shift Solar.R_shift
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m       [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1        41           190  
[90m 2[39m    36     118   8      72     5     2        36           118  
[90m 3[39m    12     149  12.6    74     5     3        12           149  
[90m 4[39m    18     313  11.5    62     5     4        18           313  
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5       -[31m19[39m[31m.[39m[31m7[39m         -[31m33[39m[31m.[39m[31m6[39m
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6        28           -[31m33[39m[31m.[39m[31m1[39m
[90m 7[39m    23     299   8.6    65     5     7        23           299  
[90m 8[39m    19      99  13.8    59     5     8        19            99  
[90m 9[39m     8      19  20.1    61     5     9         8            19  
[90m10[39m    [31mNA[39m     194   8.6    69     5    10       -[31m18[39m[31m.[39m[31m5[39m         194  
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("add_span_counter")
> ### * add_span_counter
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_span_counter
> ### Title: Add a counter variable for a span of dataframe
> ### Aliases: add_span_counter
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # add_span_counter(pedestrian, span_size = 100)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("all-is-miss-complete")
> ### * all-is-miss-complete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: all-is-miss-complete
> ### Title: Identify if all values are missing or complete
> ### Aliases: all-is-miss-complete all_na all_miss all_complete
> 
> ### ** Examples
> 
> 
> misses <- c(NA, NA, NA)
> complete <- c(1, 2, 3)
> mixture <- c(NA, 1, NA)
> 
> all_na(misses)
[1] TRUE
> all_na(complete)
[1] FALSE
> all_na(mixture)
[1] FALSE
> all_complete(misses)
[1] FALSE
> all_complete(complete)
[1] TRUE
> all_complete(mixture)
[1] FALSE
> 
> 
> 
> 
> cleanEx()
> nameEx("any-na")
> ### * any-na
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: any-na
> ### Title: Identify if there are any missing or complete values
> ### Aliases: any-na any_na any_miss any_complete
> 
> ### ** Examples
> 
> 
> anyNA(airquality)
[1] TRUE
> any_na(airquality)
[1] TRUE
> any_miss(airquality)
[1] TRUE
> any_complete(airquality)
[1] TRUE
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("as_shadow.data.frame")
> ### * as_shadow.data.frame
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as_shadow.data.frame
> ### Title: Create shadow data
> ### Aliases: as_shadow.data.frame
> 
> ### ** Examples
> 
> 
> as_shadow(airquality)
[90m# A tibble: 153 x 6[39m
   Ozone_NA Solar.R_NA Wind_NA Temp_NA Month_NA Day_NA
   [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m 
[90m 1[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 2[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 3[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 4[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 5[39m NA       NA         !NA     !NA     !NA      !NA   
[90m 6[39m !NA      NA         !NA     !NA     !NA      !NA   
[90m 7[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 8[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 9[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m10[39m NA       !NA        !NA     !NA     !NA      !NA   
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("as_shadow_upset")
> ### * as_shadow_upset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as_shadow_upset
> ### Title: Convert data into shadow format for doing an upset plot
> ### Aliases: as_shadow_upset
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D 
> ##D library(UpSetR)
> ##D airquality %>%
> ##D   as_shadow_upset() %>%
> ##D   upset()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("bind_shadow")
> ### * bind_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bind_shadow
> ### Title: Bind a shadow dataframe to original data
> ### Aliases: bind_shadow
> 
> ### ** Examples
> 
> 
> bind_shadow(airquality)
[90m# A tibble: 153 x 12[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA Wind_NA Temp_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m  
[90m 1[39m    41     190   7.4    67     5     1 !NA      !NA        !NA     !NA    
[90m 2[39m    36     118   8      72     5     2 !NA      !NA        !NA     !NA    
[90m 3[39m    12     149  12.6    74     5     3 !NA      !NA        !NA     !NA    
[90m 4[39m    18     313  11.5    62     5     4 !NA      !NA        !NA     !NA    
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA       NA         !NA     !NA    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA      NA         !NA     !NA    
[90m 7[39m    23     299   8.6    65     5     7 !NA      !NA        !NA     !NA    
[90m 8[39m    19      99  13.8    59     5     8 !NA      !NA        !NA     !NA    
[90m 9[39m     8      19  20.1    61     5     9 !NA      !NA        !NA     !NA    
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA       !NA        !NA     !NA    
[90m# â€¦ with 143 more rows, and 2 more variables: Month_NA [3m[90m<fct>[90m[23m, Day_NA [3m[90m<fct>[90m[23m[39m
> 
> # bind only the variables that contain missing values
> bind_shadow(airquality, only_miss = TRUE)
[90m# A tibble: 153 x 8[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m     
[90m 1[39m    41     190   7.4    67     5     1 !NA      !NA       
[90m 2[39m    36     118   8      72     5     2 !NA      !NA       
[90m 3[39m    12     149  12.6    74     5     3 !NA      !NA       
[90m 4[39m    18     313  11.5    62     5     4 !NA      !NA       
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA       NA        
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA      NA        
[90m 7[39m    23     299   8.6    65     5     7 !NA      !NA       
[90m 8[39m    19      99  13.8    59     5     8 !NA      !NA       
[90m 9[39m     8      19  20.1    61     5     9 !NA      !NA       
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA       !NA       
[90m# â€¦ with 143 more rows[39m
> 
> aq_shadow <- bind_shadow(airquality)
> 
> # explore missing data visually
> library(ggplot2)
> 
> # using the bounded shadow to visualise Ozone according to whether Solar
> # Radiation is missing or not.
> 
> ggplot(data = aq_shadow,
+        aes(x = Ozone)) +
+        geom_histogram() +
+        facet_wrap(~Solar.R_NA,
+        ncol = 1)
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Removed 37 rows containing non-finite values (stat_bin).
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("cast_shadow")
> ### * cast_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cast_shadow
> ### Title: Add a shadow column to a dataset
> ### Aliases: cast_shadow
> 
> ### ** Examples
> 
> 
> airquality %>% cast_shadow(Ozone)
[90m# A tibble: 153 x 2[39m
   Ozone Ozone_NA
   [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m   
[90m 1[39m    41 !NA     
[90m 2[39m    36 !NA     
[90m 3[39m    12 !NA     
[90m 4[39m    18 !NA     
[90m 5[39m    [31mNA[39m NA      
[90m 6[39m    28 !NA     
[90m 7[39m    23 !NA     
[90m 8[39m    19 !NA     
[90m 9[39m     8 !NA     
[90m10[39m    [31mNA[39m NA      
[90m# â€¦ with 143 more rows[39m
> airquality %>% cast_shadow(Ozone, Solar.R)
[90m# A tibble: 153 x 4[39m
   Ozone Solar.R Ozone_NA Solar.R_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m     
[90m 1[39m    41     190 !NA      !NA       
[90m 2[39m    36     118 !NA      !NA       
[90m 3[39m    12     149 !NA      !NA       
[90m 4[39m    18     313 !NA      !NA       
[90m 5[39m    [31mNA[39m      [31mNA[39m NA       NA        
[90m 6[39m    28      [31mNA[39m !NA      NA        
[90m 7[39m    23     299 !NA      !NA       
[90m 8[39m    19      99 !NA      !NA       
[90m 9[39m     8      19 !NA      !NA       
[90m10[39m    [31mNA[39m     194 NA       !NA       
[90m# â€¦ with 143 more rows[39m
> library(ggplot2)
> library(magrittr)
> airquality  %>%
+   cast_shadow(Ozone,Solar.R) %>%
+   ggplot(aes(x = Ozone,
+              colour = Solar.R_NA)) +
+         geom_density()
Warning: Removed 37 rows containing non-finite values (stat_density).
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:magrittrâ€™, â€˜package:ggplot2â€™

> nameEx("cast_shadow_shift")
> ### * cast_shadow_shift
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cast_shadow_shift
> ### Title: Add a shadow and a shadow_shift column to a dataset
> ### Aliases: cast_shadow_shift
> 
> ### ** Examples
> 
> 
> airquality %>% cast_shadow_shift(Ozone)
[90m# A tibble: 153 x 3[39m
   Ozone Ozone_NA Ozone_shift
   [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m          [3m[90m<dbl>[39m[23m
[90m 1[39m    41 !NA             41  
[90m 2[39m    36 !NA             36  
[90m 3[39m    12 !NA             12  
[90m 4[39m    18 !NA             18  
[90m 5[39m    [31mNA[39m NA             -[31m19[39m[31m.[39m[31m7[39m
[90m 6[39m    28 !NA             28  
[90m 7[39m    23 !NA             23  
[90m 8[39m    19 !NA             19  
[90m 9[39m     8 !NA              8  
[90m10[39m    [31mNA[39m NA             -[31m18[39m[31m.[39m[31m5[39m
[90m# â€¦ with 143 more rows[39m
> airquality %>% cast_shadow_shift(Ozone,Temp)
[90m# A tibble: 153 x 6[39m
   Ozone  Temp Ozone_NA Temp_NA Ozone_shift Temp_shift
   [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m         [3m[90m<dbl>[39m[23m      [3m[90m<int>[39m[23m
[90m 1[39m    41    67 !NA      !NA            41           67
[90m 2[39m    36    72 !NA      !NA            36           72
[90m 3[39m    12    74 !NA      !NA            12           74
[90m 4[39m    18    62 !NA      !NA            18           62
[90m 5[39m    [31mNA[39m    56 NA       !NA           -[31m19[39m[31m.[39m[31m7[39m         56
[90m 6[39m    28    66 !NA      !NA            28           66
[90m 7[39m    23    65 !NA      !NA            23           65
[90m 8[39m    19    59 !NA      !NA            19           59
[90m 9[39m     8    61 !NA      !NA             8           61
[90m10[39m    [31mNA[39m    69 NA       !NA           -[31m18[39m[31m.[39m[31m5[39m         69
[90m# â€¦ with 143 more rows[39m
> 
> airquality %>% cast_shadow_shift(dplyr::contains("o"))
[90m# A tibble: 153 x 12[39m
   Ozone Solar.R Month Ozone_NA Solar.R_NA Month_NA Ozone_shift Solar.R_shift
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m          [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m
[90m 1[39m    41     190     5 !NA      !NA        !NA             41           190  
[90m 2[39m    36     118     5 !NA      !NA        !NA             36           118  
[90m 3[39m    12     149     5 !NA      !NA        !NA             12           149  
[90m 4[39m    18     313     5 !NA      !NA        !NA             18           313  
[90m 5[39m    [31mNA[39m      [31mNA[39m     5 NA       NA         !NA            -[31m19[39m[31m.[39m[31m7[39m         -[31m33[39m[31m.[39m[31m6[39m
[90m 6[39m    28      [31mNA[39m     5 !NA      NA         !NA             28           -[31m33[39m[31m.[39m[31m1[39m
[90m 7[39m    23     299     5 !NA      !NA        !NA             23           299  
[90m 8[39m    19      99     5 !NA      !NA        !NA             19            99  
[90m 9[39m     8      19     5 !NA      !NA        !NA              8            19  
[90m10[39m    [31mNA[39m     194     5 NA       !NA        !NA            -[31m18[39m[31m.[39m[31m5[39m         194  
[90m# â€¦ with 143 more rows, and 4 more variables: Month_shift [3m[90m<int>[90m[23m,[39m
[90m#   Ozone_NA_shift [3m[90m<fct>[90m[23m, Solar.R_NA_shift [3m[90m<fct>[90m[23m, Month_NA_shift [3m[90m<fct>[90m[23m[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("cast_shadow_shift_label")
> ### * cast_shadow_shift_label
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cast_shadow_shift_label
> ### Title: Add a shadow column and a shadow shifted column to a dataset
> ### Aliases: cast_shadow_shift_label
> 
> ### ** Examples
> 
> 
> airquality %>% cast_shadow_shift_label(Ozone)
[90m# A tibble: 153 x 4[39m
   Ozone Ozone_NA Ozone_shift any_missing
   [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m          [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41 !NA             41   Not Missing
[90m 2[39m    36 !NA             36   Not Missing
[90m 3[39m    12 !NA             12   Not Missing
[90m 4[39m    18 !NA             18   Not Missing
[90m 5[39m    [31mNA[39m NA             -[31m19[39m[31m.[39m[31m7[39m Missing    
[90m 6[39m    28 !NA             28   Not Missing
[90m 7[39m    23 !NA             23   Not Missing
[90m 8[39m    19 !NA             19   Not Missing
[90m 9[39m     8 !NA              8   Not Missing
[90m10[39m    [31mNA[39m NA             -[31m18[39m[31m.[39m[31m5[39m Missing    
[90m# â€¦ with 143 more rows[39m
> airquality %>% cast_shadow_shift_label(Ozone, Solar.R)
[90m# A tibble: 153 x 7[39m
   Ozone Solar.R Ozone_NA Solar.R_NA Ozone_shift Solar.R_shift any_missing
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m            [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m    41     190 !NA      !NA               41           190   Not Missing
[90m 2[39m    36     118 !NA      !NA               36           118   Not Missing
[90m 3[39m    12     149 !NA      !NA               12           149   Not Missing
[90m 4[39m    18     313 !NA      !NA               18           313   Not Missing
[90m 5[39m    [31mNA[39m      [31mNA[39m NA       NA               -[31m19[39m[31m.[39m[31m7[39m         -[31m33[39m[31m.[39m[31m6[39m Missing    
[90m 6[39m    28      [31mNA[39m !NA      NA                28           -[31m33[39m[31m.[39m[31m1[39m Missing    
[90m 7[39m    23     299 !NA      !NA               23           299   Not Missing
[90m 8[39m    19      99 !NA      !NA               19            99   Not Missing
[90m 9[39m     8      19 !NA      !NA                8            19   Not Missing
[90m10[39m    [31mNA[39m     194 NA       !NA              -[31m18[39m[31m.[39m[31m5[39m         194   Missing    
[90m# â€¦ with 143 more rows[39m
> 
> # replicate the plot generated by geom_miss_point()
> 
> library(ggplot2)
> 
> airquality %>%
+   cast_shadow_shift_label(Ozone,Solar.R) %>%
+   ggplot(aes(x = Ozone_shift,
+              y = Solar.R_shift,
+              colour = any_missing)) +
+         geom_point()
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("common_na_numbers")
> ### * common_na_numbers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: common_na_numbers
> ### Title: Common number values for NA
> ### Aliases: common_na_numbers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                           1,   "A",   -100,
+                           3,   "N/A", -99,
+                           NA,  NA,    -98,
+                           -99, "E",   -101,
+                           -98, "F",   -1)
> 
> miss_scan_count(dat_ms, -99)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            1
[90m2[39m y            0
[90m3[39m z            1
> miss_scan_count(dat_ms, c(-99,-98))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            0
[90m3[39m z            2
> miss_scan_count(dat_ms, c("-99","-98","N/A"))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            1
[90m3[39m z            2
> common_na_numbers
[1]    -9   -99  -999 -9999  9999    66    77    88
> miss_scan_count(dat_ms, common_na_numbers)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            0
[90m3[39m z            2
> 
> 
> 
> cleanEx()
> nameEx("common_na_strings")
> ### * common_na_strings
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: common_na_strings
> ### Title: Common string values for NA
> ### Aliases: common_na_strings
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                           1,   "A",   -100,
+                           3,   "N/A", -99,
+                           NA,  NA,    -98,
+                           -99, "E",   -101,
+                           -98, "F",   -1)
> 
> miss_scan_count(dat_ms, -99)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            1
[90m2[39m y            0
[90m3[39m z            1
> miss_scan_count(dat_ms, c(-99,-98))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            0
[90m3[39m z            2
> miss_scan_count(dat_ms, c("-99","-98","N/A"))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            1
[90m3[39m z            2
> common_na_numbers
[1]    -9   -99  -999 -9999  9999    66    77    88
> miss_scan_count(dat_ms, common_na_strings)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            4
[90m2[39m y            4
[90m3[39m z            5
> 
> 
> 
> cleanEx()
> nameEx("gather_shadow")
> ### * gather_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gather_shadow
> ### Title: Long form representation of a shadow matrix
> ### Aliases: gather_shadow
> 
> ### ** Examples
> 
> 
> gather_shadow(airquality)
[90m# A tibble: 918 x 3[39m
    case variable missing
   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m    [3m[90m<chr>[39m[23m  
[90m 1[39m     1 Ozone_NA !NA    
[90m 2[39m     2 Ozone_NA !NA    
[90m 3[39m     3 Ozone_NA !NA    
[90m 4[39m     4 Ozone_NA !NA    
[90m 5[39m     5 Ozone_NA NA     
[90m 6[39m     6 Ozone_NA !NA    
[90m 7[39m     7 Ozone_NA !NA    
[90m 8[39m     8 Ozone_NA !NA    
[90m 9[39m     9 Ozone_NA !NA    
[90m10[39m    10 Ozone_NA NA     
[90m# â€¦ with 908 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("geom_miss_point")
> ### * geom_miss_point
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: geom_miss_point
> ### Title: geom_miss_point
> ### Aliases: geom_miss_point
> 
> ### ** Examples
> 
> 
> library(ggplot2)
> 
> # using regular geom_point()
> ggplot(airquality,
+        aes(x = Ozone,
+            y = Solar.R)) +
+ geom_point()
Warning: Removed 42 rows containing missing values (geom_point).
> 
> # using  geom_miss_point()
> ggplot(airquality,
+        aes(x = Ozone,
+            y = Solar.R)) +
+  geom_miss_point()
> 
>  # using facets
> 
> ggplot(airquality,
+        aes(x = Ozone,
+            y = Solar.R)) +
+  geom_miss_point() +
+  facet_wrap(~Month)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_case")
> ### * gg_miss_case
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_case
> ### Title: Plot the number of missings per case (row)
> ### Aliases: gg_miss_case
> 
> ### ** Examples
> 
> 
> gg_miss_case(airquality)
> library(ggplot2)
> gg_miss_case(airquality) + labs(x = "Number of Cases")
> gg_miss_case(airquality, show_pct = TRUE)
> gg_miss_case(airquality, order_cases = FALSE)
> gg_miss_case(airquality, facet = Month)
> gg_miss_case(airquality, facet = Month, order_cases = FALSE)
> gg_miss_case(airquality, facet = Month, show_pct = TRUE)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_case_cumsum")
> ### * gg_miss_case_cumsum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_case_cumsum
> ### Title: Plot of cumulative sum of missing for cases
> ### Aliases: gg_miss_case_cumsum
> 
> ### ** Examples
> 
> 
> gg_miss_case_cumsum(airquality)
> library(ggplot2)
> gg_miss_case_cumsum(riskfactors, breaks = 50) + theme_bw()
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_fct")
> ### * gg_miss_fct
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_fct
> ### Title: Plot the number of missings for each variable, broken down by a
> ###   factor
> ### Aliases: gg_miss_fct
> 
> ### ** Examples
> 
> 
> gg_miss_fct(x = riskfactors, fct = marital)
> library(ggplot2)
> gg_miss_fct(x = riskfactors, fct = marital) + labs(title = "NA in Risk Factors and Marital status")
> 
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_span")
> ### * gg_miss_span
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_span
> ### Title: Plot the number of missings in a given repeating span
> ### Aliases: gg_miss_span
> 
> ### ** Examples
> 
> 
> miss_var_span(pedestrian, hourly_counts, span_every = 3000)
[90m# A tibble: 13 x 5[39m
   span_counter n_miss n_complete prop_miss prop_complete
          [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m      [3m[90m<dbl>[39m[23m     [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m
[90m 1[39m            1      0       [4m3[24m000  0                1    
[90m 2[39m            2      0       [4m3[24m000  0                1    
[90m 3[39m            3      1       [4m2[24m999  0.000[4m3[24m[4m3[24m[4m3[24m         1.00 
[90m 4[39m            4    121       [4m2[24m879  0.040[4m3[24m           0.960
[90m 5[39m            5    503       [4m2[24m497  0.168            0.832
[90m 6[39m            6    555       [4m2[24m445  0.185            0.815
[90m 7[39m            7    190       [4m2[24m810  0.063[4m3[24m           0.937
[90m 8[39m            8      0       [4m3[24m000  0                1    
[90m 9[39m            9      1       [4m2[24m999  0.000[4m3[24m[4m3[24m[4m3[24m         1.00 
[90m10[39m           10      0       [4m3[24m000  0                1    
[90m11[39m           11      0       [4m3[24m000  0                1    
[90m12[39m           12    745       [4m2[24m255  0.248            0.752
[90m13[39m           13    432       [4m2[24m568  0.144            0.856
> library(ggplot2)
> gg_miss_span(pedestrian, hourly_counts, span_every = 3000)
> gg_miss_span(pedestrian, hourly_counts, span_every = 3000, facet = sensor_name)
> # works with the rest of ggplot
> gg_miss_span(pedestrian, hourly_counts, span_every = 3000) + labs(x = "custom")
> gg_miss_span(pedestrian, hourly_counts, span_every = 3000) + theme_dark()
> 
> gg_miss_span(pedestrian, hourly_counts, span_every = 3000, facet = sensor_name)
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_upset")
> ### * gg_miss_upset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_upset
> ### Title: Plot the pattern of missingness using an upset plot.
> ### Aliases: gg_miss_upset
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D gg_miss_upset(airquality)
> ##D gg_miss_upset(riskfactors)
> ##D gg_miss_upset(riskfactors, nsets = 10)
> ##D gg_miss_upset(riskfactors, nsets = 10, nintersects = 10)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("gg_miss_var")
> ### * gg_miss_var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_var
> ### Title: Plot the number of missings for each variable
> ### Aliases: gg_miss_var
> 
> ### ** Examples
> 
> 
> gg_miss_var(airquality)
> library(ggplot2)
> gg_miss_var(airquality) + labs(y = "Look at all the missing ones")
> gg_miss_var(airquality, Month)
> gg_miss_var(airquality, Month, show_pct = TRUE)
> gg_miss_var(airquality, Month, show_pct = TRUE) + ylim(0, 100)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("gg_miss_var_cumsum")
> ### * gg_miss_var_cumsum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_var_cumsum
> ### Title: Plot of cumulative sum of missing value for each variable
> ### Aliases: gg_miss_var_cumsum
> 
> ### ** Examples
> 
> 
> gg_miss_var_cumsum(airquality)
> 
> 
> 
> cleanEx()
> nameEx("gg_miss_which")
> ### * gg_miss_which
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gg_miss_which
> ### Title: Plot which variables contain a missing value
> ### Aliases: gg_miss_which
> 
> ### ** Examples
> 
> 
> gg_miss_which(airquality)
> library(ggplot2)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("group_by_fun")
> ### * group_by_fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: group_by_fun
> ### Title: Group By Helper
> ### Aliases: group_by_fun
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D miss_case_table.grouped_df <- function(data){
> ##D group_by_fun(data,.fun = miss_case_table)
> ##D }
> ##D airquality %>%
> ##D group_by(Month) %>%
> ##D miss_case_table()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("impute_below_all")
> ### * impute_below_all
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_below_all
> ### Title: Impute data with values shifted 10 percent below range.
> ### Aliases: impute_below_all
> 
> ### ** Examples
> 
> 
> # you can impute data like so:
> airquality %>%
+   impute_below_all()
        Ozone   Solar.R Wind Temp Month Day
1    41.00000 190.00000  7.4   67     5   1
2    36.00000 118.00000  8.0   72     5   2
3    12.00000 149.00000 12.6   74     5   3
4    18.00000 313.00000 11.5   62     5   4
5   -19.72321 -33.57778 14.3   56     5   5
6    28.00000 -33.07810 14.9   66     5   6
7    23.00000 299.00000  8.6   65     5   7
8    19.00000  99.00000 13.8   59     5   8
9     8.00000  19.00000 20.1   61     5   9
10  -18.51277 194.00000  8.6   69     5  10
11    7.00000 -21.37719  6.9   74     5  11
12   16.00000 256.00000  9.7   69     5  12
13   11.00000 290.00000  9.2   66     5  13
14   14.00000 274.00000 10.9   68     5  14
15   18.00000  65.00000 13.2   58     5  15
16   14.00000 334.00000 11.5   64     5  16
17   34.00000 307.00000 12.0   66     5  17
18    6.00000  78.00000 18.4   57     5  18
19   30.00000 322.00000 11.5   68     5  19
20   11.00000  44.00000  9.7   62     5  20
21    1.00000   8.00000  9.7   59     5  21
22   11.00000 320.00000 16.6   73     5  22
23    4.00000  25.00000  9.7   61     5  23
24   32.00000  92.00000 12.0   61     5  24
25  -17.81863  66.00000 16.6   57     5  25
26  -19.43853 266.00000 14.9   58     5  26
27  -15.14310 -24.60954  8.0   57     5  27
28   23.00000  13.00000 12.0   67     5  28
29   45.00000 252.00000 14.9   81     5  29
30  115.00000 223.00000  5.7   79     5  30
31   37.00000 279.00000  7.4   76     5  31
32  -16.17315 286.00000  8.6   78     6   1
33  -14.65883 287.00000  9.7   74     6   2
34  -17.85609 242.00000 16.1   67     6   3
35  -13.29299 186.00000  9.2   84     6   4
36  -16.16323 220.00000  8.6   85     6   5
37  -19.60935 264.00000 14.3   79     6   6
38   29.00000 127.00000  9.7   82     6   7
39  -19.65780 273.00000  6.9   87     6   8
40   71.00000 291.00000 13.8   90     6   9
41   39.00000 323.00000 11.5   87     6  10
42  -13.40961 259.00000 10.9   93     6  11
43  -13.53728 250.00000  9.2   92     6  12
44   23.00000 148.00000  8.0   82     6  13
45  -19.65993 332.00000 13.8   80     6  14
46  -16.48342 322.00000 11.5   79     6  15
47   21.00000 191.00000 14.9   77     6  16
48   37.00000 284.00000 20.7   72     6  17
49   20.00000  37.00000  9.2   65     6  18
50   12.00000 120.00000 11.5   73     6  19
51   13.00000 137.00000 10.3   76     6  20
52  -17.17718 150.00000  6.3   77     6  21
53  -16.74073  59.00000  1.7   76     6  22
54  -13.65786  91.00000  4.6   76     6  23
55  -16.78786 250.00000  6.3   76     6  24
56  -12.30098 135.00000  8.0   75     6  25
57  -13.33171 127.00000  8.0   78     6  26
58  -16.77414  47.00000 10.3   73     6  27
59  -17.08225  98.00000 11.5   80     6  28
60  -15.98818  31.00000 14.9   77     6  29
61  -19.17558 138.00000  8.0   83     6  30
62  135.00000 269.00000  4.1   84     7   1
63   49.00000 248.00000  9.2   85     7   2
64   32.00000 236.00000  9.2   81     7   3
65  -14.27138 101.00000 10.9   84     7   4
66   64.00000 175.00000  4.6   83     7   5
67   40.00000 314.00000 10.9   83     7   6
68   77.00000 276.00000  5.1   88     7   7
69   97.00000 267.00000  6.3   92     7   8
70   97.00000 272.00000  5.7   92     7   9
71   85.00000 175.00000  7.4   89     7  10
72  -13.51764 139.00000  8.6   82     7  11
73   10.00000 264.00000 14.3   73     7  12
74   27.00000 175.00000 14.9   81     7  13
75  -13.48998 291.00000 14.9   91     7  14
76    7.00000  48.00000 14.3   80     7  15
77   48.00000 260.00000  6.9   81     7  16
78   35.00000 274.00000 10.3   82     7  17
79   61.00000 285.00000  6.3   84     7  18
80   79.00000 187.00000  5.1   87     7  19
81   63.00000 220.00000 11.5   85     7  20
82   16.00000   7.00000  6.9   74     7  21
83  -16.92150 258.00000  9.7   81     7  22
84  -16.60335 295.00000 11.5   82     7  23
85   80.00000 294.00000  8.6   86     7  24
86  108.00000 223.00000  8.0   85     7  25
87   20.00000  81.00000  8.6   82     7  26
88   52.00000  82.00000 12.0   86     7  27
89   82.00000 213.00000  7.4   88     7  28
90   50.00000 275.00000  7.4   86     7  29
91   64.00000 253.00000  7.4   83     7  30
92   59.00000 254.00000  9.2   81     7  31
93   39.00000  83.00000  6.9   81     8   1
94    9.00000  24.00000 13.8   81     8   2
95   16.00000  77.00000  7.4   82     8   3
96   78.00000 -30.94374  6.9   86     8   4
97   35.00000 -33.38707  7.4   85     8   5
98   66.00000 -21.48980  4.6   87     8   6
99  122.00000 255.00000  4.0   89     8   7
100  89.00000 229.00000 10.3   90     8   8
101 110.00000 207.00000  8.0   90     8   9
102 -14.78907 222.00000  8.6   92     8  10
103 -16.19151 137.00000 11.5   86     8  11
104  44.00000 192.00000 11.5   86     8  12
105  28.00000 273.00000 11.5   82     8  13
106  65.00000 157.00000  9.7   80     8  14
107 -19.73591  64.00000 11.5   79     8  15
108  22.00000  71.00000 10.3   77     8  16
109  59.00000  51.00000  6.3   79     8  17
110  23.00000 115.00000  7.4   76     8  18
111  31.00000 244.00000 10.9   78     8  19
112  44.00000 190.00000 10.3   78     8  20
113  21.00000 259.00000 15.5   77     8  21
114   9.00000  36.00000 14.3   72     8  22
115 -18.92235 255.00000 12.6   75     8  23
116  45.00000 212.00000  9.7   79     8  24
117 168.00000 238.00000  3.4   81     8  25
118  73.00000 215.00000  8.0   86     8  26
119 -14.86296 153.00000  5.7   88     8  27
120  76.00000 203.00000  9.7   97     8  28
121 118.00000 225.00000  2.3   94     8  29
122  84.00000 237.00000  6.3   96     8  30
123  85.00000 188.00000  6.3   94     8  31
124  96.00000 167.00000  6.9   91     9   1
125  78.00000 197.00000  5.1   92     9   2
126  73.00000 183.00000  2.8   93     9   3
127  91.00000 189.00000  4.6   93     9   4
128  47.00000  95.00000  7.4   87     9   5
129  32.00000  92.00000 15.5   84     9   6
130  20.00000 252.00000 10.9   80     9   7
131  23.00000 220.00000 10.3   78     9   8
132  21.00000 230.00000 10.9   75     9   9
133  24.00000 259.00000  9.7   73     9  10
134  44.00000 236.00000 14.9   81     9  11
135  21.00000 259.00000 15.5   76     9  12
136  28.00000 238.00000  6.3   77     9  13
137   9.00000  24.00000 10.9   71     9  14
138  13.00000 112.00000 11.5   71     9  15
139  46.00000 237.00000  6.9   78     9  16
140  18.00000 224.00000 13.8   67     9  17
141  13.00000  27.00000 10.3   76     9  18
142  24.00000 238.00000 10.3   68     9  19
143  16.00000 201.00000  8.0   82     9  20
144  13.00000 238.00000 12.6   64     9  21
145  23.00000  14.00000  9.2   71     9  22
146  36.00000 139.00000 10.3   81     9  23
147   7.00000  49.00000 10.3   69     9  24
148  14.00000  20.00000 16.6   63     9  25
149  30.00000 193.00000  6.9   70     9  26
150 -14.83089 145.00000 13.2   77     9  27
151  14.00000 191.00000 14.3   75     9  28
152  18.00000 131.00000  8.0   76     9  29
153  20.00000 223.00000 11.5   68     9  30
> 
> # However, this does not show you WHERE the missing values are.
> # to keep track of them, you want to use `bind_shadow()` first.
> 
> airquality %>%
+   bind_shadow() %>%
+   impute_below_all()
[90m# A tibble: 153 x 12[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA Wind_NA Temp_NA
   [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m  
[90m 1[39m  41     190     7.4    67     5     1 !NA      !NA        !NA     !NA    
[90m 2[39m  36     118     8      72     5     2 !NA      !NA        !NA     !NA    
[90m 3[39m  12     149    12.6    74     5     3 !NA      !NA        !NA     !NA    
[90m 4[39m  18     313    11.5    62     5     4 !NA      !NA        !NA     !NA    
[90m 5[39m -[31m19[39m[31m.[39m[31m7[39m   -[31m33[39m[31m.[39m[31m6[39m  14.3    56     5     5 NA       NA         !NA     !NA    
[90m 6[39m  28     -[31m33[39m[31m.[39m[31m1[39m  14.9    66     5     6 !NA      NA         !NA     !NA    
[90m 7[39m  23     299     8.6    65     5     7 !NA      !NA        !NA     !NA    
[90m 8[39m  19      99    13.8    59     5     8 !NA      !NA        !NA     !NA    
[90m 9[39m   8      19    20.1    61     5     9 !NA      !NA        !NA     !NA    
[90m10[39m -[31m18[39m[31m.[39m[31m5[39m   194     8.6    69     5    10 NA       !NA        !NA     !NA    
[90m# â€¦ with 143 more rows, and 2 more variables: Month_NA [3m[90m<fct>[90m[23m, Day_NA [3m[90m<fct>[90m[23m[39m
> 
> # This identifies where the missing values are located, which means you
> # can do things like this:
> 
> ## Not run: 
> ##D library(ggplot2)
> ##D airquality %>%
> ##D   bind_shadow() %>%
> ##D   impute_below_all() %>%
> ##D   # identify where there are missings across rows.
> ##D   add_label_shadow() %>%
> ##D   ggplot(aes(x = Ozone,
> ##D              y = Solar.R,
> ##D              colour = any_missing)) +
> ##D   geom_point()
> ##D # Note that this ^^ is a long version of `geom_miss_point()`.
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("impute_below_at")
> ### * impute_below_at
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_below_at
> ### Title: Scoped variants of 'impute_below'
> ### Aliases: impute_below_at
> 
> ### ** Examples
> 
> # select variables starting with a particular string.
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> impute_below_at(airquality,
+                 .vars = c("Ozone", "Solar.R"))
        Ozone   Solar.R Wind Temp Month Day
1    41.00000 190.00000  7.4   67     5   1
2    36.00000 118.00000  8.0   72     5   2
3    12.00000 149.00000 12.6   74     5   3
4    18.00000 313.00000 11.5   62     5   4
5   -19.72321 -33.57778 14.3   56     5   5
6    28.00000 -33.07810 14.9   66     5   6
7    23.00000 299.00000  8.6   65     5   7
8    19.00000  99.00000 13.8   59     5   8
9     8.00000  19.00000 20.1   61     5   9
10  -18.51277 194.00000  8.6   69     5  10
11    7.00000 -21.37719  6.9   74     5  11
12   16.00000 256.00000  9.7   69     5  12
13   11.00000 290.00000  9.2   66     5  13
14   14.00000 274.00000 10.9   68     5  14
15   18.00000  65.00000 13.2   58     5  15
16   14.00000 334.00000 11.5   64     5  16
17   34.00000 307.00000 12.0   66     5  17
18    6.00000  78.00000 18.4   57     5  18
19   30.00000 322.00000 11.5   68     5  19
20   11.00000  44.00000  9.7   62     5  20
21    1.00000   8.00000  9.7   59     5  21
22   11.00000 320.00000 16.6   73     5  22
23    4.00000  25.00000  9.7   61     5  23
24   32.00000  92.00000 12.0   61     5  24
25  -17.81863  66.00000 16.6   57     5  25
26  -19.43853 266.00000 14.9   58     5  26
27  -15.14310 -24.60954  8.0   57     5  27
28   23.00000  13.00000 12.0   67     5  28
29   45.00000 252.00000 14.9   81     5  29
30  115.00000 223.00000  5.7   79     5  30
31   37.00000 279.00000  7.4   76     5  31
32  -16.17315 286.00000  8.6   78     6   1
33  -14.65883 287.00000  9.7   74     6   2
34  -17.85609 242.00000 16.1   67     6   3
35  -13.29299 186.00000  9.2   84     6   4
36  -16.16323 220.00000  8.6   85     6   5
37  -19.60935 264.00000 14.3   79     6   6
38   29.00000 127.00000  9.7   82     6   7
39  -19.65780 273.00000  6.9   87     6   8
40   71.00000 291.00000 13.8   90     6   9
41   39.00000 323.00000 11.5   87     6  10
42  -13.40961 259.00000 10.9   93     6  11
43  -13.53728 250.00000  9.2   92     6  12
44   23.00000 148.00000  8.0   82     6  13
45  -19.65993 332.00000 13.8   80     6  14
46  -16.48342 322.00000 11.5   79     6  15
47   21.00000 191.00000 14.9   77     6  16
48   37.00000 284.00000 20.7   72     6  17
49   20.00000  37.00000  9.2   65     6  18
50   12.00000 120.00000 11.5   73     6  19
51   13.00000 137.00000 10.3   76     6  20
52  -17.17718 150.00000  6.3   77     6  21
53  -16.74073  59.00000  1.7   76     6  22
54  -13.65786  91.00000  4.6   76     6  23
55  -16.78786 250.00000  6.3   76     6  24
56  -12.30098 135.00000  8.0   75     6  25
57  -13.33171 127.00000  8.0   78     6  26
58  -16.77414  47.00000 10.3   73     6  27
59  -17.08225  98.00000 11.5   80     6  28
60  -15.98818  31.00000 14.9   77     6  29
61  -19.17558 138.00000  8.0   83     6  30
62  135.00000 269.00000  4.1   84     7   1
63   49.00000 248.00000  9.2   85     7   2
64   32.00000 236.00000  9.2   81     7   3
65  -14.27138 101.00000 10.9   84     7   4
66   64.00000 175.00000  4.6   83     7   5
67   40.00000 314.00000 10.9   83     7   6
68   77.00000 276.00000  5.1   88     7   7
69   97.00000 267.00000  6.3   92     7   8
70   97.00000 272.00000  5.7   92     7   9
71   85.00000 175.00000  7.4   89     7  10
72  -13.51764 139.00000  8.6   82     7  11
73   10.00000 264.00000 14.3   73     7  12
74   27.00000 175.00000 14.9   81     7  13
75  -13.48998 291.00000 14.9   91     7  14
76    7.00000  48.00000 14.3   80     7  15
77   48.00000 260.00000  6.9   81     7  16
78   35.00000 274.00000 10.3   82     7  17
79   61.00000 285.00000  6.3   84     7  18
80   79.00000 187.00000  5.1   87     7  19
81   63.00000 220.00000 11.5   85     7  20
82   16.00000   7.00000  6.9   74     7  21
83  -16.92150 258.00000  9.7   81     7  22
84  -16.60335 295.00000 11.5   82     7  23
85   80.00000 294.00000  8.6   86     7  24
86  108.00000 223.00000  8.0   85     7  25
87   20.00000  81.00000  8.6   82     7  26
88   52.00000  82.00000 12.0   86     7  27
89   82.00000 213.00000  7.4   88     7  28
90   50.00000 275.00000  7.4   86     7  29
91   64.00000 253.00000  7.4   83     7  30
92   59.00000 254.00000  9.2   81     7  31
93   39.00000  83.00000  6.9   81     8   1
94    9.00000  24.00000 13.8   81     8   2
95   16.00000  77.00000  7.4   82     8   3
96   78.00000 -30.94374  6.9   86     8   4
97   35.00000 -33.38707  7.4   85     8   5
98   66.00000 -21.48980  4.6   87     8   6
99  122.00000 255.00000  4.0   89     8   7
100  89.00000 229.00000 10.3   90     8   8
101 110.00000 207.00000  8.0   90     8   9
102 -14.78907 222.00000  8.6   92     8  10
103 -16.19151 137.00000 11.5   86     8  11
104  44.00000 192.00000 11.5   86     8  12
105  28.00000 273.00000 11.5   82     8  13
106  65.00000 157.00000  9.7   80     8  14
107 -19.73591  64.00000 11.5   79     8  15
108  22.00000  71.00000 10.3   77     8  16
109  59.00000  51.00000  6.3   79     8  17
110  23.00000 115.00000  7.4   76     8  18
111  31.00000 244.00000 10.9   78     8  19
112  44.00000 190.00000 10.3   78     8  20
113  21.00000 259.00000 15.5   77     8  21
114   9.00000  36.00000 14.3   72     8  22
115 -18.92235 255.00000 12.6   75     8  23
116  45.00000 212.00000  9.7   79     8  24
117 168.00000 238.00000  3.4   81     8  25
118  73.00000 215.00000  8.0   86     8  26
119 -14.86296 153.00000  5.7   88     8  27
120  76.00000 203.00000  9.7   97     8  28
121 118.00000 225.00000  2.3   94     8  29
122  84.00000 237.00000  6.3   96     8  30
123  85.00000 188.00000  6.3   94     8  31
124  96.00000 167.00000  6.9   91     9   1
125  78.00000 197.00000  5.1   92     9   2
126  73.00000 183.00000  2.8   93     9   3
127  91.00000 189.00000  4.6   93     9   4
128  47.00000  95.00000  7.4   87     9   5
129  32.00000  92.00000 15.5   84     9   6
130  20.00000 252.00000 10.9   80     9   7
131  23.00000 220.00000 10.3   78     9   8
132  21.00000 230.00000 10.9   75     9   9
133  24.00000 259.00000  9.7   73     9  10
134  44.00000 236.00000 14.9   81     9  11
135  21.00000 259.00000 15.5   76     9  12
136  28.00000 238.00000  6.3   77     9  13
137   9.00000  24.00000 10.9   71     9  14
138  13.00000 112.00000 11.5   71     9  15
139  46.00000 237.00000  6.9   78     9  16
140  18.00000 224.00000 13.8   67     9  17
141  13.00000  27.00000 10.3   76     9  18
142  24.00000 238.00000 10.3   68     9  19
143  16.00000 201.00000  8.0   82     9  20
144  13.00000 238.00000 12.6   64     9  21
145  23.00000  14.00000  9.2   71     9  22
146  36.00000 139.00000 10.3   81     9  23
147   7.00000  49.00000 10.3   69     9  24
148  14.00000  20.00000 16.6   63     9  25
149  30.00000 193.00000  6.9   70     9  26
150 -14.83089 145.00000 13.2   77     9  27
151  14.00000 191.00000 14.3   75     9  28
152  18.00000 131.00000  8.0   76     9  29
153  20.00000 223.00000 11.5   68     9  30
> 
> impute_below_at(airquality,
+                 .vars = 1:2)
        Ozone   Solar.R Wind Temp Month Day
1    41.00000 190.00000  7.4   67     5   1
2    36.00000 118.00000  8.0   72     5   2
3    12.00000 149.00000 12.6   74     5   3
4    18.00000 313.00000 11.5   62     5   4
5   -19.72321 -33.57778 14.3   56     5   5
6    28.00000 -33.07810 14.9   66     5   6
7    23.00000 299.00000  8.6   65     5   7
8    19.00000  99.00000 13.8   59     5   8
9     8.00000  19.00000 20.1   61     5   9
10  -18.51277 194.00000  8.6   69     5  10
11    7.00000 -21.37719  6.9   74     5  11
12   16.00000 256.00000  9.7   69     5  12
13   11.00000 290.00000  9.2   66     5  13
14   14.00000 274.00000 10.9   68     5  14
15   18.00000  65.00000 13.2   58     5  15
16   14.00000 334.00000 11.5   64     5  16
17   34.00000 307.00000 12.0   66     5  17
18    6.00000  78.00000 18.4   57     5  18
19   30.00000 322.00000 11.5   68     5  19
20   11.00000  44.00000  9.7   62     5  20
21    1.00000   8.00000  9.7   59     5  21
22   11.00000 320.00000 16.6   73     5  22
23    4.00000  25.00000  9.7   61     5  23
24   32.00000  92.00000 12.0   61     5  24
25  -17.81863  66.00000 16.6   57     5  25
26  -19.43853 266.00000 14.9   58     5  26
27  -15.14310 -24.60954  8.0   57     5  27
28   23.00000  13.00000 12.0   67     5  28
29   45.00000 252.00000 14.9   81     5  29
30  115.00000 223.00000  5.7   79     5  30
31   37.00000 279.00000  7.4   76     5  31
32  -16.17315 286.00000  8.6   78     6   1
33  -14.65883 287.00000  9.7   74     6   2
34  -17.85609 242.00000 16.1   67     6   3
35  -13.29299 186.00000  9.2   84     6   4
36  -16.16323 220.00000  8.6   85     6   5
37  -19.60935 264.00000 14.3   79     6   6
38   29.00000 127.00000  9.7   82     6   7
39  -19.65780 273.00000  6.9   87     6   8
40   71.00000 291.00000 13.8   90     6   9
41   39.00000 323.00000 11.5   87     6  10
42  -13.40961 259.00000 10.9   93     6  11
43  -13.53728 250.00000  9.2   92     6  12
44   23.00000 148.00000  8.0   82     6  13
45  -19.65993 332.00000 13.8   80     6  14
46  -16.48342 322.00000 11.5   79     6  15
47   21.00000 191.00000 14.9   77     6  16
48   37.00000 284.00000 20.7   72     6  17
49   20.00000  37.00000  9.2   65     6  18
50   12.00000 120.00000 11.5   73     6  19
51   13.00000 137.00000 10.3   76     6  20
52  -17.17718 150.00000  6.3   77     6  21
53  -16.74073  59.00000  1.7   76     6  22
54  -13.65786  91.00000  4.6   76     6  23
55  -16.78786 250.00000  6.3   76     6  24
56  -12.30098 135.00000  8.0   75     6  25
57  -13.33171 127.00000  8.0   78     6  26
58  -16.77414  47.00000 10.3   73     6  27
59  -17.08225  98.00000 11.5   80     6  28
60  -15.98818  31.00000 14.9   77     6  29
61  -19.17558 138.00000  8.0   83     6  30
62  135.00000 269.00000  4.1   84     7   1
63   49.00000 248.00000  9.2   85     7   2
64   32.00000 236.00000  9.2   81     7   3
65  -14.27138 101.00000 10.9   84     7   4
66   64.00000 175.00000  4.6   83     7   5
67   40.00000 314.00000 10.9   83     7   6
68   77.00000 276.00000  5.1   88     7   7
69   97.00000 267.00000  6.3   92     7   8
70   97.00000 272.00000  5.7   92     7   9
71   85.00000 175.00000  7.4   89     7  10
72  -13.51764 139.00000  8.6   82     7  11
73   10.00000 264.00000 14.3   73     7  12
74   27.00000 175.00000 14.9   81     7  13
75  -13.48998 291.00000 14.9   91     7  14
76    7.00000  48.00000 14.3   80     7  15
77   48.00000 260.00000  6.9   81     7  16
78   35.00000 274.00000 10.3   82     7  17
79   61.00000 285.00000  6.3   84     7  18
80   79.00000 187.00000  5.1   87     7  19
81   63.00000 220.00000 11.5   85     7  20
82   16.00000   7.00000  6.9   74     7  21
83  -16.92150 258.00000  9.7   81     7  22
84  -16.60335 295.00000 11.5   82     7  23
85   80.00000 294.00000  8.6   86     7  24
86  108.00000 223.00000  8.0   85     7  25
87   20.00000  81.00000  8.6   82     7  26
88   52.00000  82.00000 12.0   86     7  27
89   82.00000 213.00000  7.4   88     7  28
90   50.00000 275.00000  7.4   86     7  29
91   64.00000 253.00000  7.4   83     7  30
92   59.00000 254.00000  9.2   81     7  31
93   39.00000  83.00000  6.9   81     8   1
94    9.00000  24.00000 13.8   81     8   2
95   16.00000  77.00000  7.4   82     8   3
96   78.00000 -30.94374  6.9   86     8   4
97   35.00000 -33.38707  7.4   85     8   5
98   66.00000 -21.48980  4.6   87     8   6
99  122.00000 255.00000  4.0   89     8   7
100  89.00000 229.00000 10.3   90     8   8
101 110.00000 207.00000  8.0   90     8   9
102 -14.78907 222.00000  8.6   92     8  10
103 -16.19151 137.00000 11.5   86     8  11
104  44.00000 192.00000 11.5   86     8  12
105  28.00000 273.00000 11.5   82     8  13
106  65.00000 157.00000  9.7   80     8  14
107 -19.73591  64.00000 11.5   79     8  15
108  22.00000  71.00000 10.3   77     8  16
109  59.00000  51.00000  6.3   79     8  17
110  23.00000 115.00000  7.4   76     8  18
111  31.00000 244.00000 10.9   78     8  19
112  44.00000 190.00000 10.3   78     8  20
113  21.00000 259.00000 15.5   77     8  21
114   9.00000  36.00000 14.3   72     8  22
115 -18.92235 255.00000 12.6   75     8  23
116  45.00000 212.00000  9.7   79     8  24
117 168.00000 238.00000  3.4   81     8  25
118  73.00000 215.00000  8.0   86     8  26
119 -14.86296 153.00000  5.7   88     8  27
120  76.00000 203.00000  9.7   97     8  28
121 118.00000 225.00000  2.3   94     8  29
122  84.00000 237.00000  6.3   96     8  30
123  85.00000 188.00000  6.3   94     8  31
124  96.00000 167.00000  6.9   91     9   1
125  78.00000 197.00000  5.1   92     9   2
126  73.00000 183.00000  2.8   93     9   3
127  91.00000 189.00000  4.6   93     9   4
128  47.00000  95.00000  7.4   87     9   5
129  32.00000  92.00000 15.5   84     9   6
130  20.00000 252.00000 10.9   80     9   7
131  23.00000 220.00000 10.3   78     9   8
132  21.00000 230.00000 10.9   75     9   9
133  24.00000 259.00000  9.7   73     9  10
134  44.00000 236.00000 14.9   81     9  11
135  21.00000 259.00000 15.5   76     9  12
136  28.00000 238.00000  6.3   77     9  13
137   9.00000  24.00000 10.9   71     9  14
138  13.00000 112.00000 11.5   71     9  15
139  46.00000 237.00000  6.9   78     9  16
140  18.00000 224.00000 13.8   67     9  17
141  13.00000  27.00000 10.3   76     9  18
142  24.00000 238.00000 10.3   68     9  19
143  16.00000 201.00000  8.0   82     9  20
144  13.00000 238.00000 12.6   64     9  21
145  23.00000  14.00000  9.2   71     9  22
146  36.00000 139.00000 10.3   81     9  23
147   7.00000  49.00000 10.3   69     9  24
148  14.00000  20.00000 16.6   63     9  25
149  30.00000 193.00000  6.9   70     9  26
150 -14.83089 145.00000 13.2   77     9  27
151  14.00000 191.00000 14.3   75     9  28
152  18.00000 131.00000  8.0   76     9  29
153  20.00000 223.00000 11.5   68     9  30
> #'
> impute_below_at(airquality,
+                 .vars = vars(Ozone))
        Ozone Solar.R Wind Temp Month Day
1    41.00000     190  7.4   67     5   1
2    36.00000     118  8.0   72     5   2
3    12.00000     149 12.6   74     5   3
4    18.00000     313 11.5   62     5   4
5   -19.72321      NA 14.3   56     5   5
6    28.00000      NA 14.9   66     5   6
7    23.00000     299  8.6   65     5   7
8    19.00000      99 13.8   59     5   8
9     8.00000      19 20.1   61     5   9
10  -18.51277     194  8.6   69     5  10
11    7.00000      NA  6.9   74     5  11
12   16.00000     256  9.7   69     5  12
13   11.00000     290  9.2   66     5  13
14   14.00000     274 10.9   68     5  14
15   18.00000      65 13.2   58     5  15
16   14.00000     334 11.5   64     5  16
17   34.00000     307 12.0   66     5  17
18    6.00000      78 18.4   57     5  18
19   30.00000     322 11.5   68     5  19
20   11.00000      44  9.7   62     5  20
21    1.00000       8  9.7   59     5  21
22   11.00000     320 16.6   73     5  22
23    4.00000      25  9.7   61     5  23
24   32.00000      92 12.0   61     5  24
25  -17.81863      66 16.6   57     5  25
26  -19.43853     266 14.9   58     5  26
27  -15.14310      NA  8.0   57     5  27
28   23.00000      13 12.0   67     5  28
29   45.00000     252 14.9   81     5  29
30  115.00000     223  5.7   79     5  30
31   37.00000     279  7.4   76     5  31
32  -16.17315     286  8.6   78     6   1
33  -14.65883     287  9.7   74     6   2
34  -17.85609     242 16.1   67     6   3
35  -13.29299     186  9.2   84     6   4
36  -16.16323     220  8.6   85     6   5
37  -19.60935     264 14.3   79     6   6
38   29.00000     127  9.7   82     6   7
39  -19.65780     273  6.9   87     6   8
40   71.00000     291 13.8   90     6   9
41   39.00000     323 11.5   87     6  10
42  -13.40961     259 10.9   93     6  11
43  -13.53728     250  9.2   92     6  12
44   23.00000     148  8.0   82     6  13
45  -19.65993     332 13.8   80     6  14
46  -16.48342     322 11.5   79     6  15
47   21.00000     191 14.9   77     6  16
48   37.00000     284 20.7   72     6  17
49   20.00000      37  9.2   65     6  18
50   12.00000     120 11.5   73     6  19
51   13.00000     137 10.3   76     6  20
52  -17.17718     150  6.3   77     6  21
53  -16.74073      59  1.7   76     6  22
54  -13.65786      91  4.6   76     6  23
55  -16.78786     250  6.3   76     6  24
56  -12.30098     135  8.0   75     6  25
57  -13.33171     127  8.0   78     6  26
58  -16.77414      47 10.3   73     6  27
59  -17.08225      98 11.5   80     6  28
60  -15.98818      31 14.9   77     6  29
61  -19.17558     138  8.0   83     6  30
62  135.00000     269  4.1   84     7   1
63   49.00000     248  9.2   85     7   2
64   32.00000     236  9.2   81     7   3
65  -14.27138     101 10.9   84     7   4
66   64.00000     175  4.6   83     7   5
67   40.00000     314 10.9   83     7   6
68   77.00000     276  5.1   88     7   7
69   97.00000     267  6.3   92     7   8
70   97.00000     272  5.7   92     7   9
71   85.00000     175  7.4   89     7  10
72  -13.51764     139  8.6   82     7  11
73   10.00000     264 14.3   73     7  12
74   27.00000     175 14.9   81     7  13
75  -13.48998     291 14.9   91     7  14
76    7.00000      48 14.3   80     7  15
77   48.00000     260  6.9   81     7  16
78   35.00000     274 10.3   82     7  17
79   61.00000     285  6.3   84     7  18
80   79.00000     187  5.1   87     7  19
81   63.00000     220 11.5   85     7  20
82   16.00000       7  6.9   74     7  21
83  -16.92150     258  9.7   81     7  22
84  -16.60335     295 11.5   82     7  23
85   80.00000     294  8.6   86     7  24
86  108.00000     223  8.0   85     7  25
87   20.00000      81  8.6   82     7  26
88   52.00000      82 12.0   86     7  27
89   82.00000     213  7.4   88     7  28
90   50.00000     275  7.4   86     7  29
91   64.00000     253  7.4   83     7  30
92   59.00000     254  9.2   81     7  31
93   39.00000      83  6.9   81     8   1
94    9.00000      24 13.8   81     8   2
95   16.00000      77  7.4   82     8   3
96   78.00000      NA  6.9   86     8   4
97   35.00000      NA  7.4   85     8   5
98   66.00000      NA  4.6   87     8   6
99  122.00000     255  4.0   89     8   7
100  89.00000     229 10.3   90     8   8
101 110.00000     207  8.0   90     8   9
102 -14.78907     222  8.6   92     8  10
103 -16.19151     137 11.5   86     8  11
104  44.00000     192 11.5   86     8  12
105  28.00000     273 11.5   82     8  13
106  65.00000     157  9.7   80     8  14
107 -19.73591      64 11.5   79     8  15
108  22.00000      71 10.3   77     8  16
109  59.00000      51  6.3   79     8  17
110  23.00000     115  7.4   76     8  18
111  31.00000     244 10.9   78     8  19
112  44.00000     190 10.3   78     8  20
113  21.00000     259 15.5   77     8  21
114   9.00000      36 14.3   72     8  22
115 -18.92235     255 12.6   75     8  23
116  45.00000     212  9.7   79     8  24
117 168.00000     238  3.4   81     8  25
118  73.00000     215  8.0   86     8  26
119 -14.86296     153  5.7   88     8  27
120  76.00000     203  9.7   97     8  28
121 118.00000     225  2.3   94     8  29
122  84.00000     237  6.3   96     8  30
123  85.00000     188  6.3   94     8  31
124  96.00000     167  6.9   91     9   1
125  78.00000     197  5.1   92     9   2
126  73.00000     183  2.8   93     9   3
127  91.00000     189  4.6   93     9   4
128  47.00000      95  7.4   87     9   5
129  32.00000      92 15.5   84     9   6
130  20.00000     252 10.9   80     9   7
131  23.00000     220 10.3   78     9   8
132  21.00000     230 10.9   75     9   9
133  24.00000     259  9.7   73     9  10
134  44.00000     236 14.9   81     9  11
135  21.00000     259 15.5   76     9  12
136  28.00000     238  6.3   77     9  13
137   9.00000      24 10.9   71     9  14
138  13.00000     112 11.5   71     9  15
139  46.00000     237  6.9   78     9  16
140  18.00000     224 13.8   67     9  17
141  13.00000      27 10.3   76     9  18
142  24.00000     238 10.3   68     9  19
143  16.00000     201  8.0   82     9  20
144  13.00000     238 12.6   64     9  21
145  23.00000      14  9.2   71     9  22
146  36.00000     139 10.3   81     9  23
147   7.00000      49 10.3   69     9  24
148  14.00000      20 16.6   63     9  25
149  30.00000     193  6.9   70     9  26
150 -14.83089     145 13.2   77     9  27
151  14.00000     191 14.3   75     9  28
152  18.00000     131  8.0   76     9  29
153  20.00000     223 11.5   68     9  30
> 
> ## Not run: 
> ##D library(ggplot2)
> ##D airquality %>%
> ##D   bind_shadow() %>%
> ##D   impute_below_at(vars(Ozone, Solar.R)) %>%
> ##D   add_label_shadow() %>%
> ##D   ggplot(aes(x = Ozone,
> ##D              y = Solar.R,
> ##D              colour = any_missing)) +
> ##D          geom_point()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("impute_below_if")
> ### * impute_below_if
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_below_if
> ### Title: Scoped variants of 'impute_below'
> ### Aliases: impute_below_if
> 
> ### ** Examples
> 
> 
> airquality %>%
+   impute_below_if(.predicate = is.numeric)
        Ozone   Solar.R Wind Temp Month Day
1    41.00000 190.00000  7.4   67     5   1
2    36.00000 118.00000  8.0   72     5   2
3    12.00000 149.00000 12.6   74     5   3
4    18.00000 313.00000 11.5   62     5   4
5   -19.72321 -33.57778 14.3   56     5   5
6    28.00000 -33.07810 14.9   66     5   6
7    23.00000 299.00000  8.6   65     5   7
8    19.00000  99.00000 13.8   59     5   8
9     8.00000  19.00000 20.1   61     5   9
10  -18.51277 194.00000  8.6   69     5  10
11    7.00000 -21.37719  6.9   74     5  11
12   16.00000 256.00000  9.7   69     5  12
13   11.00000 290.00000  9.2   66     5  13
14   14.00000 274.00000 10.9   68     5  14
15   18.00000  65.00000 13.2   58     5  15
16   14.00000 334.00000 11.5   64     5  16
17   34.00000 307.00000 12.0   66     5  17
18    6.00000  78.00000 18.4   57     5  18
19   30.00000 322.00000 11.5   68     5  19
20   11.00000  44.00000  9.7   62     5  20
21    1.00000   8.00000  9.7   59     5  21
22   11.00000 320.00000 16.6   73     5  22
23    4.00000  25.00000  9.7   61     5  23
24   32.00000  92.00000 12.0   61     5  24
25  -17.81863  66.00000 16.6   57     5  25
26  -19.43853 266.00000 14.9   58     5  26
27  -15.14310 -24.60954  8.0   57     5  27
28   23.00000  13.00000 12.0   67     5  28
29   45.00000 252.00000 14.9   81     5  29
30  115.00000 223.00000  5.7   79     5  30
31   37.00000 279.00000  7.4   76     5  31
32  -16.17315 286.00000  8.6   78     6   1
33  -14.65883 287.00000  9.7   74     6   2
34  -17.85609 242.00000 16.1   67     6   3
35  -13.29299 186.00000  9.2   84     6   4
36  -16.16323 220.00000  8.6   85     6   5
37  -19.60935 264.00000 14.3   79     6   6
38   29.00000 127.00000  9.7   82     6   7
39  -19.65780 273.00000  6.9   87     6   8
40   71.00000 291.00000 13.8   90     6   9
41   39.00000 323.00000 11.5   87     6  10
42  -13.40961 259.00000 10.9   93     6  11
43  -13.53728 250.00000  9.2   92     6  12
44   23.00000 148.00000  8.0   82     6  13
45  -19.65993 332.00000 13.8   80     6  14
46  -16.48342 322.00000 11.5   79     6  15
47   21.00000 191.00000 14.9   77     6  16
48   37.00000 284.00000 20.7   72     6  17
49   20.00000  37.00000  9.2   65     6  18
50   12.00000 120.00000 11.5   73     6  19
51   13.00000 137.00000 10.3   76     6  20
52  -17.17718 150.00000  6.3   77     6  21
53  -16.74073  59.00000  1.7   76     6  22
54  -13.65786  91.00000  4.6   76     6  23
55  -16.78786 250.00000  6.3   76     6  24
56  -12.30098 135.00000  8.0   75     6  25
57  -13.33171 127.00000  8.0   78     6  26
58  -16.77414  47.00000 10.3   73     6  27
59  -17.08225  98.00000 11.5   80     6  28
60  -15.98818  31.00000 14.9   77     6  29
61  -19.17558 138.00000  8.0   83     6  30
62  135.00000 269.00000  4.1   84     7   1
63   49.00000 248.00000  9.2   85     7   2
64   32.00000 236.00000  9.2   81     7   3
65  -14.27138 101.00000 10.9   84     7   4
66   64.00000 175.00000  4.6   83     7   5
67   40.00000 314.00000 10.9   83     7   6
68   77.00000 276.00000  5.1   88     7   7
69   97.00000 267.00000  6.3   92     7   8
70   97.00000 272.00000  5.7   92     7   9
71   85.00000 175.00000  7.4   89     7  10
72  -13.51764 139.00000  8.6   82     7  11
73   10.00000 264.00000 14.3   73     7  12
74   27.00000 175.00000 14.9   81     7  13
75  -13.48998 291.00000 14.9   91     7  14
76    7.00000  48.00000 14.3   80     7  15
77   48.00000 260.00000  6.9   81     7  16
78   35.00000 274.00000 10.3   82     7  17
79   61.00000 285.00000  6.3   84     7  18
80   79.00000 187.00000  5.1   87     7  19
81   63.00000 220.00000 11.5   85     7  20
82   16.00000   7.00000  6.9   74     7  21
83  -16.92150 258.00000  9.7   81     7  22
84  -16.60335 295.00000 11.5   82     7  23
85   80.00000 294.00000  8.6   86     7  24
86  108.00000 223.00000  8.0   85     7  25
87   20.00000  81.00000  8.6   82     7  26
88   52.00000  82.00000 12.0   86     7  27
89   82.00000 213.00000  7.4   88     7  28
90   50.00000 275.00000  7.4   86     7  29
91   64.00000 253.00000  7.4   83     7  30
92   59.00000 254.00000  9.2   81     7  31
93   39.00000  83.00000  6.9   81     8   1
94    9.00000  24.00000 13.8   81     8   2
95   16.00000  77.00000  7.4   82     8   3
96   78.00000 -30.94374  6.9   86     8   4
97   35.00000 -33.38707  7.4   85     8   5
98   66.00000 -21.48980  4.6   87     8   6
99  122.00000 255.00000  4.0   89     8   7
100  89.00000 229.00000 10.3   90     8   8
101 110.00000 207.00000  8.0   90     8   9
102 -14.78907 222.00000  8.6   92     8  10
103 -16.19151 137.00000 11.5   86     8  11
104  44.00000 192.00000 11.5   86     8  12
105  28.00000 273.00000 11.5   82     8  13
106  65.00000 157.00000  9.7   80     8  14
107 -19.73591  64.00000 11.5   79     8  15
108  22.00000  71.00000 10.3   77     8  16
109  59.00000  51.00000  6.3   79     8  17
110  23.00000 115.00000  7.4   76     8  18
111  31.00000 244.00000 10.9   78     8  19
112  44.00000 190.00000 10.3   78     8  20
113  21.00000 259.00000 15.5   77     8  21
114   9.00000  36.00000 14.3   72     8  22
115 -18.92235 255.00000 12.6   75     8  23
116  45.00000 212.00000  9.7   79     8  24
117 168.00000 238.00000  3.4   81     8  25
118  73.00000 215.00000  8.0   86     8  26
119 -14.86296 153.00000  5.7   88     8  27
120  76.00000 203.00000  9.7   97     8  28
121 118.00000 225.00000  2.3   94     8  29
122  84.00000 237.00000  6.3   96     8  30
123  85.00000 188.00000  6.3   94     8  31
124  96.00000 167.00000  6.9   91     9   1
125  78.00000 197.00000  5.1   92     9   2
126  73.00000 183.00000  2.8   93     9   3
127  91.00000 189.00000  4.6   93     9   4
128  47.00000  95.00000  7.4   87     9   5
129  32.00000  92.00000 15.5   84     9   6
130  20.00000 252.00000 10.9   80     9   7
131  23.00000 220.00000 10.3   78     9   8
132  21.00000 230.00000 10.9   75     9   9
133  24.00000 259.00000  9.7   73     9  10
134  44.00000 236.00000 14.9   81     9  11
135  21.00000 259.00000 15.5   76     9  12
136  28.00000 238.00000  6.3   77     9  13
137   9.00000  24.00000 10.9   71     9  14
138  13.00000 112.00000 11.5   71     9  15
139  46.00000 237.00000  6.9   78     9  16
140  18.00000 224.00000 13.8   67     9  17
141  13.00000  27.00000 10.3   76     9  18
142  24.00000 238.00000 10.3   68     9  19
143  16.00000 201.00000  8.0   82     9  20
144  13.00000 238.00000 12.6   64     9  21
145  23.00000  14.00000  9.2   71     9  22
146  36.00000 139.00000 10.3   81     9  23
147   7.00000  49.00000 10.3   69     9  24
148  14.00000  20.00000 16.6   63     9  25
149  30.00000 193.00000  6.9   70     9  26
150 -14.83089 145.00000 13.2   77     9  27
151  14.00000 191.00000 14.3   75     9  28
152  18.00000 131.00000  8.0   76     9  29
153  20.00000 223.00000 11.5   68     9  30
> 
> 
> 
> 
> cleanEx()
> nameEx("impute_mean")
> ### * impute_mean
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_mean
> ### Title: Impute the mean value into a vector with missing values
> ### Aliases: impute_mean impute_mean.default impute_mean.factor
> 
> ### ** Examples
> 
> 
> vec <- rnorm(10)
> 
> vec[sample(1:10, 3)] <- NA
> 
> impute_mean(vec)
 [1] -0.6264538  0.1836433 -0.8356286  1.5952808  0.1031610 -0.8204684
 [7]  0.4874291  0.7383247  0.1031610  0.1031610
> 
> 
> 
> 
> cleanEx()
> nameEx("impute_median")
> ### * impute_median
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: impute_median
> ### Title: Impute the median value into a vector with missing values
> ### Aliases: impute_median impute_median.default impute_median.factor
> 
> ### ** Examples
> 
> 
> vec <- rnorm(10)
> 
> vec[sample(1:10, 3)] <- NA
> 
> impute_median(vec)
 [1] -0.6264538  0.1836433 -0.8356286  1.5952808  0.1836433 -0.8204684
 [7]  0.4874291  0.7383247  0.1836433  0.1836433
> 
> 
> 
> 
> cleanEx()
> nameEx("is_shade")
> ### * is_shade
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is_shade
> ### Title: Detect if this is a shade
> ### Aliases: is_shade are_shade any_shade
> 
> ### ** Examples
> 
> 
> xs <- shade(c(NA, 1, 2, "3"))
> 
> is_shade(xs)
[1] TRUE
> are_shade(xs)
[1] TRUE TRUE TRUE TRUE
> any_shade(xs)
[1] TRUE
> 
> aq_s <- as_shadow(airquality)
> 
> is_shade(aq_s)
[1] FALSE
> are_shade(aq_s)
  Ozone_NA Solar.R_NA    Wind_NA    Temp_NA   Month_NA     Day_NA 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
> any_shade(aq_s)
[1] TRUE
> any_shade(airquality)
[1] FALSE
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("is_shadow")
> ### * is_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is_shadow
> ### Title: Test if input is or are shadow variables
> ### Aliases: is_shadow is_nabular
> 
> ### ** Examples
> 
> 
> aq_sh <- as_shadow(airquality)
> aq_bind <- bind_shadow(airquality)
> 
> is_shadow(aq_sh)
[1] TRUE
> is_shadow(airquality)
[1] FALSE
> is_shadow(aq_bind)
[1] FALSE
> is_nabular(aq_bind)
[1] TRUE
> 
> 
> 
> 
> cleanEx()
> nameEx("label_miss_1d")
> ### * label_miss_1d
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: label_miss_1d
> ### Title: Label a missing from one column
> ### Aliases: label_miss_1d
> 
> ### ** Examples
> 
> 
> label_miss_1d(airquality$Ozone)
  [1] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
  [6] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [11] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [16] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [21] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [26] "Missing"     "Missing"     "Not Missing" "Not Missing" "Not Missing"
 [31] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [36] "Missing"     "Missing"     "Not Missing" "Missing"     "Not Missing"
 [41] "Not Missing" "Missing"     "Missing"     "Not Missing" "Missing"    
 [46] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [51] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [56] "Missing"     "Missing"     "Missing"     "Missing"     "Missing"    
 [61] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [66] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [71] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Missing"    
 [76] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [81] "Not Missing" "Not Missing" "Missing"     "Missing"     "Not Missing"
 [86] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [91] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [96] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[101] "Not Missing" "Missing"     "Missing"     "Not Missing" "Not Missing"
[106] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Not Missing"
[111] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[116] "Not Missing" "Not Missing" "Not Missing" "Missing"     "Not Missing"
[121] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[126] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[131] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[136] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[141] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[146] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[151] "Not Missing" "Not Missing" "Not Missing"
> 
> 
> 
> 
> cleanEx()
> nameEx("label_miss_2d")
> ### * label_miss_2d
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: label_miss_2d
> ### Title: label_miss_2d
> ### Aliases: label_miss_2d
> 
> ### ** Examples
> 
> 
> label_miss_2d(airquality$Ozone, airquality$Solar.R)
  [1] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
  [6] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [11] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [16] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [21] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [26] "Missing"     "Missing"     "Not Missing" "Not Missing" "Not Missing"
 [31] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [36] "Missing"     "Missing"     "Not Missing" "Missing"     "Not Missing"
 [41] "Not Missing" "Missing"     "Missing"     "Not Missing" "Missing"    
 [46] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [51] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [56] "Missing"     "Missing"     "Missing"     "Missing"     "Missing"    
 [61] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [66] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [71] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Missing"    
 [76] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [81] "Not Missing" "Not Missing" "Missing"     "Missing"     "Not Missing"
 [86] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [91] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [96] "Missing"     "Missing"     "Missing"     "Not Missing" "Not Missing"
[101] "Not Missing" "Missing"     "Missing"     "Not Missing" "Not Missing"
[106] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Not Missing"
[111] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[116] "Not Missing" "Not Missing" "Not Missing" "Missing"     "Not Missing"
[121] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[126] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[131] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[136] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[141] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[146] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[151] "Not Missing" "Not Missing" "Not Missing"
> 
> 
> 
> 
> cleanEx()
> nameEx("label_missings")
> ### * label_missings
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: label_missings
> ### Title: Is there a missing value in the row of a dataframe?
> ### Aliases: label_missings
> 
> ### ** Examples
> 
> 
> label_missings(airquality)
  [1] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
  [6] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [11] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [16] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [21] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [26] "Missing"     "Missing"     "Not Missing" "Not Missing" "Not Missing"
 [31] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [36] "Missing"     "Missing"     "Not Missing" "Missing"     "Not Missing"
 [41] "Not Missing" "Missing"     "Missing"     "Not Missing" "Missing"    
 [46] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [51] "Not Missing" "Missing"     "Missing"     "Missing"     "Missing"    
 [56] "Missing"     "Missing"     "Missing"     "Missing"     "Missing"    
 [61] "Missing"     "Not Missing" "Not Missing" "Not Missing" "Missing"    
 [66] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [71] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Missing"    
 [76] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [81] "Not Missing" "Not Missing" "Missing"     "Missing"     "Not Missing"
 [86] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [91] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
 [96] "Missing"     "Missing"     "Missing"     "Not Missing" "Not Missing"
[101] "Not Missing" "Missing"     "Missing"     "Not Missing" "Not Missing"
[106] "Not Missing" "Missing"     "Not Missing" "Not Missing" "Not Missing"
[111] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[116] "Not Missing" "Not Missing" "Not Missing" "Missing"     "Not Missing"
[121] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[126] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[131] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[136] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[141] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Not Missing"
[146] "Not Missing" "Not Missing" "Not Missing" "Not Missing" "Missing"    
[151] "Not Missing" "Not Missing" "Not Missing"
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> 
> airquality %>%
+   mutate(is_missing = label_missings(airquality)) %>%
+   head()
  Ozone Solar.R Wind Temp Month Day  is_missing
1    41     190  7.4   67     5   1 Not Missing
2    36     118  8.0   72     5   2 Not Missing
3    12     149 12.6   74     5   3 Not Missing
4    18     313 11.5   62     5   4 Not Missing
5    NA      NA 14.3   56     5   5     Missing
6    28      NA 14.9   66     5   6     Missing
> 
> airquality %>%
+   mutate(is_missing = label_missings(airquality,
+                                      missing = "definitely missing",
+                                      complete = "absolutely complete")) %>%
+   head()
  Ozone Solar.R Wind Temp Month Day          is_missing
1    41     190  7.4   67     5   1 absolutely complete
2    36     118  8.0   72     5   2 absolutely complete
3    12     149 12.6   74     5   3 absolutely complete
4    18     313 11.5   62     5   4 absolutely complete
5    NA      NA 14.3   56     5   5  definitely missing
6    28      NA 14.9   66     5   6  definitely missing
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_case_cumsum")
> ### * miss_case_cumsum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_case_cumsum
> ### Title: Summarise the missingness in each case
> ### Aliases: miss_case_cumsum
> 
> ### ** Examples
> 
> 
> miss_case_cumsum(airquality)
[90m# A tibble: 153 x 3[39m
    case n_miss n_miss_cumsum
   [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m         [3m[90m<int>[39m[23m
[90m 1[39m     1      0             0
[90m 2[39m     2      0             0
[90m 3[39m     3      0             0
[90m 4[39m     4      0             0
[90m 5[39m     5      2             2
[90m 6[39m     6      1             3
[90m 7[39m     7      0             3
[90m 8[39m     8      0             3
[90m 9[39m     9      0             3
[90m10[39m    10      1             4
[90m# â€¦ with 143 more rows[39m
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> 
> airquality %>%
+   group_by(Month) %>%
+   miss_case_cumsum()
[90m# A tibble: 153 x 4[39m
[90m# Groups:   Month [5][39m
   Month  case n_miss n_miss_cumsum
   [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m         [3m[90m<int>[39m[23m
[90m 1[39m     5     1      0             0
[90m 2[39m     5     2      0             0
[90m 3[39m     5     3      0             0
[90m 4[39m     5     4      0             0
[90m 5[39m     5     5      2             2
[90m 6[39m     5     6      1             3
[90m 7[39m     5     7      0             3
[90m 8[39m     5     8      0             3
[90m 9[39m     5     9      0             3
[90m10[39m     5    10      1             4
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_case_summary")
> ### * miss_case_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_case_summary
> ### Title: Summarise the missingness in each case
> ### Aliases: miss_case_summary
> 
> ### ** Examples
> 
> 
> # works with group_by from dplyr
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>%
+   group_by(Month) %>%
+   miss_case_summary()
[90m# A tibble: 153 x 4[39m
[90m# Groups:   Month [5][39m
   Month  case n_miss pct_miss
   [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m 1[39m     5     5      2       40
[90m 2[39m     5    27      2       40
[90m 3[39m     5     6      1       20
[90m 4[39m     5    10      1       20
[90m 5[39m     5    11      1       20
[90m 6[39m     5    25      1       20
[90m 7[39m     5    26      1       20
[90m 8[39m     5     1      0        0
[90m 9[39m     5     2      0        0
[90m10[39m     5     3      0        0
[90m# â€¦ with 143 more rows[39m
> 
> miss_case_summary(airquality)
[90m# A tibble: 153 x 3[39m
    case n_miss pct_miss
   [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m 1[39m     5      2     33.3
[90m 2[39m    27      2     33.3
[90m 3[39m     6      1     16.7
[90m 4[39m    10      1     16.7
[90m 5[39m    11      1     16.7
[90m 6[39m    25      1     16.7
[90m 7[39m    26      1     16.7
[90m 8[39m    32      1     16.7
[90m 9[39m    33      1     16.7
[90m10[39m    34      1     16.7
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_case_table")
> ### * miss_case_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_case_table
> ### Title: Tabulate missings in cases.
> ### Aliases: miss_case_table
> 
> ### ** Examples
> 
> 
> miss_case_table(airquality)
[90m# A tibble: 3 x 3[39m
  n_miss_in_case n_cases pct_cases
           [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m     [3m[90m<dbl>[39m[23m
[90m1[39m              0     111     72.5 
[90m2[39m              1      40     26.1 
[90m3[39m              2       2      1.31
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>%
+   group_by(Month) %>%
+   miss_case_table()
[90m# A tibble: 11 x 4[39m
[90m# Groups:   Month [5][39m
   Month n_miss_in_case n_cases pct_cases
   [3m[90m<int>[39m[23m          [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m     [3m[90m<dbl>[39m[23m
[90m 1[39m     5              0      24     77.4 
[90m 2[39m     5              1       5     16.1 
[90m 3[39m     5              2       2      6.45
[90m 4[39m     6              0       9     30   
[90m 5[39m     6              1      21     70   
[90m 6[39m     7              0      26     83.9 
[90m 7[39m     7              1       5     16.1 
[90m 8[39m     8              0      23     74.2 
[90m 9[39m     8              1       8     25.8 
[90m10[39m     9              0      29     96.7 
[90m11[39m     9              1       1      3.33
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_prop_summary")
> ### * miss_prop_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_prop_summary
> ### Title: Proportions of missings in data, variables, and cases.
> ### Aliases: miss_prop_summary
> 
> ### ** Examples
> 
> 
> miss_prop_summary(airquality)
[90m# A tibble: 1 x 3[39m
      df   var  case
   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m 0.047[4m9[24m 0.333 0.275
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>% group_by(Month) %>% miss_prop_summary()
[90m# A tibble: 5 x 4[39m
[90m# Groups:   Month [5][39m
  Month      df   var   case
  [3m[90m<int>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m
[90m1[39m     5 0.058[4m1[24m    0.4 0.226 
[90m2[39m     6 0.14      0.2 0.7   
[90m3[39m     7 0.032[4m3[24m    0.2 0.161 
[90m4[39m     8 0.051[4m6[24m    0.4 0.258 
[90m5[39m     9 0.006[4m6[24m[4m7[24m   0.2 0.033[4m3[24m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_scan_count")
> ### * miss_scan_count
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_scan_count
> ### Title: Search and present different kinds of missing values
> ### Aliases: miss_scan_count
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                          1,   "A",   -100,
+                          3,   "N/A", -99,
+                          NA,  NA,    -98,
+                          -99, "E",   -101,
+                          -98, "F",   -1)
> 
> miss_scan_count(dat_ms,-99)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            1
[90m2[39m y            0
[90m3[39m z            1
> miss_scan_count(dat_ms,c(-99,-98))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            0
[90m3[39m z            2
> miss_scan_count(dat_ms,c("-99","-98","N/A"))
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            2
[90m2[39m y            1
[90m3[39m z            2
> miss_scan_count(dat_ms,common_na_strings)
[90m# A tibble: 3 x 2[39m
  Variable     n
  [3m[90m<chr>[39m[23m    [3m[90m<int>[39m[23m
[90m1[39m x            4
[90m2[39m y            4
[90m3[39m z            5
> 
> 
> 
> 
> cleanEx()
> nameEx("miss_summary")
> ### * miss_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_summary
> ### Title: Collate summary measures from naniar into one tibble
> ### Aliases: miss_summary
> 
> ### ** Examples
> 
> 
> s_miss <- miss_summary(airquality)
> s_miss$miss_df_prop
[1] 0.04793028
> s_miss$miss_case_table
[[1]]
[90m# A tibble: 3 x 3[39m
  n_miss_in_case n_cases pct_cases
           [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m     [3m[90m<dbl>[39m[23m
[90m1[39m              0     111     72.5 
[90m2[39m              1      40     26.1 
[90m3[39m              2       2      1.31

> s_miss$miss_var_summary
[[1]]
[90m# A tibble: 6 x 3[39m
  variable n_miss pct_miss
  [3m[90m<chr>[39m[23m     [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m Ozone        37    24.2 
[90m2[39m Solar.R       7     4.58
[90m3[39m Wind          0     0   
[90m4[39m Temp          0     0   
[90m5[39m Month         0     0   
[90m6[39m Day           0     0   

> # etc, etc, etc.
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> s_miss_group <- group_by(airquality, Month) %>% miss_summary()
> s_miss_group$miss_df_prop
[1] 0.04793028
> s_miss_group$miss_case_table
[[1]]
[90m# A tibble: 11 x 4[39m
[90m# Groups:   Month [5][39m
   Month n_miss_in_case n_cases pct_cases
   [3m[90m<int>[39m[23m          [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m     [3m[90m<dbl>[39m[23m
[90m 1[39m     5              0      24     77.4 
[90m 2[39m     5              1       5     16.1 
[90m 3[39m     5              2       2      6.45
[90m 4[39m     6              0       9     30   
[90m 5[39m     6              1      21     70   
[90m 6[39m     7              0      26     83.9 
[90m 7[39m     7              1       5     16.1 
[90m 8[39m     8              0      23     74.2 
[90m 9[39m     8              1       8     25.8 
[90m10[39m     9              0      29     96.7 
[90m11[39m     9              1       1      3.33

> # etc, etc, etc.
> 
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_var_cumsum")
> ### * miss_var_cumsum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_cumsum
> ### Title: Cumulative sum of the number of missings in each variable
> ### Aliases: miss_var_cumsum
> 
> ### ** Examples
> 
> 
> miss_var_cumsum(airquality)
[90m# A tibble: 6 x 3[39m
  variable n_miss n_miss_cumsum
  [3m[90m<chr>[39m[23m     [3m[90m<int>[39m[23m         [3m[90m<int>[39m[23m
[90m1[39m Ozone        37            37
[90m2[39m Solar.R       7            44
[90m3[39m Wind          0            44
[90m4[39m Temp          0            44
[90m5[39m Month         0            44
[90m6[39m Day           0            44
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> 
> # respects dplyr::group_by
> 
> airquality %>%
+   group_by(Month) %>%
+   miss_var_cumsum()
[90m# A tibble: 25 x 4[39m
[90m# Groups:   Month [5][39m
   Month variable n_miss n_miss_cumsum
   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m     [3m[90m<int>[39m[23m         [3m[90m<int>[39m[23m
[90m 1[39m     5 Ozone         5             5
[90m 2[39m     5 Solar.R       4             9
[90m 3[39m     5 Wind          0             9
[90m 4[39m     5 Temp          0             9
[90m 5[39m     5 Day           0             9
[90m 6[39m     6 Ozone        21            21
[90m 7[39m     6 Solar.R       0            21
[90m 8[39m     6 Wind          0            21
[90m 9[39m     6 Temp          0            21
[90m10[39m     6 Day           0            21
[90m# â€¦ with 15 more rows[39m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_var_run")
> ### * miss_var_run
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_run
> ### Title: Find the number of missing and complete values in a single run
> ### Aliases: miss_var_run
> 
> ### ** Examples
> 
> 
> miss_var_run(pedestrian, hourly_counts)
[90m# A tibble: 35 x 2[39m
   run_length is_na   
        [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m   
[90m 1[39m       [4m6[24m628 complete
[90m 2[39m          1 missing 
[90m 3[39m       [4m5[24m250 complete
[90m 4[39m        624 missing 
[90m 5[39m       [4m3[24m652 complete
[90m 6[39m          1 missing 
[90m 7[39m       [4m1[24m290 complete
[90m 8[39m        744 missing 
[90m 9[39m       [4m7[24m420 complete
[90m10[39m          1 missing 
[90m# â€¦ with 25 more rows[39m
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> 
> # find the number of runs missing/complete for each month
> 
> pedestrian %>%
+   group_by(month) %>%
+   miss_var_run(hourly_counts)
[90m# A tibble: 51 x 3[39m
[90m# Groups:   month [12][39m
   month    run_length is_na   
   [3m[90m<ord>[39m[23m         [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m   
[90m 1[39m January        [4m2[24m976 complete
[90m 2[39m February       [4m2[24m784 complete
[90m 3[39m March          [4m2[24m976 complete
[90m 4[39m April           888 complete
[90m 5[39m April           552 missing 
[90m 6[39m April          [4m1[24m440 complete
[90m 7[39m May             744 complete
[90m 8[39m May              72 missing 
[90m 9[39m May            [4m2[24m160 complete
[90m10[39m June           [4m2[24m880 complete
[90m# â€¦ with 41 more rows[39m
> 
> library(ggplot2)
> 
> # explore the number of missings in a given run
> miss_var_run(pedestrian, hourly_counts) %>%
+   filter(is_na == "missing") %>%
+   count(run_length) %>%
+   ggplot(aes(x = run_length,
+              y = n)) +
+       geom_col()
> 
> # look at the number of missing values and the run length of these.
> miss_var_run(pedestrian, hourly_counts) %>%
+   ggplot(aes(x = is_na,
+              y = run_length)) +
+       geom_boxplot()
> 
> # using group_by
>  pedestrian %>%
+    group_by(month) %>%
+    miss_var_run(hourly_counts)
[90m# A tibble: 51 x 3[39m
[90m# Groups:   month [12][39m
   month    run_length is_na   
   [3m[90m<ord>[39m[23m         [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m   
[90m 1[39m January        [4m2[24m976 complete
[90m 2[39m February       [4m2[24m784 complete
[90m 3[39m March          [4m2[24m976 complete
[90m 4[39m April           888 complete
[90m 5[39m April           552 missing 
[90m 6[39m April          [4m1[24m440 complete
[90m 7[39m May             744 complete
[90m 8[39m May              72 missing 
[90m 9[39m May            [4m2[24m160 complete
[90m10[39m June           [4m2[24m880 complete
[90m# â€¦ with 41 more rows[39m
> 
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™, â€˜package:dplyrâ€™

> nameEx("miss_var_span")
> ### * miss_var_span
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_span
> ### Title: Summarise the number of missings for a given repeating span on a
> ###   variable
> ### Aliases: miss_var_span
> 
> ### ** Examples
> 
> 
> miss_var_span(data = pedestrian,
+              var = hourly_counts,
+              span_every = 168)
[90m# A tibble: 225 x 5[39m
   span_counter n_miss n_complete prop_miss prop_complete
          [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m      [3m[90m<dbl>[39m[23m     [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m
[90m 1[39m            1      0        168         0             1
[90m 2[39m            2      0        168         0             1
[90m 3[39m            3      0        168         0             1
[90m 4[39m            4      0        168         0             1
[90m 5[39m            5      0        168         0             1
[90m 6[39m            6      0        168         0             1
[90m 7[39m            7      0        168         0             1
[90m 8[39m            8      0        168         0             1
[90m 9[39m            9      0        168         0             1
[90m10[39m           10      0        168         0             1
[90m# â€¦ with 215 more rows[39m
> 
>  library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

>  pedestrian %>%
+    group_by(month) %>%
+      miss_var_span(var = hourly_counts,
+                    span_every = 168)
[90m# A tibble: 230 x 6[39m
[90m# Groups:   month [12][39m
   month   span_counter n_miss n_complete prop_miss prop_complete
   [3m[90m<ord>[39m[23m          [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m      [3m[90m<dbl>[39m[23m     [3m[90m<dbl>[39m[23m         [3m[90m<dbl>[39m[23m
[90m 1[39m January            1      0        168         0             1
[90m 2[39m January            2      0        168         0             1
[90m 3[39m January            3      0        168         0             1
[90m 4[39m January            4      0        168         0             1
[90m 5[39m January            5      0        168         0             1
[90m 6[39m January            6      0        168         0             1
[90m 7[39m January            7      0        168         0             1
[90m 8[39m January            8      0        168         0             1
[90m 9[39m January            9      0        168         0             1
[90m10[39m January           10      0        168         0             1
[90m# â€¦ with 220 more rows[39m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_var_summary")
> ### * miss_var_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_summary
> ### Title: Summarise the missingness in each variable
> ### Aliases: miss_var_summary
> 
> ### ** Examples
> 
> 
> miss_var_summary(airquality)
[90m# A tibble: 6 x 3[39m
  variable n_miss pct_miss
  [3m[90m<chr>[39m[23m     [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m Ozone        37    24.2 
[90m2[39m Solar.R       7     4.58
[90m3[39m Wind          0     0   
[90m4[39m Temp          0     0   
[90m5[39m Month         0     0   
[90m6[39m Day           0     0   
> miss_var_summary(oceanbuoys, order = TRUE)
[90m# A tibble: 8 x 3[39m
  variable   n_miss pct_miss
  [3m[90m<chr>[39m[23m       [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m humidity       93   12.6  
[90m2[39m air_temp_c     81   11.0  
[90m3[39m sea_temp_c      3    0.408
[90m4[39m year            0    0    
[90m5[39m latitude        0    0    
[90m6[39m longitude       0    0    
[90m7[39m wind_ew         0    0    
[90m8[39m wind_ns         0    0    
> 
> # works with group_by from dplyr
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>%
+   group_by(Month) %>%
+   miss_var_summary()
[90m# A tibble: 25 x 4[39m
[90m# Groups:   Month [5][39m
   Month variable n_miss pct_miss
   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m     [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m 1[39m     5 Ozone         5     16.1
[90m 2[39m     5 Solar.R       4     12.9
[90m 3[39m     5 Wind          0      0  
[90m 4[39m     5 Temp          0      0  
[90m 5[39m     5 Day           0      0  
[90m 6[39m     6 Ozone        21     70  
[90m 7[39m     6 Solar.R       0      0  
[90m 8[39m     6 Wind          0      0  
[90m 9[39m     6 Temp          0      0  
[90m10[39m     6 Day           0      0  
[90m# â€¦ with 15 more rows[39m
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_var_table")
> ### * miss_var_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_table
> ### Title: Tabulate the missings in the variables
> ### Aliases: miss_var_table
> 
> ### ** Examples
> 
> 
> miss_var_table(airquality)
[90m# A tibble: 3 x 3[39m
  n_miss_in_var n_vars pct_vars
          [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m             0      4     66.7
[90m2[39m             7      1     16.7
[90m3[39m            37      1     16.7
> 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>%
+   group_by(Month) %>%
+   miss_var_table()
[90m# A tibble: 12 x 4[39m
[90m# Groups:   Month [5][39m
   Month n_miss_in_var n_vars pct_vars
   [3m[90m<int>[39m[23m         [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m 1[39m     5             0      3       60
[90m 2[39m     5             4      1       20
[90m 3[39m     5             5      1       20
[90m 4[39m     6             0      4       80
[90m 5[39m     6            21      1       20
[90m 6[39m     7             0      4       80
[90m 7[39m     7             5      1       20
[90m 8[39m     8             0      3       60
[90m 9[39m     8             3      1       20
[90m10[39m     8             5      1       20
[90m11[39m     9             0      4       80
[90m12[39m     9             1      1       20
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("miss_var_which")
> ### * miss_var_which
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miss_var_which
> ### Title: Which variables contain missing values?
> ### Aliases: miss_var_which
> 
> ### ** Examples
> 
> miss_var_which(airquality)
[1] "Ozone"   "Solar.R"
> 
> miss_var_which(iris)
NULL
> 
> 
> 
> 
> cleanEx()
> nameEx("n-var-case-complete")
> ### * n-var-case-complete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n-var-case-complete
> ### Title: The number of variables with complete values
> ### Aliases: n-var-case-complete n_var_complete n_case_complete
> 
> ### ** Examples
> 
> 
> # how many variables contain complete values?
> n_var_complete(airquality)
[1] 4
> n_case_complete(airquality)
[1] 111
> 
> 
> 
> 
> cleanEx()
> nameEx("n-var-case-miss")
> ### * n-var-case-miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n-var-case-miss
> ### Title: The number of variables or cases with missing values
> ### Aliases: n-var-case-miss n_var_miss n_case_miss
> 
> ### ** Examples
> 
> # how many variables contain missing values?
> n_var_miss(airquality)
[1] 2
> n_case_miss(airquality)
[1] 42
> 
> 
> 
> 
> cleanEx()
> nameEx("n_complete")
> ### * n_complete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n_complete
> ### Title: Return the number of complete values
> ### Aliases: n_complete
> 
> ### ** Examples
> 
> 
> n_complete(airquality)
[1] 874
> n_complete(airquality$Ozone)
[1] 116
> 
> 
> 
> 
> cleanEx()
> nameEx("n_complete_row")
> ### * n_complete_row
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n_complete_row
> ### Title: Return a vector of the number of complete values in each row
> ### Aliases: n_complete_row
> 
> ### ** Examples
> 
> 
> n_complete_row(airquality)
  [1] 6 6 6 6 4 5 6 6 6 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 5 5 4 6 6 6 6 5 5 5 5 5 5
 [38] 6 5 6 6 5 5 6 5 5 6 6 6 6 6 5 5 5 5 5 5 5 5 5 5 6 6 6 5 6 6 6 6 6 6 5 6 6
 [75] 5 6 6 6 6 6 6 6 5 5 6 6 6 6 6 6 6 6 6 6 6 5 5 5 6 6 6 5 5 6 6 6 5 6 6 6 6
[112] 6 6 6 5 6 6 6 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6
[149] 6 5 6 6 6
> 
> 
> 
> 
> cleanEx()
> nameEx("n_miss")
> ### * n_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n_miss
> ### Title: Return the number of missing values
> ### Aliases: n_miss
> 
> ### ** Examples
> 
> 
> n_miss(airquality)
[1] 44
> n_miss(airquality$Ozone)
[1] 37
> 
> 
> 
> 
> cleanEx()
> nameEx("n_miss_row")
> ### * n_miss_row
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: n_miss_row
> ### Title: Return a vector of the number of missing values in each row
> ### Aliases: n_miss_row
> 
> ### ** Examples
> 
> 
> n_miss_row(airquality)
  [1] 0 0 0 0 2 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 0 0 0 0 1 1 1 1 1 1
 [38] 0 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0 1 0 0
 [75] 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 0 0 0 0
[112] 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[149] 0 1 0 0 0
> 
> 
> 
> 
> cleanEx()
> nameEx("nabular")
> ### * nabular
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nabular
> ### Title: Convert data into nabular form by binding shade to it
> ### Aliases: nabular
> 
> ### ** Examples
> 
> 
> aq_nab <- nabular(airquality)
> aq_s <- bind_shadow(airquality)
> 
> all.equal(aq_nab, aq_s)
[1] TRUE
> 
> 
> 
> 
> cleanEx()
> nameEx("oceanbuoys")
> ### * oceanbuoys
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oceanbuoys
> ### Title: West Pacific Tropical Atmosphere Ocean Data, 1993 & 1997.
> ### Aliases: oceanbuoys
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> # explore the missingness with vis_miss
> library(naniar)
> 
> vis_miss(oceanbuoys)
> 
> # Look at the missingness in the variables
> miss_var_summary(oceanbuoys)
[90m# A tibble: 8 x 3[39m
  variable   n_miss pct_miss
  [3m[90m<chr>[39m[23m       [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m humidity       93   12.6  
[90m2[39m air_temp_c     81   11.0  
[90m3[39m sea_temp_c      3    0.408
[90m4[39m year            0    0    
[90m5[39m latitude        0    0    
[90m6[39m longitude       0    0    
[90m7[39m wind_ew         0    0    
[90m8[39m wind_ns         0    0    
> 
> # Look at the missingness in air temperature and humidity
> library(ggplot2)
> p <-
+ ggplot(oceanbuoys,
+        aes(x = air_temp_c,
+            y = humidity)) +
+      geom_miss_point()
> 
>  p
> 
>  # for each year?
>  p + facet_wrap(~year)
> 
>  # this shows that there are more missing values in humidity in 1993, and
>  # more air temperature missing values in 1997
> 
>  # what if we explore the value of air temperature and humidity based on
>  # the missingness of each
> 
>  oceanbuoys %>%
+    bind_shadow() %>%
+    ggplot(aes(x = air_temp_c,
+               fill = humidity_NA)) +
+        geom_histogram()
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Removed 81 rows containing non-finite values (stat_bin).
> 
>  oceanbuoys %>%
+    bind_shadow() %>%
+    ggplot(aes(x = humidity,
+               fill = air_temp_c_NA)) +
+        geom_histogram()
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Removed 93 rows containing non-finite values (stat_bin).
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("pct-miss-complete-case")
> ### * pct-miss-complete-case
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pct-miss-complete-case
> ### Title: Percentage of cases that contain a missing or complete values.
> ### Aliases: pct-miss-complete-case pct_miss_case pct_complete_case
> 
> ### ** Examples
> 
> 
> pct_miss_case(airquality)
[1] 27.45098
> pct_complete_case(airquality)
[1] 72.54902
> 
> 
> 
> 
> cleanEx()
> nameEx("pct-miss-complete-var")
> ### * pct-miss-complete-var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pct-miss-complete-var
> ### Title: Percentage of variables containing missings or complete values
> ### Aliases: pct-miss-complete-var pct_miss_var pct_complete_var
> 
> ### ** Examples
> 
> 
> prop_miss_var(riskfactors)
[1] 0.7058824
> prop_miss_var(oceanbuoys)
[1] 0.375
> prop_complete_var(riskfactors)
[1] 0.2941176
> prop_complete_var(oceanbuoys)
[1] 0.625
> 
> 
> 
> 
> cleanEx()
> nameEx("pct_complete")
> ### * pct_complete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pct_complete
> ### Title: Return the percent of complete values
> ### Aliases: pct_complete
> 
> ### ** Examples
> 
> 
> pct_complete(airquality)
[1] 95.20697
> pct_complete(airquality$Ozone)
[1] 75.81699
> 
> 
> 
> 
> cleanEx()
> nameEx("pct_miss")
> ### * pct_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pct_miss
> ### Title: Return the percent of missing values
> ### Aliases: pct_miss
> 
> ### ** Examples
> 
> 
> pct_miss(airquality)
[1] 4.793028
> pct_miss(airquality$Ozone)
[1] 24.18301
> 
> 
> 
> 
> cleanEx()
> nameEx("pedestrian")
> ### * pedestrian
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pedestrian
> ### Title: Pedestrian count information around Melbourne for 2016
> ### Aliases: pedestrian
> ### Keywords: datasets
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # explore the missingness with vis_miss
> ##D library(naniar)
> ##D 
> ##D vis_miss(pedestrian)
> ##D 
> ##D # Look at the missingness in the variables
> ##D miss_var_summary(pedestrian)
> ##D 
> ##D # There is only missingness in hourly_counts
> ##D # Look at the missingness over a rolling window
> ##D library(ggplot2)
> ##D gg_miss_span(pedestrian, hourly_counts, span_every = 3000)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("prop-miss-complete-case")
> ### * prop-miss-complete-case
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop-miss-complete-case
> ### Title: Proportion of cases that contain a missing or complete values.
> ### Aliases: prop-miss-complete-case prop_miss_case prop_complete_case
> 
> ### ** Examples
> 
> 
> prop_miss_case(airquality)
[1] 0.2745098
> prop_complete_case(airquality)
[1] 0.7254902
> 
> 
> 
> 
> cleanEx()
> nameEx("prop-miss-complete-var")
> ### * prop-miss-complete-var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop-miss-complete-var
> ### Title: Proportion of variables containing missings or complete values
> ### Aliases: prop-miss-complete-var prop_miss_var prop_complete_var
> 
> ### ** Examples
> 
> 
> prop_miss_var(riskfactors)
[1] 0.7058824
> prop_miss_var(oceanbuoys)
[1] 0.375
> prop_complete_var(riskfactors)
[1] 0.2941176
> prop_complete_var(oceanbuoys)
[1] 0.625
> 
> 
> 
> 
> cleanEx()
> nameEx("prop_complete")
> ### * prop_complete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop_complete
> ### Title: Return the proportion of complete values
> ### Aliases: prop_complete
> 
> ### ** Examples
> 
> 
> prop_complete(airquality)
[1] 0.9520697
> prop_complete(airquality$Ozone)
[1] 0.7581699
> 
> 
> 
> 
> cleanEx()
> nameEx("prop_complete_row")
> ### * prop_complete_row
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop_complete_row
> ### Title: Return a vector of the proportion of missing values in each row
> ### Aliases: prop_complete_row
> 
> ### ** Examples
> 
> 
> prop_complete_row(airquality)
  [1] 1.0000000 1.0000000 1.0000000 1.0000000 0.6666667 0.8333333 1.0000000
  [8] 1.0000000 1.0000000 0.8333333 0.8333333 1.0000000 1.0000000 1.0000000
 [15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
 [22] 1.0000000 1.0000000 1.0000000 0.8333333 0.8333333 0.6666667 1.0000000
 [29] 1.0000000 1.0000000 1.0000000 0.8333333 0.8333333 0.8333333 0.8333333
 [36] 0.8333333 0.8333333 1.0000000 0.8333333 1.0000000 1.0000000 0.8333333
 [43] 0.8333333 1.0000000 0.8333333 0.8333333 1.0000000 1.0000000 1.0000000
 [50] 1.0000000 1.0000000 0.8333333 0.8333333 0.8333333 0.8333333 0.8333333
 [57] 0.8333333 0.8333333 0.8333333 0.8333333 0.8333333 1.0000000 1.0000000
 [64] 1.0000000 0.8333333 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
 [71] 1.0000000 0.8333333 1.0000000 1.0000000 0.8333333 1.0000000 1.0000000
 [78] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.8333333 0.8333333
 [85] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
 [92] 1.0000000 1.0000000 1.0000000 1.0000000 0.8333333 0.8333333 0.8333333
 [99] 1.0000000 1.0000000 1.0000000 0.8333333 0.8333333 1.0000000 1.0000000
[106] 1.0000000 0.8333333 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[113] 1.0000000 1.0000000 0.8333333 1.0000000 1.0000000 1.0000000 0.8333333
[120] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[127] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[134] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[141] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[148] 1.0000000 1.0000000 0.8333333 1.0000000 1.0000000 1.0000000
> 
> 
> 
> 
> cleanEx()
> nameEx("prop_miss")
> ### * prop_miss
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop_miss
> ### Title: Return the proportion of missing values
> ### Aliases: prop_miss
> 
> ### ** Examples
> 
> 
> prop_miss(airquality)
[1] 0.04793028
> prop_miss(airquality$Ozone)
[1] 0.2418301
> 
> 
> 
> 
> cleanEx()
> nameEx("prop_miss_row")
> ### * prop_miss_row
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prop_miss_row
> ### Title: Return a vector of the proportion of missing values in each row
> ### Aliases: prop_miss_row
> 
> ### ** Examples
> 
> 
> prop_miss_row(airquality)
  [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.3333333 0.1666667 0.0000000
  [8] 0.0000000 0.0000000 0.1666667 0.1666667 0.0000000 0.0000000 0.0000000
 [15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [22] 0.0000000 0.0000000 0.0000000 0.1666667 0.1666667 0.3333333 0.0000000
 [29] 0.0000000 0.0000000 0.0000000 0.1666667 0.1666667 0.1666667 0.1666667
 [36] 0.1666667 0.1666667 0.0000000 0.1666667 0.0000000 0.0000000 0.1666667
 [43] 0.1666667 0.0000000 0.1666667 0.1666667 0.0000000 0.0000000 0.0000000
 [50] 0.0000000 0.0000000 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667
 [57] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.0000000 0.0000000
 [64] 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [71] 0.0000000 0.1666667 0.0000000 0.0000000 0.1666667 0.0000000 0.0000000
 [78] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1666667 0.1666667
 [85] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [92] 0.0000000 0.0000000 0.0000000 0.0000000 0.1666667 0.1666667 0.1666667
 [99] 0.0000000 0.0000000 0.0000000 0.1666667 0.1666667 0.0000000 0.0000000
[106] 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[113] 0.0000000 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000 0.1666667
[120] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[127] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[134] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[141] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[148] 0.0000000 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000
> 
> 
> 
> 
> cleanEx()
> nameEx("recode_shadow")
> ### * recode_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recode_shadow
> ### Title: Add special missing values to the shadow matrix
> ### Aliases: recode_shadow
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D df <- tibble::tribble(
> ##D ~wind, ~temp,
> ##D -99,    45,
> ##D 68,    NA,
> ##D 72,    25
> ##D )
> ##D 
> ##D dfs <- bind_shadow(df)
> ##D 
> ##D dfs
> ##D 
> ##D recode_shadow(dfs, temp = .where(wind == -99 ~ "bananas"))
> ##D 
> ##D # need to debug this
> ##D 
> ##D recode_shadow(dfs,
> ##D               temp = .where(wind == -99 ~ "bananas")) %>%
> ##D recode_shadow(wind = .where(wind == -99 ~ "apples"))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("replace_with_na")
> ### * replace_with_na
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_with_na
> ### Title: Replace values with missings
> ### Aliases: replace_with_na
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                          1,   "A",   -100,
+                          3,   "N/A", -99,
+                          NA,  NA,    -98,
+                          -99, "E",   -101,
+                          -98, "F",   -1)
> 
> replace_with_na(dat_ms,
+                replace = list(x = -99))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> replace_with_na(dat_ms,
+              replace = list(x = -98))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> replace_with_na(dat_ms,
+              replace = list(x = c(-99, -98)))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> replace_with_na(dat_ms,
+              replace = list(x = c(-99, -98),
+                           y = c("N/A")))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m      -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> replace_with_na(dat_ms,
+              replace = list(x = c(-99, -98),
+                           y = c("N/A"),
+                           z = c(-101)))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m      -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E        [31mNA[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> 
> 
> cleanEx()
> nameEx("replace_with_na_all")
> ### * replace_with_na_all
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_with_na_all
> ### Title: Replace all values with NA where a certain condition is met
> ### Aliases: replace_with_na_all
> 
> ### ** Examples
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                           1,   "A",   -100,
+                           3,   "N/A", -99,
+                           NA,  NA,    -98,
+                           -99, "E",   -101,
+                           -98, "F",   -1)
> 
> dat_ms
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> #replace all instances of -99 with NA
> replace_with_na_all(data = dat_ms,
+                     condition = ~.x == -99)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A      [31mNA[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> # replace all instances of -98 with NA
> replace_with_na_all(data = dat_ms,
+                     condition = ~.x == -98)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m       [31mNA[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> # replace all instances of -99 or -98 with NA
> replace_with_na_all(dat_ms,
+                     condition = ~.x %in% c(-99, -98))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A      [31mNA[39m
[90m3[39m    [31mNA[39m [31mNA[39m       [31mNA[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> 
> # replace all instances of -99 or -98, or "N/A" with NA
> replace_with_na_all(dat_ms,
+                     condition = ~.x %in% c(-99, -98, "N/A"))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m       [31mNA[39m
[90m3[39m    [31mNA[39m [31mNA[39m       [31mNA[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m    [31mNA[39m F        -[31m1[39m
> # replace all instances of common na strings
> replace_with_na_all(dat_ms,
+                     condition = ~.x %in% common_na_strings)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m      -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> # where works with functions
> replace_with_na_all(airquality, ~ sqrt(.x) < 5)
[90m# A tibble: 153 x 6[39m
   Ozone Solar.R  Wind  Temp Month   Day
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m
[90m 1[39m    41     190    [31mNA[39m    67    [31mNA[39m    [31mNA[39m
[90m 2[39m    36     118    [31mNA[39m    72    [31mNA[39m    [31mNA[39m
[90m 3[39m    [31mNA[39m     149    [31mNA[39m    74    [31mNA[39m    [31mNA[39m
[90m 4[39m    [31mNA[39m     313    [31mNA[39m    62    [31mNA[39m    [31mNA[39m
[90m 5[39m    [31mNA[39m      [31mNA[39m    [31mNA[39m    56    [31mNA[39m    [31mNA[39m
[90m 6[39m    28      [31mNA[39m    [31mNA[39m    66    [31mNA[39m    [31mNA[39m
[90m 7[39m    [31mNA[39m     299    [31mNA[39m    65    [31mNA[39m    [31mNA[39m
[90m 8[39m    [31mNA[39m      99    [31mNA[39m    59    [31mNA[39m    [31mNA[39m
[90m 9[39m    [31mNA[39m      [31mNA[39m    [31mNA[39m    61    [31mNA[39m    [31mNA[39m
[90m10[39m    [31mNA[39m     194    [31mNA[39m    69    [31mNA[39m    [31mNA[39m
[90m# â€¦ with 143 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("replace_with_na_at")
> ### * replace_with_na_at
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_with_na_at
> ### Title: Replace specified variables with NA where a certain condition is
> ###   met
> ### Aliases: replace_with_na_at
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                           1,   "A",   -100,
+                           3,   "N/A", -99,
+                           NA,  NA,    -98,
+                           -99, "E",   -101,
+                           -98, "F",   -1)
> 
> dat_ms
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> replace_with_na_at(data = dat_ms,
+                  .vars = "x",
+                  condition = ~.x == -99)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> replace_with_na_at(data = dat_ms,
+                  .vars = c("x","z"),
+                  condition = ~.x == -99)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A      [31mNA[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m    [31mNA[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> # replace using values in common_na_strings
> replace_with_na_at(data = dat_ms,
+                  .vars = c("x","z"),
+                  condition = ~.x %in% common_na_strings)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("replace_with_na_if")
> ### * replace_with_na_if
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: replace_with_na_if
> ### Title: Replace values with NA based on some condition, for variables
> ###   that meet some predicate
> ### Aliases: replace_with_na_if
> 
> ### ** Examples
> 
> 
> dat_ms <- tibble::tribble(~x,  ~y,    ~z,
+                           1,   "A",   -100,
+                           3,   "N/A", -99,
+                           NA,  NA,    -98,
+                           -99, "E",   -101,
+                           -98, "F",   -1)
> 
> dat_ms
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> replace_with_na_if(data = dat_ms,
+                  .predicate = is.character,
+                  condition = ~.x == "N/A")
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m      -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> replace_with_na_if(data = dat_ms,
+                    .predicate = is.character,
+                    condition = ~.x %in% common_na_strings)
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 [31mNA[39m      -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> replace_with_na(dat_ms,
+               to_na = list(x = c(-99, -98),
+                            y = c("N/A"),
+                            z = c(-101)))
[90m# A tibble: 5 x 3[39m
      x y         z
  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m     1 A      -[31m100[39m
[90m2[39m     3 N/A     -[31m99[39m
[90m3[39m    [31mNA[39m [31mNA[39m      -[31m98[39m
[90m4[39m   -[31m99[39m E      -[31m101[39m
[90m5[39m   -[31m98[39m F        -[31m1[39m
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("riskfactors")
> ### * riskfactors
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: riskfactors
> ### Title: The Behavioral Risk Factor Surveillance System (BRFSS) Survey
> ###   Data, 2009.
> ### Aliases: riskfactors
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> # explore the missingness with vis_miss
> library(naniar)
> 
> vis_miss(riskfactors)
> 
> # Look at the missingness in the variables
> miss_var_summary(riskfactors)
[90m# A tibble: 34 x 3[39m
   variable      n_miss pct_miss
   [3m[90m<chr>[39m[23m          [3m[90m<int>[39m[23m    [3m[90m<dbl>[39m[23m
[90m 1[39m pregnant         215    87.8 
[90m 2[39m smoke_stop       212    86.5 
[90m 3[39m smoke_last       161    65.7 
[90m 4[39m drink_average    135    55.1 
[90m 5[39m drink_days       134    54.7 
[90m 6[39m smoke_days       128    52.2 
[90m 7[39m health_poor      113    46.1 
[90m 8[39m bmi               11     4.49
[90m 9[39m weight_lbs        10     4.08
[90m10[39m diet_fruit         8     3.27
[90m# â€¦ with 24 more rows[39m
> 
> # and now as a plot
> gg_miss_var(riskfactors)
> 
> # Look at the missingness in bmi and poor health
> library(ggplot2)
> p <-
+ ggplot(riskfactors,
+        aes(x = health_poor,
+            y = bmi)) +
+      geom_miss_point()
> 
>  p
> 
>  # for each sex?
>  p + facet_wrap(~sex)
>  # for each education bracket?
>  p + facet_wrap(~education)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™

> nameEx("scoped-impute_mean")
> ### * scoped-impute_mean
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: scoped-impute_mean
> ### Title: Scoped variants of 'impute_mean'
> ### Aliases: scoped-impute_mean impute_mean_all impute_mean_at
> ###   impute_mean_if
> 
> ### ** Examples
> 
> # select variables starting with a particular string.
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> impute_mean_all(airquality)
        Ozone  Solar.R Wind Temp Month Day
1    41.00000 190.0000  7.4   67     5   1
2    36.00000 118.0000  8.0   72     5   2
3    12.00000 149.0000 12.6   74     5   3
4    18.00000 313.0000 11.5   62     5   4
5    42.12931 185.9315 14.3   56     5   5
6    28.00000 185.9315 14.9   66     5   6
7    23.00000 299.0000  8.6   65     5   7
8    19.00000  99.0000 13.8   59     5   8
9     8.00000  19.0000 20.1   61     5   9
10   42.12931 194.0000  8.6   69     5  10
11    7.00000 185.9315  6.9   74     5  11
12   16.00000 256.0000  9.7   69     5  12
13   11.00000 290.0000  9.2   66     5  13
14   14.00000 274.0000 10.9   68     5  14
15   18.00000  65.0000 13.2   58     5  15
16   14.00000 334.0000 11.5   64     5  16
17   34.00000 307.0000 12.0   66     5  17
18    6.00000  78.0000 18.4   57     5  18
19   30.00000 322.0000 11.5   68     5  19
20   11.00000  44.0000  9.7   62     5  20
21    1.00000   8.0000  9.7   59     5  21
22   11.00000 320.0000 16.6   73     5  22
23    4.00000  25.0000  9.7   61     5  23
24   32.00000  92.0000 12.0   61     5  24
25   42.12931  66.0000 16.6   57     5  25
26   42.12931 266.0000 14.9   58     5  26
27   42.12931 185.9315  8.0   57     5  27
28   23.00000  13.0000 12.0   67     5  28
29   45.00000 252.0000 14.9   81     5  29
30  115.00000 223.0000  5.7   79     5  30
31   37.00000 279.0000  7.4   76     5  31
32   42.12931 286.0000  8.6   78     6   1
33   42.12931 287.0000  9.7   74     6   2
34   42.12931 242.0000 16.1   67     6   3
35   42.12931 186.0000  9.2   84     6   4
36   42.12931 220.0000  8.6   85     6   5
37   42.12931 264.0000 14.3   79     6   6
38   29.00000 127.0000  9.7   82     6   7
39   42.12931 273.0000  6.9   87     6   8
40   71.00000 291.0000 13.8   90     6   9
41   39.00000 323.0000 11.5   87     6  10
42   42.12931 259.0000 10.9   93     6  11
43   42.12931 250.0000  9.2   92     6  12
44   23.00000 148.0000  8.0   82     6  13
45   42.12931 332.0000 13.8   80     6  14
46   42.12931 322.0000 11.5   79     6  15
47   21.00000 191.0000 14.9   77     6  16
48   37.00000 284.0000 20.7   72     6  17
49   20.00000  37.0000  9.2   65     6  18
50   12.00000 120.0000 11.5   73     6  19
51   13.00000 137.0000 10.3   76     6  20
52   42.12931 150.0000  6.3   77     6  21
53   42.12931  59.0000  1.7   76     6  22
54   42.12931  91.0000  4.6   76     6  23
55   42.12931 250.0000  6.3   76     6  24
56   42.12931 135.0000  8.0   75     6  25
57   42.12931 127.0000  8.0   78     6  26
58   42.12931  47.0000 10.3   73     6  27
59   42.12931  98.0000 11.5   80     6  28
60   42.12931  31.0000 14.9   77     6  29
61   42.12931 138.0000  8.0   83     6  30
62  135.00000 269.0000  4.1   84     7   1
63   49.00000 248.0000  9.2   85     7   2
64   32.00000 236.0000  9.2   81     7   3
65   42.12931 101.0000 10.9   84     7   4
66   64.00000 175.0000  4.6   83     7   5
67   40.00000 314.0000 10.9   83     7   6
68   77.00000 276.0000  5.1   88     7   7
69   97.00000 267.0000  6.3   92     7   8
70   97.00000 272.0000  5.7   92     7   9
71   85.00000 175.0000  7.4   89     7  10
72   42.12931 139.0000  8.6   82     7  11
73   10.00000 264.0000 14.3   73     7  12
74   27.00000 175.0000 14.9   81     7  13
75   42.12931 291.0000 14.9   91     7  14
76    7.00000  48.0000 14.3   80     7  15
77   48.00000 260.0000  6.9   81     7  16
78   35.00000 274.0000 10.3   82     7  17
79   61.00000 285.0000  6.3   84     7  18
80   79.00000 187.0000  5.1   87     7  19
81   63.00000 220.0000 11.5   85     7  20
82   16.00000   7.0000  6.9   74     7  21
83   42.12931 258.0000  9.7   81     7  22
84   42.12931 295.0000 11.5   82     7  23
85   80.00000 294.0000  8.6   86     7  24
86  108.00000 223.0000  8.0   85     7  25
87   20.00000  81.0000  8.6   82     7  26
88   52.00000  82.0000 12.0   86     7  27
89   82.00000 213.0000  7.4   88     7  28
90   50.00000 275.0000  7.4   86     7  29
91   64.00000 253.0000  7.4   83     7  30
92   59.00000 254.0000  9.2   81     7  31
93   39.00000  83.0000  6.9   81     8   1
94    9.00000  24.0000 13.8   81     8   2
95   16.00000  77.0000  7.4   82     8   3
96   78.00000 185.9315  6.9   86     8   4
97   35.00000 185.9315  7.4   85     8   5
98   66.00000 185.9315  4.6   87     8   6
99  122.00000 255.0000  4.0   89     8   7
100  89.00000 229.0000 10.3   90     8   8
101 110.00000 207.0000  8.0   90     8   9
102  42.12931 222.0000  8.6   92     8  10
103  42.12931 137.0000 11.5   86     8  11
104  44.00000 192.0000 11.5   86     8  12
105  28.00000 273.0000 11.5   82     8  13
106  65.00000 157.0000  9.7   80     8  14
107  42.12931  64.0000 11.5   79     8  15
108  22.00000  71.0000 10.3   77     8  16
109  59.00000  51.0000  6.3   79     8  17
110  23.00000 115.0000  7.4   76     8  18
111  31.00000 244.0000 10.9   78     8  19
112  44.00000 190.0000 10.3   78     8  20
113  21.00000 259.0000 15.5   77     8  21
114   9.00000  36.0000 14.3   72     8  22
115  42.12931 255.0000 12.6   75     8  23
116  45.00000 212.0000  9.7   79     8  24
117 168.00000 238.0000  3.4   81     8  25
118  73.00000 215.0000  8.0   86     8  26
119  42.12931 153.0000  5.7   88     8  27
120  76.00000 203.0000  9.7   97     8  28
121 118.00000 225.0000  2.3   94     8  29
122  84.00000 237.0000  6.3   96     8  30
123  85.00000 188.0000  6.3   94     8  31
124  96.00000 167.0000  6.9   91     9   1
125  78.00000 197.0000  5.1   92     9   2
126  73.00000 183.0000  2.8   93     9   3
127  91.00000 189.0000  4.6   93     9   4
128  47.00000  95.0000  7.4   87     9   5
129  32.00000  92.0000 15.5   84     9   6
130  20.00000 252.0000 10.9   80     9   7
131  23.00000 220.0000 10.3   78     9   8
132  21.00000 230.0000 10.9   75     9   9
133  24.00000 259.0000  9.7   73     9  10
134  44.00000 236.0000 14.9   81     9  11
135  21.00000 259.0000 15.5   76     9  12
136  28.00000 238.0000  6.3   77     9  13
137   9.00000  24.0000 10.9   71     9  14
138  13.00000 112.0000 11.5   71     9  15
139  46.00000 237.0000  6.9   78     9  16
140  18.00000 224.0000 13.8   67     9  17
141  13.00000  27.0000 10.3   76     9  18
142  24.00000 238.0000 10.3   68     9  19
143  16.00000 201.0000  8.0   82     9  20
144  13.00000 238.0000 12.6   64     9  21
145  23.00000  14.0000  9.2   71     9  22
146  36.00000 139.0000 10.3   81     9  23
147   7.00000  49.0000 10.3   69     9  24
148  14.00000  20.0000 16.6   63     9  25
149  30.00000 193.0000  6.9   70     9  26
150  42.12931 145.0000 13.2   77     9  27
151  14.00000 191.0000 14.3   75     9  28
152  18.00000 131.0000  8.0   76     9  29
153  20.00000 223.0000 11.5   68     9  30
> 
> impute_mean_at(airquality,
+                .vars = c("Ozone", "Solar.R"))
        Ozone  Solar.R Wind Temp Month Day
1    41.00000 190.0000  7.4   67     5   1
2    36.00000 118.0000  8.0   72     5   2
3    12.00000 149.0000 12.6   74     5   3
4    18.00000 313.0000 11.5   62     5   4
5    42.12931 185.9315 14.3   56     5   5
6    28.00000 185.9315 14.9   66     5   6
7    23.00000 299.0000  8.6   65     5   7
8    19.00000  99.0000 13.8   59     5   8
9     8.00000  19.0000 20.1   61     5   9
10   42.12931 194.0000  8.6   69     5  10
11    7.00000 185.9315  6.9   74     5  11
12   16.00000 256.0000  9.7   69     5  12
13   11.00000 290.0000  9.2   66     5  13
14   14.00000 274.0000 10.9   68     5  14
15   18.00000  65.0000 13.2   58     5  15
16   14.00000 334.0000 11.5   64     5  16
17   34.00000 307.0000 12.0   66     5  17
18    6.00000  78.0000 18.4   57     5  18
19   30.00000 322.0000 11.5   68     5  19
20   11.00000  44.0000  9.7   62     5  20
21    1.00000   8.0000  9.7   59     5  21
22   11.00000 320.0000 16.6   73     5  22
23    4.00000  25.0000  9.7   61     5  23
24   32.00000  92.0000 12.0   61     5  24
25   42.12931  66.0000 16.6   57     5  25
26   42.12931 266.0000 14.9   58     5  26
27   42.12931 185.9315  8.0   57     5  27
28   23.00000  13.0000 12.0   67     5  28
29   45.00000 252.0000 14.9   81     5  29
30  115.00000 223.0000  5.7   79     5  30
31   37.00000 279.0000  7.4   76     5  31
32   42.12931 286.0000  8.6   78     6   1
33   42.12931 287.0000  9.7   74     6   2
34   42.12931 242.0000 16.1   67     6   3
35   42.12931 186.0000  9.2   84     6   4
36   42.12931 220.0000  8.6   85     6   5
37   42.12931 264.0000 14.3   79     6   6
38   29.00000 127.0000  9.7   82     6   7
39   42.12931 273.0000  6.9   87     6   8
40   71.00000 291.0000 13.8   90     6   9
41   39.00000 323.0000 11.5   87     6  10
42   42.12931 259.0000 10.9   93     6  11
43   42.12931 250.0000  9.2   92     6  12
44   23.00000 148.0000  8.0   82     6  13
45   42.12931 332.0000 13.8   80     6  14
46   42.12931 322.0000 11.5   79     6  15
47   21.00000 191.0000 14.9   77     6  16
48   37.00000 284.0000 20.7   72     6  17
49   20.00000  37.0000  9.2   65     6  18
50   12.00000 120.0000 11.5   73     6  19
51   13.00000 137.0000 10.3   76     6  20
52   42.12931 150.0000  6.3   77     6  21
53   42.12931  59.0000  1.7   76     6  22
54   42.12931  91.0000  4.6   76     6  23
55   42.12931 250.0000  6.3   76     6  24
56   42.12931 135.0000  8.0   75     6  25
57   42.12931 127.0000  8.0   78     6  26
58   42.12931  47.0000 10.3   73     6  27
59   42.12931  98.0000 11.5   80     6  28
60   42.12931  31.0000 14.9   77     6  29
61   42.12931 138.0000  8.0   83     6  30
62  135.00000 269.0000  4.1   84     7   1
63   49.00000 248.0000  9.2   85     7   2
64   32.00000 236.0000  9.2   81     7   3
65   42.12931 101.0000 10.9   84     7   4
66   64.00000 175.0000  4.6   83     7   5
67   40.00000 314.0000 10.9   83     7   6
68   77.00000 276.0000  5.1   88     7   7
69   97.00000 267.0000  6.3   92     7   8
70   97.00000 272.0000  5.7   92     7   9
71   85.00000 175.0000  7.4   89     7  10
72   42.12931 139.0000  8.6   82     7  11
73   10.00000 264.0000 14.3   73     7  12
74   27.00000 175.0000 14.9   81     7  13
75   42.12931 291.0000 14.9   91     7  14
76    7.00000  48.0000 14.3   80     7  15
77   48.00000 260.0000  6.9   81     7  16
78   35.00000 274.0000 10.3   82     7  17
79   61.00000 285.0000  6.3   84     7  18
80   79.00000 187.0000  5.1   87     7  19
81   63.00000 220.0000 11.5   85     7  20
82   16.00000   7.0000  6.9   74     7  21
83   42.12931 258.0000  9.7   81     7  22
84   42.12931 295.0000 11.5   82     7  23
85   80.00000 294.0000  8.6   86     7  24
86  108.00000 223.0000  8.0   85     7  25
87   20.00000  81.0000  8.6   82     7  26
88   52.00000  82.0000 12.0   86     7  27
89   82.00000 213.0000  7.4   88     7  28
90   50.00000 275.0000  7.4   86     7  29
91   64.00000 253.0000  7.4   83     7  30
92   59.00000 254.0000  9.2   81     7  31
93   39.00000  83.0000  6.9   81     8   1
94    9.00000  24.0000 13.8   81     8   2
95   16.00000  77.0000  7.4   82     8   3
96   78.00000 185.9315  6.9   86     8   4
97   35.00000 185.9315  7.4   85     8   5
98   66.00000 185.9315  4.6   87     8   6
99  122.00000 255.0000  4.0   89     8   7
100  89.00000 229.0000 10.3   90     8   8
101 110.00000 207.0000  8.0   90     8   9
102  42.12931 222.0000  8.6   92     8  10
103  42.12931 137.0000 11.5   86     8  11
104  44.00000 192.0000 11.5   86     8  12
105  28.00000 273.0000 11.5   82     8  13
106  65.00000 157.0000  9.7   80     8  14
107  42.12931  64.0000 11.5   79     8  15
108  22.00000  71.0000 10.3   77     8  16
109  59.00000  51.0000  6.3   79     8  17
110  23.00000 115.0000  7.4   76     8  18
111  31.00000 244.0000 10.9   78     8  19
112  44.00000 190.0000 10.3   78     8  20
113  21.00000 259.0000 15.5   77     8  21
114   9.00000  36.0000 14.3   72     8  22
115  42.12931 255.0000 12.6   75     8  23
116  45.00000 212.0000  9.7   79     8  24
117 168.00000 238.0000  3.4   81     8  25
118  73.00000 215.0000  8.0   86     8  26
119  42.12931 153.0000  5.7   88     8  27
120  76.00000 203.0000  9.7   97     8  28
121 118.00000 225.0000  2.3   94     8  29
122  84.00000 237.0000  6.3   96     8  30
123  85.00000 188.0000  6.3   94     8  31
124  96.00000 167.0000  6.9   91     9   1
125  78.00000 197.0000  5.1   92     9   2
126  73.00000 183.0000  2.8   93     9   3
127  91.00000 189.0000  4.6   93     9   4
128  47.00000  95.0000  7.4   87     9   5
129  32.00000  92.0000 15.5   84     9   6
130  20.00000 252.0000 10.9   80     9   7
131  23.00000 220.0000 10.3   78     9   8
132  21.00000 230.0000 10.9   75     9   9
133  24.00000 259.0000  9.7   73     9  10
134  44.00000 236.0000 14.9   81     9  11
135  21.00000 259.0000 15.5   76     9  12
136  28.00000 238.0000  6.3   77     9  13
137   9.00000  24.0000 10.9   71     9  14
138  13.00000 112.0000 11.5   71     9  15
139  46.00000 237.0000  6.9   78     9  16
140  18.00000 224.0000 13.8   67     9  17
141  13.00000  27.0000 10.3   76     9  18
142  24.00000 238.0000 10.3   68     9  19
143  16.00000 201.0000  8.0   82     9  20
144  13.00000 238.0000 12.6   64     9  21
145  23.00000  14.0000  9.2   71     9  22
146  36.00000 139.0000 10.3   81     9  23
147   7.00000  49.0000 10.3   69     9  24
148  14.00000  20.0000 16.6   63     9  25
149  30.00000 193.0000  6.9   70     9  26
150  42.12931 145.0000 13.2   77     9  27
151  14.00000 191.0000 14.3   75     9  28
152  18.00000 131.0000  8.0   76     9  29
153  20.00000 223.0000 11.5   68     9  30
> 
> impute_mean_at(airquality,
+                 .vars = vars(Ozone))
        Ozone Solar.R Wind Temp Month Day
1    41.00000     190  7.4   67     5   1
2    36.00000     118  8.0   72     5   2
3    12.00000     149 12.6   74     5   3
4    18.00000     313 11.5   62     5   4
5    42.12931      NA 14.3   56     5   5
6    28.00000      NA 14.9   66     5   6
7    23.00000     299  8.6   65     5   7
8    19.00000      99 13.8   59     5   8
9     8.00000      19 20.1   61     5   9
10   42.12931     194  8.6   69     5  10
11    7.00000      NA  6.9   74     5  11
12   16.00000     256  9.7   69     5  12
13   11.00000     290  9.2   66     5  13
14   14.00000     274 10.9   68     5  14
15   18.00000      65 13.2   58     5  15
16   14.00000     334 11.5   64     5  16
17   34.00000     307 12.0   66     5  17
18    6.00000      78 18.4   57     5  18
19   30.00000     322 11.5   68     5  19
20   11.00000      44  9.7   62     5  20
21    1.00000       8  9.7   59     5  21
22   11.00000     320 16.6   73     5  22
23    4.00000      25  9.7   61     5  23
24   32.00000      92 12.0   61     5  24
25   42.12931      66 16.6   57     5  25
26   42.12931     266 14.9   58     5  26
27   42.12931      NA  8.0   57     5  27
28   23.00000      13 12.0   67     5  28
29   45.00000     252 14.9   81     5  29
30  115.00000     223  5.7   79     5  30
31   37.00000     279  7.4   76     5  31
32   42.12931     286  8.6   78     6   1
33   42.12931     287  9.7   74     6   2
34   42.12931     242 16.1   67     6   3
35   42.12931     186  9.2   84     6   4
36   42.12931     220  8.6   85     6   5
37   42.12931     264 14.3   79     6   6
38   29.00000     127  9.7   82     6   7
39   42.12931     273  6.9   87     6   8
40   71.00000     291 13.8   90     6   9
41   39.00000     323 11.5   87     6  10
42   42.12931     259 10.9   93     6  11
43   42.12931     250  9.2   92     6  12
44   23.00000     148  8.0   82     6  13
45   42.12931     332 13.8   80     6  14
46   42.12931     322 11.5   79     6  15
47   21.00000     191 14.9   77     6  16
48   37.00000     284 20.7   72     6  17
49   20.00000      37  9.2   65     6  18
50   12.00000     120 11.5   73     6  19
51   13.00000     137 10.3   76     6  20
52   42.12931     150  6.3   77     6  21
53   42.12931      59  1.7   76     6  22
54   42.12931      91  4.6   76     6  23
55   42.12931     250  6.3   76     6  24
56   42.12931     135  8.0   75     6  25
57   42.12931     127  8.0   78     6  26
58   42.12931      47 10.3   73     6  27
59   42.12931      98 11.5   80     6  28
60   42.12931      31 14.9   77     6  29
61   42.12931     138  8.0   83     6  30
62  135.00000     269  4.1   84     7   1
63   49.00000     248  9.2   85     7   2
64   32.00000     236  9.2   81     7   3
65   42.12931     101 10.9   84     7   4
66   64.00000     175  4.6   83     7   5
67   40.00000     314 10.9   83     7   6
68   77.00000     276  5.1   88     7   7
69   97.00000     267  6.3   92     7   8
70   97.00000     272  5.7   92     7   9
71   85.00000     175  7.4   89     7  10
72   42.12931     139  8.6   82     7  11
73   10.00000     264 14.3   73     7  12
74   27.00000     175 14.9   81     7  13
75   42.12931     291 14.9   91     7  14
76    7.00000      48 14.3   80     7  15
77   48.00000     260  6.9   81     7  16
78   35.00000     274 10.3   82     7  17
79   61.00000     285  6.3   84     7  18
80   79.00000     187  5.1   87     7  19
81   63.00000     220 11.5   85     7  20
82   16.00000       7  6.9   74     7  21
83   42.12931     258  9.7   81     7  22
84   42.12931     295 11.5   82     7  23
85   80.00000     294  8.6   86     7  24
86  108.00000     223  8.0   85     7  25
87   20.00000      81  8.6   82     7  26
88   52.00000      82 12.0   86     7  27
89   82.00000     213  7.4   88     7  28
90   50.00000     275  7.4   86     7  29
91   64.00000     253  7.4   83     7  30
92   59.00000     254  9.2   81     7  31
93   39.00000      83  6.9   81     8   1
94    9.00000      24 13.8   81     8   2
95   16.00000      77  7.4   82     8   3
96   78.00000      NA  6.9   86     8   4
97   35.00000      NA  7.4   85     8   5
98   66.00000      NA  4.6   87     8   6
99  122.00000     255  4.0   89     8   7
100  89.00000     229 10.3   90     8   8
101 110.00000     207  8.0   90     8   9
102  42.12931     222  8.6   92     8  10
103  42.12931     137 11.5   86     8  11
104  44.00000     192 11.5   86     8  12
105  28.00000     273 11.5   82     8  13
106  65.00000     157  9.7   80     8  14
107  42.12931      64 11.5   79     8  15
108  22.00000      71 10.3   77     8  16
109  59.00000      51  6.3   79     8  17
110  23.00000     115  7.4   76     8  18
111  31.00000     244 10.9   78     8  19
112  44.00000     190 10.3   78     8  20
113  21.00000     259 15.5   77     8  21
114   9.00000      36 14.3   72     8  22
115  42.12931     255 12.6   75     8  23
116  45.00000     212  9.7   79     8  24
117 168.00000     238  3.4   81     8  25
118  73.00000     215  8.0   86     8  26
119  42.12931     153  5.7   88     8  27
120  76.00000     203  9.7   97     8  28
121 118.00000     225  2.3   94     8  29
122  84.00000     237  6.3   96     8  30
123  85.00000     188  6.3   94     8  31
124  96.00000     167  6.9   91     9   1
125  78.00000     197  5.1   92     9   2
126  73.00000     183  2.8   93     9   3
127  91.00000     189  4.6   93     9   4
128  47.00000      95  7.4   87     9   5
129  32.00000      92 15.5   84     9   6
130  20.00000     252 10.9   80     9   7
131  23.00000     220 10.3   78     9   8
132  21.00000     230 10.9   75     9   9
133  24.00000     259  9.7   73     9  10
134  44.00000     236 14.9   81     9  11
135  21.00000     259 15.5   76     9  12
136  28.00000     238  6.3   77     9  13
137   9.00000      24 10.9   71     9  14
138  13.00000     112 11.5   71     9  15
139  46.00000     237  6.9   78     9  16
140  18.00000     224 13.8   67     9  17
141  13.00000      27 10.3   76     9  18
142  24.00000     238 10.3   68     9  19
143  16.00000     201  8.0   82     9  20
144  13.00000     238 12.6   64     9  21
145  23.00000      14  9.2   71     9  22
146  36.00000     139 10.3   81     9  23
147   7.00000      49 10.3   69     9  24
148  14.00000      20 16.6   63     9  25
149  30.00000     193  6.9   70     9  26
150  42.12931     145 13.2   77     9  27
151  14.00000     191 14.3   75     9  28
152  18.00000     131  8.0   76     9  29
153  20.00000     223 11.5   68     9  30
> 
> impute_mean_if(airquality,
+                 .predicate = is.numeric)
        Ozone  Solar.R Wind Temp Month Day
1    41.00000 190.0000  7.4   67     5   1
2    36.00000 118.0000  8.0   72     5   2
3    12.00000 149.0000 12.6   74     5   3
4    18.00000 313.0000 11.5   62     5   4
5    42.12931 185.9315 14.3   56     5   5
6    28.00000 185.9315 14.9   66     5   6
7    23.00000 299.0000  8.6   65     5   7
8    19.00000  99.0000 13.8   59     5   8
9     8.00000  19.0000 20.1   61     5   9
10   42.12931 194.0000  8.6   69     5  10
11    7.00000 185.9315  6.9   74     5  11
12   16.00000 256.0000  9.7   69     5  12
13   11.00000 290.0000  9.2   66     5  13
14   14.00000 274.0000 10.9   68     5  14
15   18.00000  65.0000 13.2   58     5  15
16   14.00000 334.0000 11.5   64     5  16
17   34.00000 307.0000 12.0   66     5  17
18    6.00000  78.0000 18.4   57     5  18
19   30.00000 322.0000 11.5   68     5  19
20   11.00000  44.0000  9.7   62     5  20
21    1.00000   8.0000  9.7   59     5  21
22   11.00000 320.0000 16.6   73     5  22
23    4.00000  25.0000  9.7   61     5  23
24   32.00000  92.0000 12.0   61     5  24
25   42.12931  66.0000 16.6   57     5  25
26   42.12931 266.0000 14.9   58     5  26
27   42.12931 185.9315  8.0   57     5  27
28   23.00000  13.0000 12.0   67     5  28
29   45.00000 252.0000 14.9   81     5  29
30  115.00000 223.0000  5.7   79     5  30
31   37.00000 279.0000  7.4   76     5  31
32   42.12931 286.0000  8.6   78     6   1
33   42.12931 287.0000  9.7   74     6   2
34   42.12931 242.0000 16.1   67     6   3
35   42.12931 186.0000  9.2   84     6   4
36   42.12931 220.0000  8.6   85     6   5
37   42.12931 264.0000 14.3   79     6   6
38   29.00000 127.0000  9.7   82     6   7
39   42.12931 273.0000  6.9   87     6   8
40   71.00000 291.0000 13.8   90     6   9
41   39.00000 323.0000 11.5   87     6  10
42   42.12931 259.0000 10.9   93     6  11
43   42.12931 250.0000  9.2   92     6  12
44   23.00000 148.0000  8.0   82     6  13
45   42.12931 332.0000 13.8   80     6  14
46   42.12931 322.0000 11.5   79     6  15
47   21.00000 191.0000 14.9   77     6  16
48   37.00000 284.0000 20.7   72     6  17
49   20.00000  37.0000  9.2   65     6  18
50   12.00000 120.0000 11.5   73     6  19
51   13.00000 137.0000 10.3   76     6  20
52   42.12931 150.0000  6.3   77     6  21
53   42.12931  59.0000  1.7   76     6  22
54   42.12931  91.0000  4.6   76     6  23
55   42.12931 250.0000  6.3   76     6  24
56   42.12931 135.0000  8.0   75     6  25
57   42.12931 127.0000  8.0   78     6  26
58   42.12931  47.0000 10.3   73     6  27
59   42.12931  98.0000 11.5   80     6  28
60   42.12931  31.0000 14.9   77     6  29
61   42.12931 138.0000  8.0   83     6  30
62  135.00000 269.0000  4.1   84     7   1
63   49.00000 248.0000  9.2   85     7   2
64   32.00000 236.0000  9.2   81     7   3
65   42.12931 101.0000 10.9   84     7   4
66   64.00000 175.0000  4.6   83     7   5
67   40.00000 314.0000 10.9   83     7   6
68   77.00000 276.0000  5.1   88     7   7
69   97.00000 267.0000  6.3   92     7   8
70   97.00000 272.0000  5.7   92     7   9
71   85.00000 175.0000  7.4   89     7  10
72   42.12931 139.0000  8.6   82     7  11
73   10.00000 264.0000 14.3   73     7  12
74   27.00000 175.0000 14.9   81     7  13
75   42.12931 291.0000 14.9   91     7  14
76    7.00000  48.0000 14.3   80     7  15
77   48.00000 260.0000  6.9   81     7  16
78   35.00000 274.0000 10.3   82     7  17
79   61.00000 285.0000  6.3   84     7  18
80   79.00000 187.0000  5.1   87     7  19
81   63.00000 220.0000 11.5   85     7  20
82   16.00000   7.0000  6.9   74     7  21
83   42.12931 258.0000  9.7   81     7  22
84   42.12931 295.0000 11.5   82     7  23
85   80.00000 294.0000  8.6   86     7  24
86  108.00000 223.0000  8.0   85     7  25
87   20.00000  81.0000  8.6   82     7  26
88   52.00000  82.0000 12.0   86     7  27
89   82.00000 213.0000  7.4   88     7  28
90   50.00000 275.0000  7.4   86     7  29
91   64.00000 253.0000  7.4   83     7  30
92   59.00000 254.0000  9.2   81     7  31
93   39.00000  83.0000  6.9   81     8   1
94    9.00000  24.0000 13.8   81     8   2
95   16.00000  77.0000  7.4   82     8   3
96   78.00000 185.9315  6.9   86     8   4
97   35.00000 185.9315  7.4   85     8   5
98   66.00000 185.9315  4.6   87     8   6
99  122.00000 255.0000  4.0   89     8   7
100  89.00000 229.0000 10.3   90     8   8
101 110.00000 207.0000  8.0   90     8   9
102  42.12931 222.0000  8.6   92     8  10
103  42.12931 137.0000 11.5   86     8  11
104  44.00000 192.0000 11.5   86     8  12
105  28.00000 273.0000 11.5   82     8  13
106  65.00000 157.0000  9.7   80     8  14
107  42.12931  64.0000 11.5   79     8  15
108  22.00000  71.0000 10.3   77     8  16
109  59.00000  51.0000  6.3   79     8  17
110  23.00000 115.0000  7.4   76     8  18
111  31.00000 244.0000 10.9   78     8  19
112  44.00000 190.0000 10.3   78     8  20
113  21.00000 259.0000 15.5   77     8  21
114   9.00000  36.0000 14.3   72     8  22
115  42.12931 255.0000 12.6   75     8  23
116  45.00000 212.0000  9.7   79     8  24
117 168.00000 238.0000  3.4   81     8  25
118  73.00000 215.0000  8.0   86     8  26
119  42.12931 153.0000  5.7   88     8  27
120  76.00000 203.0000  9.7   97     8  28
121 118.00000 225.0000  2.3   94     8  29
122  84.00000 237.0000  6.3   96     8  30
123  85.00000 188.0000  6.3   94     8  31
124  96.00000 167.0000  6.9   91     9   1
125  78.00000 197.0000  5.1   92     9   2
126  73.00000 183.0000  2.8   93     9   3
127  91.00000 189.0000  4.6   93     9   4
128  47.00000  95.0000  7.4   87     9   5
129  32.00000  92.0000 15.5   84     9   6
130  20.00000 252.0000 10.9   80     9   7
131  23.00000 220.0000 10.3   78     9   8
132  21.00000 230.0000 10.9   75     9   9
133  24.00000 259.0000  9.7   73     9  10
134  44.00000 236.0000 14.9   81     9  11
135  21.00000 259.0000 15.5   76     9  12
136  28.00000 238.0000  6.3   77     9  13
137   9.00000  24.0000 10.9   71     9  14
138  13.00000 112.0000 11.5   71     9  15
139  46.00000 237.0000  6.9   78     9  16
140  18.00000 224.0000 13.8   67     9  17
141  13.00000  27.0000 10.3   76     9  18
142  24.00000 238.0000 10.3   68     9  19
143  16.00000 201.0000  8.0   82     9  20
144  13.00000 238.0000 12.6   64     9  21
145  23.00000  14.0000  9.2   71     9  22
146  36.00000 139.0000 10.3   81     9  23
147   7.00000  49.0000 10.3   69     9  24
148  14.00000  20.0000 16.6   63     9  25
149  30.00000 193.0000  6.9   70     9  26
150  42.12931 145.0000 13.2   77     9  27
151  14.00000 191.0000 14.3   75     9  28
152  18.00000 131.0000  8.0   76     9  29
153  20.00000 223.0000 11.5   68     9  30
> 
> ## Not run: 
> ##D library(ggplot2)
> ##D airquality %>%
> ##D   bind_shadow() %>%
> ##D   impute_mean_all() %>%
> ##D   add_label_shadow() %>%
> ##D   ggplot(aes(x = Ozone,
> ##D              y = Solar.R,
> ##D              colour = any_missing)) +
> ##D          geom_point()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("scoped-impute_median")
> ### * scoped-impute_median
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: scoped-impute_median
> ### Title: Scoped variants of 'impute_median'
> ### Aliases: scoped-impute_median impute_median_all impute_median_at
> ###   impute_median_if
> 
> ### ** Examples
> 
> # select variables starting with a particular string.
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> impute_median_all(airquality)
    Ozone Solar.R Wind Temp Month Day
1    41.0     190  7.4   67     5   1
2    36.0     118  8.0   72     5   2
3    12.0     149 12.6   74     5   3
4    18.0     313 11.5   62     5   4
5    31.5     205 14.3   56     5   5
6    28.0     205 14.9   66     5   6
7    23.0     299  8.6   65     5   7
8    19.0      99 13.8   59     5   8
9     8.0      19 20.1   61     5   9
10   31.5     194  8.6   69     5  10
11    7.0     205  6.9   74     5  11
12   16.0     256  9.7   69     5  12
13   11.0     290  9.2   66     5  13
14   14.0     274 10.9   68     5  14
15   18.0      65 13.2   58     5  15
16   14.0     334 11.5   64     5  16
17   34.0     307 12.0   66     5  17
18    6.0      78 18.4   57     5  18
19   30.0     322 11.5   68     5  19
20   11.0      44  9.7   62     5  20
21    1.0       8  9.7   59     5  21
22   11.0     320 16.6   73     5  22
23    4.0      25  9.7   61     5  23
24   32.0      92 12.0   61     5  24
25   31.5      66 16.6   57     5  25
26   31.5     266 14.9   58     5  26
27   31.5     205  8.0   57     5  27
28   23.0      13 12.0   67     5  28
29   45.0     252 14.9   81     5  29
30  115.0     223  5.7   79     5  30
31   37.0     279  7.4   76     5  31
32   31.5     286  8.6   78     6   1
33   31.5     287  9.7   74     6   2
34   31.5     242 16.1   67     6   3
35   31.5     186  9.2   84     6   4
36   31.5     220  8.6   85     6   5
37   31.5     264 14.3   79     6   6
38   29.0     127  9.7   82     6   7
39   31.5     273  6.9   87     6   8
40   71.0     291 13.8   90     6   9
41   39.0     323 11.5   87     6  10
42   31.5     259 10.9   93     6  11
43   31.5     250  9.2   92     6  12
44   23.0     148  8.0   82     6  13
45   31.5     332 13.8   80     6  14
46   31.5     322 11.5   79     6  15
47   21.0     191 14.9   77     6  16
48   37.0     284 20.7   72     6  17
49   20.0      37  9.2   65     6  18
50   12.0     120 11.5   73     6  19
51   13.0     137 10.3   76     6  20
52   31.5     150  6.3   77     6  21
53   31.5      59  1.7   76     6  22
54   31.5      91  4.6   76     6  23
55   31.5     250  6.3   76     6  24
56   31.5     135  8.0   75     6  25
57   31.5     127  8.0   78     6  26
58   31.5      47 10.3   73     6  27
59   31.5      98 11.5   80     6  28
60   31.5      31 14.9   77     6  29
61   31.5     138  8.0   83     6  30
62  135.0     269  4.1   84     7   1
63   49.0     248  9.2   85     7   2
64   32.0     236  9.2   81     7   3
65   31.5     101 10.9   84     7   4
66   64.0     175  4.6   83     7   5
67   40.0     314 10.9   83     7   6
68   77.0     276  5.1   88     7   7
69   97.0     267  6.3   92     7   8
70   97.0     272  5.7   92     7   9
71   85.0     175  7.4   89     7  10
72   31.5     139  8.6   82     7  11
73   10.0     264 14.3   73     7  12
74   27.0     175 14.9   81     7  13
75   31.5     291 14.9   91     7  14
76    7.0      48 14.3   80     7  15
77   48.0     260  6.9   81     7  16
78   35.0     274 10.3   82     7  17
79   61.0     285  6.3   84     7  18
80   79.0     187  5.1   87     7  19
81   63.0     220 11.5   85     7  20
82   16.0       7  6.9   74     7  21
83   31.5     258  9.7   81     7  22
84   31.5     295 11.5   82     7  23
85   80.0     294  8.6   86     7  24
86  108.0     223  8.0   85     7  25
87   20.0      81  8.6   82     7  26
88   52.0      82 12.0   86     7  27
89   82.0     213  7.4   88     7  28
90   50.0     275  7.4   86     7  29
91   64.0     253  7.4   83     7  30
92   59.0     254  9.2   81     7  31
93   39.0      83  6.9   81     8   1
94    9.0      24 13.8   81     8   2
95   16.0      77  7.4   82     8   3
96   78.0     205  6.9   86     8   4
97   35.0     205  7.4   85     8   5
98   66.0     205  4.6   87     8   6
99  122.0     255  4.0   89     8   7
100  89.0     229 10.3   90     8   8
101 110.0     207  8.0   90     8   9
102  31.5     222  8.6   92     8  10
103  31.5     137 11.5   86     8  11
104  44.0     192 11.5   86     8  12
105  28.0     273 11.5   82     8  13
106  65.0     157  9.7   80     8  14
107  31.5      64 11.5   79     8  15
108  22.0      71 10.3   77     8  16
109  59.0      51  6.3   79     8  17
110  23.0     115  7.4   76     8  18
111  31.0     244 10.9   78     8  19
112  44.0     190 10.3   78     8  20
113  21.0     259 15.5   77     8  21
114   9.0      36 14.3   72     8  22
115  31.5     255 12.6   75     8  23
116  45.0     212  9.7   79     8  24
117 168.0     238  3.4   81     8  25
118  73.0     215  8.0   86     8  26
119  31.5     153  5.7   88     8  27
120  76.0     203  9.7   97     8  28
121 118.0     225  2.3   94     8  29
122  84.0     237  6.3   96     8  30
123  85.0     188  6.3   94     8  31
124  96.0     167  6.9   91     9   1
125  78.0     197  5.1   92     9   2
126  73.0     183  2.8   93     9   3
127  91.0     189  4.6   93     9   4
128  47.0      95  7.4   87     9   5
129  32.0      92 15.5   84     9   6
130  20.0     252 10.9   80     9   7
131  23.0     220 10.3   78     9   8
132  21.0     230 10.9   75     9   9
133  24.0     259  9.7   73     9  10
134  44.0     236 14.9   81     9  11
135  21.0     259 15.5   76     9  12
136  28.0     238  6.3   77     9  13
137   9.0      24 10.9   71     9  14
138  13.0     112 11.5   71     9  15
139  46.0     237  6.9   78     9  16
140  18.0     224 13.8   67     9  17
141  13.0      27 10.3   76     9  18
142  24.0     238 10.3   68     9  19
143  16.0     201  8.0   82     9  20
144  13.0     238 12.6   64     9  21
145  23.0      14  9.2   71     9  22
146  36.0     139 10.3   81     9  23
147   7.0      49 10.3   69     9  24
148  14.0      20 16.6   63     9  25
149  30.0     193  6.9   70     9  26
150  31.5     145 13.2   77     9  27
151  14.0     191 14.3   75     9  28
152  18.0     131  8.0   76     9  29
153  20.0     223 11.5   68     9  30
> 
> impute_median_at(airquality,
+                .vars = c("Ozone", "Solar.R"))
    Ozone Solar.R Wind Temp Month Day
1    41.0     190  7.4   67     5   1
2    36.0     118  8.0   72     5   2
3    12.0     149 12.6   74     5   3
4    18.0     313 11.5   62     5   4
5    31.5     205 14.3   56     5   5
6    28.0     205 14.9   66     5   6
7    23.0     299  8.6   65     5   7
8    19.0      99 13.8   59     5   8
9     8.0      19 20.1   61     5   9
10   31.5     194  8.6   69     5  10
11    7.0     205  6.9   74     5  11
12   16.0     256  9.7   69     5  12
13   11.0     290  9.2   66     5  13
14   14.0     274 10.9   68     5  14
15   18.0      65 13.2   58     5  15
16   14.0     334 11.5   64     5  16
17   34.0     307 12.0   66     5  17
18    6.0      78 18.4   57     5  18
19   30.0     322 11.5   68     5  19
20   11.0      44  9.7   62     5  20
21    1.0       8  9.7   59     5  21
22   11.0     320 16.6   73     5  22
23    4.0      25  9.7   61     5  23
24   32.0      92 12.0   61     5  24
25   31.5      66 16.6   57     5  25
26   31.5     266 14.9   58     5  26
27   31.5     205  8.0   57     5  27
28   23.0      13 12.0   67     5  28
29   45.0     252 14.9   81     5  29
30  115.0     223  5.7   79     5  30
31   37.0     279  7.4   76     5  31
32   31.5     286  8.6   78     6   1
33   31.5     287  9.7   74     6   2
34   31.5     242 16.1   67     6   3
35   31.5     186  9.2   84     6   4
36   31.5     220  8.6   85     6   5
37   31.5     264 14.3   79     6   6
38   29.0     127  9.7   82     6   7
39   31.5     273  6.9   87     6   8
40   71.0     291 13.8   90     6   9
41   39.0     323 11.5   87     6  10
42   31.5     259 10.9   93     6  11
43   31.5     250  9.2   92     6  12
44   23.0     148  8.0   82     6  13
45   31.5     332 13.8   80     6  14
46   31.5     322 11.5   79     6  15
47   21.0     191 14.9   77     6  16
48   37.0     284 20.7   72     6  17
49   20.0      37  9.2   65     6  18
50   12.0     120 11.5   73     6  19
51   13.0     137 10.3   76     6  20
52   31.5     150  6.3   77     6  21
53   31.5      59  1.7   76     6  22
54   31.5      91  4.6   76     6  23
55   31.5     250  6.3   76     6  24
56   31.5     135  8.0   75     6  25
57   31.5     127  8.0   78     6  26
58   31.5      47 10.3   73     6  27
59   31.5      98 11.5   80     6  28
60   31.5      31 14.9   77     6  29
61   31.5     138  8.0   83     6  30
62  135.0     269  4.1   84     7   1
63   49.0     248  9.2   85     7   2
64   32.0     236  9.2   81     7   3
65   31.5     101 10.9   84     7   4
66   64.0     175  4.6   83     7   5
67   40.0     314 10.9   83     7   6
68   77.0     276  5.1   88     7   7
69   97.0     267  6.3   92     7   8
70   97.0     272  5.7   92     7   9
71   85.0     175  7.4   89     7  10
72   31.5     139  8.6   82     7  11
73   10.0     264 14.3   73     7  12
74   27.0     175 14.9   81     7  13
75   31.5     291 14.9   91     7  14
76    7.0      48 14.3   80     7  15
77   48.0     260  6.9   81     7  16
78   35.0     274 10.3   82     7  17
79   61.0     285  6.3   84     7  18
80   79.0     187  5.1   87     7  19
81   63.0     220 11.5   85     7  20
82   16.0       7  6.9   74     7  21
83   31.5     258  9.7   81     7  22
84   31.5     295 11.5   82     7  23
85   80.0     294  8.6   86     7  24
86  108.0     223  8.0   85     7  25
87   20.0      81  8.6   82     7  26
88   52.0      82 12.0   86     7  27
89   82.0     213  7.4   88     7  28
90   50.0     275  7.4   86     7  29
91   64.0     253  7.4   83     7  30
92   59.0     254  9.2   81     7  31
93   39.0      83  6.9   81     8   1
94    9.0      24 13.8   81     8   2
95   16.0      77  7.4   82     8   3
96   78.0     205  6.9   86     8   4
97   35.0     205  7.4   85     8   5
98   66.0     205  4.6   87     8   6
99  122.0     255  4.0   89     8   7
100  89.0     229 10.3   90     8   8
101 110.0     207  8.0   90     8   9
102  31.5     222  8.6   92     8  10
103  31.5     137 11.5   86     8  11
104  44.0     192 11.5   86     8  12
105  28.0     273 11.5   82     8  13
106  65.0     157  9.7   80     8  14
107  31.5      64 11.5   79     8  15
108  22.0      71 10.3   77     8  16
109  59.0      51  6.3   79     8  17
110  23.0     115  7.4   76     8  18
111  31.0     244 10.9   78     8  19
112  44.0     190 10.3   78     8  20
113  21.0     259 15.5   77     8  21
114   9.0      36 14.3   72     8  22
115  31.5     255 12.6   75     8  23
116  45.0     212  9.7   79     8  24
117 168.0     238  3.4   81     8  25
118  73.0     215  8.0   86     8  26
119  31.5     153  5.7   88     8  27
120  76.0     203  9.7   97     8  28
121 118.0     225  2.3   94     8  29
122  84.0     237  6.3   96     8  30
123  85.0     188  6.3   94     8  31
124  96.0     167  6.9   91     9   1
125  78.0     197  5.1   92     9   2
126  73.0     183  2.8   93     9   3
127  91.0     189  4.6   93     9   4
128  47.0      95  7.4   87     9   5
129  32.0      92 15.5   84     9   6
130  20.0     252 10.9   80     9   7
131  23.0     220 10.3   78     9   8
132  21.0     230 10.9   75     9   9
133  24.0     259  9.7   73     9  10
134  44.0     236 14.9   81     9  11
135  21.0     259 15.5   76     9  12
136  28.0     238  6.3   77     9  13
137   9.0      24 10.9   71     9  14
138  13.0     112 11.5   71     9  15
139  46.0     237  6.9   78     9  16
140  18.0     224 13.8   67     9  17
141  13.0      27 10.3   76     9  18
142  24.0     238 10.3   68     9  19
143  16.0     201  8.0   82     9  20
144  13.0     238 12.6   64     9  21
145  23.0      14  9.2   71     9  22
146  36.0     139 10.3   81     9  23
147   7.0      49 10.3   69     9  24
148  14.0      20 16.6   63     9  25
149  30.0     193  6.9   70     9  26
150  31.5     145 13.2   77     9  27
151  14.0     191 14.3   75     9  28
152  18.0     131  8.0   76     9  29
153  20.0     223 11.5   68     9  30
> 
> impute_median_at(airquality,
+                 .vars = vars(Ozone))
    Ozone Solar.R Wind Temp Month Day
1    41.0     190  7.4   67     5   1
2    36.0     118  8.0   72     5   2
3    12.0     149 12.6   74     5   3
4    18.0     313 11.5   62     5   4
5    31.5      NA 14.3   56     5   5
6    28.0      NA 14.9   66     5   6
7    23.0     299  8.6   65     5   7
8    19.0      99 13.8   59     5   8
9     8.0      19 20.1   61     5   9
10   31.5     194  8.6   69     5  10
11    7.0      NA  6.9   74     5  11
12   16.0     256  9.7   69     5  12
13   11.0     290  9.2   66     5  13
14   14.0     274 10.9   68     5  14
15   18.0      65 13.2   58     5  15
16   14.0     334 11.5   64     5  16
17   34.0     307 12.0   66     5  17
18    6.0      78 18.4   57     5  18
19   30.0     322 11.5   68     5  19
20   11.0      44  9.7   62     5  20
21    1.0       8  9.7   59     5  21
22   11.0     320 16.6   73     5  22
23    4.0      25  9.7   61     5  23
24   32.0      92 12.0   61     5  24
25   31.5      66 16.6   57     5  25
26   31.5     266 14.9   58     5  26
27   31.5      NA  8.0   57     5  27
28   23.0      13 12.0   67     5  28
29   45.0     252 14.9   81     5  29
30  115.0     223  5.7   79     5  30
31   37.0     279  7.4   76     5  31
32   31.5     286  8.6   78     6   1
33   31.5     287  9.7   74     6   2
34   31.5     242 16.1   67     6   3
35   31.5     186  9.2   84     6   4
36   31.5     220  8.6   85     6   5
37   31.5     264 14.3   79     6   6
38   29.0     127  9.7   82     6   7
39   31.5     273  6.9   87     6   8
40   71.0     291 13.8   90     6   9
41   39.0     323 11.5   87     6  10
42   31.5     259 10.9   93     6  11
43   31.5     250  9.2   92     6  12
44   23.0     148  8.0   82     6  13
45   31.5     332 13.8   80     6  14
46   31.5     322 11.5   79     6  15
47   21.0     191 14.9   77     6  16
48   37.0     284 20.7   72     6  17
49   20.0      37  9.2   65     6  18
50   12.0     120 11.5   73     6  19
51   13.0     137 10.3   76     6  20
52   31.5     150  6.3   77     6  21
53   31.5      59  1.7   76     6  22
54   31.5      91  4.6   76     6  23
55   31.5     250  6.3   76     6  24
56   31.5     135  8.0   75     6  25
57   31.5     127  8.0   78     6  26
58   31.5      47 10.3   73     6  27
59   31.5      98 11.5   80     6  28
60   31.5      31 14.9   77     6  29
61   31.5     138  8.0   83     6  30
62  135.0     269  4.1   84     7   1
63   49.0     248  9.2   85     7   2
64   32.0     236  9.2   81     7   3
65   31.5     101 10.9   84     7   4
66   64.0     175  4.6   83     7   5
67   40.0     314 10.9   83     7   6
68   77.0     276  5.1   88     7   7
69   97.0     267  6.3   92     7   8
70   97.0     272  5.7   92     7   9
71   85.0     175  7.4   89     7  10
72   31.5     139  8.6   82     7  11
73   10.0     264 14.3   73     7  12
74   27.0     175 14.9   81     7  13
75   31.5     291 14.9   91     7  14
76    7.0      48 14.3   80     7  15
77   48.0     260  6.9   81     7  16
78   35.0     274 10.3   82     7  17
79   61.0     285  6.3   84     7  18
80   79.0     187  5.1   87     7  19
81   63.0     220 11.5   85     7  20
82   16.0       7  6.9   74     7  21
83   31.5     258  9.7   81     7  22
84   31.5     295 11.5   82     7  23
85   80.0     294  8.6   86     7  24
86  108.0     223  8.0   85     7  25
87   20.0      81  8.6   82     7  26
88   52.0      82 12.0   86     7  27
89   82.0     213  7.4   88     7  28
90   50.0     275  7.4   86     7  29
91   64.0     253  7.4   83     7  30
92   59.0     254  9.2   81     7  31
93   39.0      83  6.9   81     8   1
94    9.0      24 13.8   81     8   2
95   16.0      77  7.4   82     8   3
96   78.0      NA  6.9   86     8   4
97   35.0      NA  7.4   85     8   5
98   66.0      NA  4.6   87     8   6
99  122.0     255  4.0   89     8   7
100  89.0     229 10.3   90     8   8
101 110.0     207  8.0   90     8   9
102  31.5     222  8.6   92     8  10
103  31.5     137 11.5   86     8  11
104  44.0     192 11.5   86     8  12
105  28.0     273 11.5   82     8  13
106  65.0     157  9.7   80     8  14
107  31.5      64 11.5   79     8  15
108  22.0      71 10.3   77     8  16
109  59.0      51  6.3   79     8  17
110  23.0     115  7.4   76     8  18
111  31.0     244 10.9   78     8  19
112  44.0     190 10.3   78     8  20
113  21.0     259 15.5   77     8  21
114   9.0      36 14.3   72     8  22
115  31.5     255 12.6   75     8  23
116  45.0     212  9.7   79     8  24
117 168.0     238  3.4   81     8  25
118  73.0     215  8.0   86     8  26
119  31.5     153  5.7   88     8  27
120  76.0     203  9.7   97     8  28
121 118.0     225  2.3   94     8  29
122  84.0     237  6.3   96     8  30
123  85.0     188  6.3   94     8  31
124  96.0     167  6.9   91     9   1
125  78.0     197  5.1   92     9   2
126  73.0     183  2.8   93     9   3
127  91.0     189  4.6   93     9   4
128  47.0      95  7.4   87     9   5
129  32.0      92 15.5   84     9   6
130  20.0     252 10.9   80     9   7
131  23.0     220 10.3   78     9   8
132  21.0     230 10.9   75     9   9
133  24.0     259  9.7   73     9  10
134  44.0     236 14.9   81     9  11
135  21.0     259 15.5   76     9  12
136  28.0     238  6.3   77     9  13
137   9.0      24 10.9   71     9  14
138  13.0     112 11.5   71     9  15
139  46.0     237  6.9   78     9  16
140  18.0     224 13.8   67     9  17
141  13.0      27 10.3   76     9  18
142  24.0     238 10.3   68     9  19
143  16.0     201  8.0   82     9  20
144  13.0     238 12.6   64     9  21
145  23.0      14  9.2   71     9  22
146  36.0     139 10.3   81     9  23
147   7.0      49 10.3   69     9  24
148  14.0      20 16.6   63     9  25
149  30.0     193  6.9   70     9  26
150  31.5     145 13.2   77     9  27
151  14.0     191 14.3   75     9  28
152  18.0     131  8.0   76     9  29
153  20.0     223 11.5   68     9  30
> 
> impute_median_if(airquality,
+                 .predicate = is.numeric)
    Ozone Solar.R Wind Temp Month Day
1    41.0     190  7.4   67     5   1
2    36.0     118  8.0   72     5   2
3    12.0     149 12.6   74     5   3
4    18.0     313 11.5   62     5   4
5    31.5     205 14.3   56     5   5
6    28.0     205 14.9   66     5   6
7    23.0     299  8.6   65     5   7
8    19.0      99 13.8   59     5   8
9     8.0      19 20.1   61     5   9
10   31.5     194  8.6   69     5  10
11    7.0     205  6.9   74     5  11
12   16.0     256  9.7   69     5  12
13   11.0     290  9.2   66     5  13
14   14.0     274 10.9   68     5  14
15   18.0      65 13.2   58     5  15
16   14.0     334 11.5   64     5  16
17   34.0     307 12.0   66     5  17
18    6.0      78 18.4   57     5  18
19   30.0     322 11.5   68     5  19
20   11.0      44  9.7   62     5  20
21    1.0       8  9.7   59     5  21
22   11.0     320 16.6   73     5  22
23    4.0      25  9.7   61     5  23
24   32.0      92 12.0   61     5  24
25   31.5      66 16.6   57     5  25
26   31.5     266 14.9   58     5  26
27   31.5     205  8.0   57     5  27
28   23.0      13 12.0   67     5  28
29   45.0     252 14.9   81     5  29
30  115.0     223  5.7   79     5  30
31   37.0     279  7.4   76     5  31
32   31.5     286  8.6   78     6   1
33   31.5     287  9.7   74     6   2
34   31.5     242 16.1   67     6   3
35   31.5     186  9.2   84     6   4
36   31.5     220  8.6   85     6   5
37   31.5     264 14.3   79     6   6
38   29.0     127  9.7   82     6   7
39   31.5     273  6.9   87     6   8
40   71.0     291 13.8   90     6   9
41   39.0     323 11.5   87     6  10
42   31.5     259 10.9   93     6  11
43   31.5     250  9.2   92     6  12
44   23.0     148  8.0   82     6  13
45   31.5     332 13.8   80     6  14
46   31.5     322 11.5   79     6  15
47   21.0     191 14.9   77     6  16
48   37.0     284 20.7   72     6  17
49   20.0      37  9.2   65     6  18
50   12.0     120 11.5   73     6  19
51   13.0     137 10.3   76     6  20
52   31.5     150  6.3   77     6  21
53   31.5      59  1.7   76     6  22
54   31.5      91  4.6   76     6  23
55   31.5     250  6.3   76     6  24
56   31.5     135  8.0   75     6  25
57   31.5     127  8.0   78     6  26
58   31.5      47 10.3   73     6  27
59   31.5      98 11.5   80     6  28
60   31.5      31 14.9   77     6  29
61   31.5     138  8.0   83     6  30
62  135.0     269  4.1   84     7   1
63   49.0     248  9.2   85     7   2
64   32.0     236  9.2   81     7   3
65   31.5     101 10.9   84     7   4
66   64.0     175  4.6   83     7   5
67   40.0     314 10.9   83     7   6
68   77.0     276  5.1   88     7   7
69   97.0     267  6.3   92     7   8
70   97.0     272  5.7   92     7   9
71   85.0     175  7.4   89     7  10
72   31.5     139  8.6   82     7  11
73   10.0     264 14.3   73     7  12
74   27.0     175 14.9   81     7  13
75   31.5     291 14.9   91     7  14
76    7.0      48 14.3   80     7  15
77   48.0     260  6.9   81     7  16
78   35.0     274 10.3   82     7  17
79   61.0     285  6.3   84     7  18
80   79.0     187  5.1   87     7  19
81   63.0     220 11.5   85     7  20
82   16.0       7  6.9   74     7  21
83   31.5     258  9.7   81     7  22
84   31.5     295 11.5   82     7  23
85   80.0     294  8.6   86     7  24
86  108.0     223  8.0   85     7  25
87   20.0      81  8.6   82     7  26
88   52.0      82 12.0   86     7  27
89   82.0     213  7.4   88     7  28
90   50.0     275  7.4   86     7  29
91   64.0     253  7.4   83     7  30
92   59.0     254  9.2   81     7  31
93   39.0      83  6.9   81     8   1
94    9.0      24 13.8   81     8   2
95   16.0      77  7.4   82     8   3
96   78.0     205  6.9   86     8   4
97   35.0     205  7.4   85     8   5
98   66.0     205  4.6   87     8   6
99  122.0     255  4.0   89     8   7
100  89.0     229 10.3   90     8   8
101 110.0     207  8.0   90     8   9
102  31.5     222  8.6   92     8  10
103  31.5     137 11.5   86     8  11
104  44.0     192 11.5   86     8  12
105  28.0     273 11.5   82     8  13
106  65.0     157  9.7   80     8  14
107  31.5      64 11.5   79     8  15
108  22.0      71 10.3   77     8  16
109  59.0      51  6.3   79     8  17
110  23.0     115  7.4   76     8  18
111  31.0     244 10.9   78     8  19
112  44.0     190 10.3   78     8  20
113  21.0     259 15.5   77     8  21
114   9.0      36 14.3   72     8  22
115  31.5     255 12.6   75     8  23
116  45.0     212  9.7   79     8  24
117 168.0     238  3.4   81     8  25
118  73.0     215  8.0   86     8  26
119  31.5     153  5.7   88     8  27
120  76.0     203  9.7   97     8  28
121 118.0     225  2.3   94     8  29
122  84.0     237  6.3   96     8  30
123  85.0     188  6.3   94     8  31
124  96.0     167  6.9   91     9   1
125  78.0     197  5.1   92     9   2
126  73.0     183  2.8   93     9   3
127  91.0     189  4.6   93     9   4
128  47.0      95  7.4   87     9   5
129  32.0      92 15.5   84     9   6
130  20.0     252 10.9   80     9   7
131  23.0     220 10.3   78     9   8
132  21.0     230 10.9   75     9   9
133  24.0     259  9.7   73     9  10
134  44.0     236 14.9   81     9  11
135  21.0     259 15.5   76     9  12
136  28.0     238  6.3   77     9  13
137   9.0      24 10.9   71     9  14
138  13.0     112 11.5   71     9  15
139  46.0     237  6.9   78     9  16
140  18.0     224 13.8   67     9  17
141  13.0      27 10.3   76     9  18
142  24.0     238 10.3   68     9  19
143  16.0     201  8.0   82     9  20
144  13.0     238 12.6   64     9  21
145  23.0      14  9.2   71     9  22
146  36.0     139 10.3   81     9  23
147   7.0      49 10.3   69     9  24
148  14.0      20 16.6   63     9  25
149  30.0     193  6.9   70     9  26
150  31.5     145 13.2   77     9  27
151  14.0     191 14.3   75     9  28
152  18.0     131  8.0   76     9  29
153  20.0     223 11.5   68     9  30
> 
> ## Not run: 
> ##D library(ggplot2)
> ##D airquality %>%
> ##D   bind_shadow() %>%
> ##D   impute_median_all() %>%
> ##D   add_label_shadow() %>%
> ##D   ggplot(aes(x = Ozone,
> ##D              y = Solar.R,
> ##D              colour = any_missing)) +
> ##D          geom_point()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("shade")
> ### * shade
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shade
> ### Title: Create new levels of missing
> ### Aliases: shade
> 
> ### ** Examples
> 
> df <- tibble::tribble(
+   ~wind, ~temp,
+   -99,    45,
+   68,    NA,
+   72,    25
+   )
> 
> shade(df$wind)
[1] !NA !NA !NA
Levels: !NA NA
> 
> shade(df$wind,
+       inst_fail = -99)
[1] NA_inst_fail !NA          !NA         
Levels: !NA NA NA_inst_fail
> 
> shade(df$wind,
+       inst_fail = 100)
[1] !NA !NA !NA
Levels: !NA NA NA_inst_fail
> 
> 
> 
> 
> cleanEx()
> nameEx("shadow_expand_relevel")
> ### * shadow_expand_relevel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shadow_expand_relevel
> ### Title: Expand and relevel a shadow column with a new suffix
> ### Aliases: shadow_expand_relevel
> 
> ### ** Examples
> 
> ## Not run: 
> ##D df <- tibble::tribble(
> ##D   ~wind, ~temp,
> ##D   -99,    45,
> ##D   68,    NA,
> ##D   72,    25
> ##D )
> ##D 
> ##D dfs <- bind_shadow(df)
> ##D 
> ##D test_shade <- dfs$wind_NA
> ##D 
> ##D shadow_expand_relevel(test_shade, "weee")
> ##D 
> ##D dfs %>%
> ##D   mutate(temp_NA = shadow_expand_relevel(temp_NA, "weee"))
> ##D 
> ##D 
> ##D # test that this breaks
> ##D shadow_expand_relevel(airquality, "weee")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("shadow_long")
> ### * shadow_long
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shadow_long
> ### Title: Reshape shadow data into a long format
> ### Aliases: shadow_long
> 
> ### ** Examples
> 
> 
> aq_shadow <- bind_shadow(airquality)
> 
> shadow_long(aq_shadow)
[90m# A tibble: 918 x 4[39m
   variable value variable_NA value_NA
   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m       [3m[90m<chr>[39m[23m   
[90m 1[39m Ozone       41 Ozone_NA    !NA     
[90m 2[39m Ozone       36 Ozone_NA    !NA     
[90m 3[39m Ozone       12 Ozone_NA    !NA     
[90m 4[39m Ozone       18 Ozone_NA    !NA     
[90m 5[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m 6[39m Ozone       28 Ozone_NA    !NA     
[90m 7[39m Ozone       23 Ozone_NA    !NA     
[90m 8[39m Ozone       19 Ozone_NA    !NA     
[90m 9[39m Ozone        8 Ozone_NA    !NA     
[90m10[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m# â€¦ with 908 more rows[39m
> 
> # then filter only on Ozone
> shadow_long(aq_shadow, Ozone)
[90m# A tibble: 153 x 4[39m
   variable value variable_NA value_NA
   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m       [3m[90m<chr>[39m[23m   
[90m 1[39m Ozone       41 Ozone_NA    !NA     
[90m 2[39m Ozone       36 Ozone_NA    !NA     
[90m 3[39m Ozone       12 Ozone_NA    !NA     
[90m 4[39m Ozone       18 Ozone_NA    !NA     
[90m 5[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m 6[39m Ozone       28 Ozone_NA    !NA     
[90m 7[39m Ozone       23 Ozone_NA    !NA     
[90m 8[39m Ozone       19 Ozone_NA    !NA     
[90m 9[39m Ozone        8 Ozone_NA    !NA     
[90m10[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m# â€¦ with 143 more rows[39m
> 
> shadow_long(aq_shadow, Ozone, Solar.R)
[90m# A tibble: 306 x 4[39m
   variable value variable_NA value_NA
   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m       [3m[90m<chr>[39m[23m   
[90m 1[39m Ozone       41 Ozone_NA    !NA     
[90m 2[39m Ozone       36 Ozone_NA    !NA     
[90m 3[39m Ozone       12 Ozone_NA    !NA     
[90m 4[39m Ozone       18 Ozone_NA    !NA     
[90m 5[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m 6[39m Ozone       28 Ozone_NA    !NA     
[90m 7[39m Ozone       23 Ozone_NA    !NA     
[90m 8[39m Ozone       19 Ozone_NA    !NA     
[90m 9[39m Ozone        8 Ozone_NA    !NA     
[90m10[39m Ozone       [31mNA[39m Ozone_NA    NA      
[90m# â€¦ with 296 more rows[39m
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("shadow_shift")
> ### * shadow_shift
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shadow_shift
> ### Title: Shift missing values to facilitate missing data
> ###   exploration/visualisation
> ### Aliases: shadow_shift
> 
> ### ** Examples
> 
> airquality$Ozone
  [1]  41  36  12  18  NA  28  23  19   8  NA   7  16  11  14  18  14  34   6
 [19]  30  11   1  11   4  32  NA  NA  NA  23  45 115  37  NA  NA  NA  NA  NA
 [37]  NA  29  NA  71  39  NA  NA  23  NA  NA  21  37  20  12  13  NA  NA  NA
 [55]  NA  NA  NA  NA  NA  NA  NA 135  49  32  NA  64  40  77  97  97  85  NA
 [73]  10  27  NA   7  48  35  61  79  63  16  NA  NA  80 108  20  52  82  50
 [91]  64  59  39   9  16  78  35  66 122  89 110  NA  NA  44  28  65  NA  22
[109]  59  23  31  44  21   9  NA  45 168  73  NA  76 118  84  85  96  78  73
[127]  91  47  32  20  23  21  24  44  21  28   9  13  46  18  13  24  16  13
[145]  23  36   7  14  30  NA  14  18  20
> shadow_shift(airquality$Ozone)
  [1]  41.00000  36.00000  12.00000  18.00000 -19.72321  28.00000  23.00000
  [8]  19.00000   8.00000 -18.51277   7.00000  16.00000  11.00000  14.00000
 [15]  18.00000  14.00000  34.00000   6.00000  30.00000  11.00000   1.00000
 [22]  11.00000   4.00000  32.00000 -17.81863 -19.43853 -15.14310  23.00000
 [29]  45.00000 115.00000  37.00000 -16.17315 -14.65883 -17.85609 -13.29299
 [36] -16.16323 -19.60935  29.00000 -19.65780  71.00000  39.00000 -13.40961
 [43] -13.53728  23.00000 -19.65993 -16.48342  21.00000  37.00000  20.00000
 [50]  12.00000  13.00000 -17.17718 -16.74073 -13.65786 -16.78786 -12.30098
 [57] -13.33171 -16.77414 -17.08225 -15.98818 -19.17558 135.00000  49.00000
 [64]  32.00000 -14.27138  64.00000  40.00000  77.00000  97.00000  97.00000
 [71]  85.00000 -13.51764  10.00000  27.00000 -13.48998   7.00000  48.00000
 [78]  35.00000  61.00000  79.00000  63.00000  16.00000 -16.92150 -16.60335
 [85]  80.00000 108.00000  20.00000  52.00000  82.00000  50.00000  64.00000
 [92]  59.00000  39.00000   9.00000  16.00000  78.00000  35.00000  66.00000
 [99] 122.00000  89.00000 110.00000 -14.78907 -16.19151  44.00000  28.00000
[106]  65.00000 -19.73591  22.00000  59.00000  23.00000  31.00000  44.00000
[113]  21.00000   9.00000 -18.92235  45.00000 168.00000  73.00000 -14.86296
[120]  76.00000 118.00000  84.00000  85.00000  96.00000  78.00000  73.00000
[127]  91.00000  47.00000  32.00000  20.00000  23.00000  21.00000  24.00000
[134]  44.00000  21.00000  28.00000   9.00000  13.00000  46.00000  18.00000
[141]  13.00000  24.00000  16.00000  13.00000  23.00000  36.00000   7.00000
[148]  14.00000  30.00000 -14.83089  14.00000  18.00000  20.00000
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> airquality %>%
+     mutate(Ozone_shift = shadow_shift(Ozone))
    Ozone Solar.R Wind Temp Month Day Ozone_shift
1      41     190  7.4   67     5   1    41.00000
2      36     118  8.0   72     5   2    36.00000
3      12     149 12.6   74     5   3    12.00000
4      18     313 11.5   62     5   4    18.00000
5      NA      NA 14.3   56     5   5   -19.72321
6      28      NA 14.9   66     5   6    28.00000
7      23     299  8.6   65     5   7    23.00000
8      19      99 13.8   59     5   8    19.00000
9       8      19 20.1   61     5   9     8.00000
10     NA     194  8.6   69     5  10   -18.51277
11      7      NA  6.9   74     5  11     7.00000
12     16     256  9.7   69     5  12    16.00000
13     11     290  9.2   66     5  13    11.00000
14     14     274 10.9   68     5  14    14.00000
15     18      65 13.2   58     5  15    18.00000
16     14     334 11.5   64     5  16    14.00000
17     34     307 12.0   66     5  17    34.00000
18      6      78 18.4   57     5  18     6.00000
19     30     322 11.5   68     5  19    30.00000
20     11      44  9.7   62     5  20    11.00000
21      1       8  9.7   59     5  21     1.00000
22     11     320 16.6   73     5  22    11.00000
23      4      25  9.7   61     5  23     4.00000
24     32      92 12.0   61     5  24    32.00000
25     NA      66 16.6   57     5  25   -17.81863
26     NA     266 14.9   58     5  26   -19.43853
27     NA      NA  8.0   57     5  27   -15.14310
28     23      13 12.0   67     5  28    23.00000
29     45     252 14.9   81     5  29    45.00000
30    115     223  5.7   79     5  30   115.00000
31     37     279  7.4   76     5  31    37.00000
32     NA     286  8.6   78     6   1   -16.17315
33     NA     287  9.7   74     6   2   -14.65883
34     NA     242 16.1   67     6   3   -17.85609
35     NA     186  9.2   84     6   4   -13.29299
36     NA     220  8.6   85     6   5   -16.16323
37     NA     264 14.3   79     6   6   -19.60935
38     29     127  9.7   82     6   7    29.00000
39     NA     273  6.9   87     6   8   -19.65780
40     71     291 13.8   90     6   9    71.00000
41     39     323 11.5   87     6  10    39.00000
42     NA     259 10.9   93     6  11   -13.40961
43     NA     250  9.2   92     6  12   -13.53728
44     23     148  8.0   82     6  13    23.00000
45     NA     332 13.8   80     6  14   -19.65993
46     NA     322 11.5   79     6  15   -16.48342
47     21     191 14.9   77     6  16    21.00000
48     37     284 20.7   72     6  17    37.00000
49     20      37  9.2   65     6  18    20.00000
50     12     120 11.5   73     6  19    12.00000
51     13     137 10.3   76     6  20    13.00000
52     NA     150  6.3   77     6  21   -17.17718
53     NA      59  1.7   76     6  22   -16.74073
54     NA      91  4.6   76     6  23   -13.65786
55     NA     250  6.3   76     6  24   -16.78786
56     NA     135  8.0   75     6  25   -12.30098
57     NA     127  8.0   78     6  26   -13.33171
58     NA      47 10.3   73     6  27   -16.77414
59     NA      98 11.5   80     6  28   -17.08225
60     NA      31 14.9   77     6  29   -15.98818
61     NA     138  8.0   83     6  30   -19.17558
62    135     269  4.1   84     7   1   135.00000
63     49     248  9.2   85     7   2    49.00000
64     32     236  9.2   81     7   3    32.00000
65     NA     101 10.9   84     7   4   -14.27138
66     64     175  4.6   83     7   5    64.00000
67     40     314 10.9   83     7   6    40.00000
68     77     276  5.1   88     7   7    77.00000
69     97     267  6.3   92     7   8    97.00000
70     97     272  5.7   92     7   9    97.00000
71     85     175  7.4   89     7  10    85.00000
72     NA     139  8.6   82     7  11   -13.51764
73     10     264 14.3   73     7  12    10.00000
74     27     175 14.9   81     7  13    27.00000
75     NA     291 14.9   91     7  14   -13.48998
76      7      48 14.3   80     7  15     7.00000
77     48     260  6.9   81     7  16    48.00000
78     35     274 10.3   82     7  17    35.00000
79     61     285  6.3   84     7  18    61.00000
80     79     187  5.1   87     7  19    79.00000
81     63     220 11.5   85     7  20    63.00000
82     16       7  6.9   74     7  21    16.00000
83     NA     258  9.7   81     7  22   -16.92150
84     NA     295 11.5   82     7  23   -16.60335
85     80     294  8.6   86     7  24    80.00000
86    108     223  8.0   85     7  25   108.00000
87     20      81  8.6   82     7  26    20.00000
88     52      82 12.0   86     7  27    52.00000
89     82     213  7.4   88     7  28    82.00000
90     50     275  7.4   86     7  29    50.00000
91     64     253  7.4   83     7  30    64.00000
92     59     254  9.2   81     7  31    59.00000
93     39      83  6.9   81     8   1    39.00000
94      9      24 13.8   81     8   2     9.00000
95     16      77  7.4   82     8   3    16.00000
96     78      NA  6.9   86     8   4    78.00000
97     35      NA  7.4   85     8   5    35.00000
98     66      NA  4.6   87     8   6    66.00000
99    122     255  4.0   89     8   7   122.00000
100    89     229 10.3   90     8   8    89.00000
101   110     207  8.0   90     8   9   110.00000
102    NA     222  8.6   92     8  10   -14.78907
103    NA     137 11.5   86     8  11   -16.19151
104    44     192 11.5   86     8  12    44.00000
105    28     273 11.5   82     8  13    28.00000
106    65     157  9.7   80     8  14    65.00000
107    NA      64 11.5   79     8  15   -19.73591
108    22      71 10.3   77     8  16    22.00000
109    59      51  6.3   79     8  17    59.00000
110    23     115  7.4   76     8  18    23.00000
111    31     244 10.9   78     8  19    31.00000
112    44     190 10.3   78     8  20    44.00000
113    21     259 15.5   77     8  21    21.00000
114     9      36 14.3   72     8  22     9.00000
115    NA     255 12.6   75     8  23   -18.92235
116    45     212  9.7   79     8  24    45.00000
117   168     238  3.4   81     8  25   168.00000
118    73     215  8.0   86     8  26    73.00000
119    NA     153  5.7   88     8  27   -14.86296
120    76     203  9.7   97     8  28    76.00000
121   118     225  2.3   94     8  29   118.00000
122    84     237  6.3   96     8  30    84.00000
123    85     188  6.3   94     8  31    85.00000
124    96     167  6.9   91     9   1    96.00000
125    78     197  5.1   92     9   2    78.00000
126    73     183  2.8   93     9   3    73.00000
127    91     189  4.6   93     9   4    91.00000
128    47      95  7.4   87     9   5    47.00000
129    32      92 15.5   84     9   6    32.00000
130    20     252 10.9   80     9   7    20.00000
131    23     220 10.3   78     9   8    23.00000
132    21     230 10.9   75     9   9    21.00000
133    24     259  9.7   73     9  10    24.00000
134    44     236 14.9   81     9  11    44.00000
135    21     259 15.5   76     9  12    21.00000
136    28     238  6.3   77     9  13    28.00000
137     9      24 10.9   71     9  14     9.00000
138    13     112 11.5   71     9  15    13.00000
139    46     237  6.9   78     9  16    46.00000
140    18     224 13.8   67     9  17    18.00000
141    13      27 10.3   76     9  18    13.00000
142    24     238 10.3   68     9  19    24.00000
143    16     201  8.0   82     9  20    16.00000
144    13     238 12.6   64     9  21    13.00000
145    23      14  9.2   71     9  22    23.00000
146    36     139 10.3   81     9  23    36.00000
147     7      49 10.3   69     9  24     7.00000
148    14      20 16.6   63     9  25    14.00000
149    30     193  6.9   70     9  26    30.00000
150    NA     145 13.2   77     9  27   -14.83089
151    14     191 14.3   75     9  28    14.00000
152    18     131  8.0   76     9  29    18.00000
153    20     223 11.5   68     9  30    20.00000
> 
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™

> nameEx("test_if_dataframe")
> ### * test_if_dataframe
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test_if_dataframe
> ### Title: Test if input is a data.frame
> ### Aliases: test_if_dataframe
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # success
> ##D test_if_dataframe(airquality)
> ##D #fail
> ##D my_test <- matrix(10)
> ##D test_if_dataframe(my_test)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("test_if_missing")
> ### * test_if_missing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test_if_missing
> ### Title: Test if the input is Missing
> ### Aliases: test_if_missing
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # success
> ##D my_test <- x
> ##D test_if_null(my_test)
> ##D #fail
> ##D test_if_missing()
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("test_if_null")
> ### * test_if_null
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test_if_null
> ### Title: Test if the input is NULL
> ### Aliases: test_if_null
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # success
> ##D test_if_null(airquality)
> ##D #fail
> ##D my_test <- NULL
> ##D test_if_null(my_test)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("unbinders")
> ### * unbinders
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: unbinders
> ### Title: Unbind (remove) shadow from data, and vice versa
> ### Aliases: unbinders unbind_shadow unbind_data
> 
> ### ** Examples
> 
> 
> # bind shadow columns
> aq_sh <- bind_shadow(airquality)
> 
> # print data
> aq_sh
[90m# A tibble: 153 x 12[39m
   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA Wind_NA Temp_NA
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m  
[90m 1[39m    41     190   7.4    67     5     1 !NA      !NA        !NA     !NA    
[90m 2[39m    36     118   8      72     5     2 !NA      !NA        !NA     !NA    
[90m 3[39m    12     149  12.6    74     5     3 !NA      !NA        !NA     !NA    
[90m 4[39m    18     313  11.5    62     5     4 !NA      !NA        !NA     !NA    
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5 NA       NA         !NA     !NA    
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6 !NA      NA         !NA     !NA    
[90m 7[39m    23     299   8.6    65     5     7 !NA      !NA        !NA     !NA    
[90m 8[39m    19      99  13.8    59     5     8 !NA      !NA        !NA     !NA    
[90m 9[39m     8      19  20.1    61     5     9 !NA      !NA        !NA     !NA    
[90m10[39m    [31mNA[39m     194   8.6    69     5    10 NA       !NA        !NA     !NA    
[90m# â€¦ with 143 more rows, and 2 more variables: Month_NA [3m[90m<fct>[90m[23m, Day_NA [3m[90m<fct>[90m[23m[39m
> 
> # remove shadow columns
> unbind_shadow(aq_sh)
[90m# A tibble: 153 x 6[39m
   Ozone Solar.R  Wind  Temp Month   Day
   [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m
[90m 1[39m    41     190   7.4    67     5     1
[90m 2[39m    36     118   8      72     5     2
[90m 3[39m    12     149  12.6    74     5     3
[90m 4[39m    18     313  11.5    62     5     4
[90m 5[39m    [31mNA[39m      [31mNA[39m  14.3    56     5     5
[90m 6[39m    28      [31mNA[39m  14.9    66     5     6
[90m 7[39m    23     299   8.6    65     5     7
[90m 8[39m    19      99  13.8    59     5     8
[90m 9[39m     8      19  20.1    61     5     9
[90m10[39m    [31mNA[39m     194   8.6    69     5    10
[90m# â€¦ with 143 more rows[39m
> 
> # remove data
> unbind_data(aq_sh)
[90m# A tibble: 153 x 6[39m
   Ozone_NA Solar.R_NA Wind_NA Temp_NA Month_NA Day_NA
   [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m      [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m   [3m[90m<fct>[39m[23m    [3m[90m<fct>[39m[23m 
[90m 1[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 2[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 3[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 4[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 5[39m NA       NA         !NA     !NA     !NA      !NA   
[90m 6[39m !NA      NA         !NA     !NA     !NA      !NA   
[90m 7[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 8[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m 9[39m !NA      !NA        !NA     !NA     !NA      !NA   
[90m10[39m NA       !NA        !NA     !NA     !NA      !NA   
[90m# â€¦ with 143 more rows[39m
> 
> # errors when you don't use data with shadows
> ## Not run: 
> ##D  unbind_data(airquality)
> ##D  unbind_shadow(airquality)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("update_shadow")
> ### * update_shadow
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: update_shadow
> ### Title: Expand all shadow levels
> ### Aliases: update_shadow
> 
> ### ** Examples
> 
>  ## Not run: 
> ##D df <- tibble::tribble(
> ##D ~wind, ~temp,
> ##D -99,    45,
> ##D 68,    NA,
> ##D 72,    25
> ##D )
> ##D 
> ##D 
> ##D dfs <- bind_shadow(df)
> ##D 
> ##D update_shadow(dfs, "weee")
> ##D update_shadow(dfs, "weee") %>% what_levels()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("where")
> ### * where
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: where
> ### Title: Split a call into two components with a useful verb name
> ### Aliases: where .where
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D df <- tibble::tribble(
> ##D ~wind, ~temp,
> ##D -99,    45,
> ##D 68,    NA,
> ##D 72,    25
> ##D )
> ##D 
> ##D dfs <- bind_shadow(df)
> ##D 
> ##D recode_shadow(dfs,
> ##D               temp = .where(wind == -99 ~ "bananas"))
> ##D 
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("where_na")
> ### * where_na
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: where_na
> ### Title: Which rows and cols contain missings?
> ### Aliases: where_na
> 
> ### ** Examples
> 
> 
> where_na(airquality)
      row col
 [1,]   5   1
 [2,]  10   1
 [3,]  25   1
 [4,]  26   1
 [5,]  27   1
 [6,]  32   1
 [7,]  33   1
 [8,]  34   1
 [9,]  35   1
[10,]  36   1
[11,]  37   1
[12,]  39   1
[13,]  42   1
[14,]  43   1
[15,]  45   1
[16,]  46   1
[17,]  52   1
[18,]  53   1
[19,]  54   1
[20,]  55   1
[21,]  56   1
[22,]  57   1
[23,]  58   1
[24,]  59   1
[25,]  60   1
[26,]  61   1
[27,]  65   1
[28,]  72   1
[29,]  75   1
[30,]  83   1
[31,]  84   1
[32,] 102   1
[33,] 103   1
[34,] 107   1
[35,] 115   1
[36,] 119   1
[37,] 150   1
[38,]   5   2
[39,]   6   2
[40,]  11   2
[41,]  27   2
[42,]  96   2
[43,]  97   2
[44,]  98   2
> where_na(oceanbuoys$sea_temp_c)
[1] 463 481 637
> 
> 
> 
> 
> cleanEx()
> nameEx("which_are_shade")
> ### * which_are_shade
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: which_are_shade
> ### Title: Which variables are shades?
> ### Aliases: which_are_shade
> 
> ### ** Examples
> 
> 
> df_shadow <- bind_shadow(airquality)
> 
> which_are_shade(df_shadow)
  Ozone_NA Solar.R_NA    Wind_NA    Temp_NA   Month_NA     Day_NA 
         7          8          9         10         11         12 
> 
> 
> 
> 
> cleanEx()
> nameEx("which_na")
> ### * which_na
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: which_na
> ### Title: Which elements contain missings?
> ### Aliases: which_na
> 
> ### ** Examples
> 
> 
> which_na(airquality)
 [1]   5  10  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52  53  54
[20]  55  56  57  58  59  60  61  65  72  75  83  84 102 103 107 115 119 150 158
[39] 159 164 180 249 250 251
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  20.877 0.563 23.095 0.002 0.005 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
